<testsuites name="jest tests">
  <testsuite name="Progress Indicator" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:35:23" time="4.886" tests="8">
    <testcase classname="Progress Indicator should be possible to create a component" name="Progress Indicator should be possible to create a component" time="0.018">
    </testcase>
    <testcase classname="Progress Indicator size property should be &quot;default&quot; if unspecified" name="Progress Indicator size property should be &quot;default&quot; if unspecified" time="0.002">
    </testcase>
    <testcase classname="Progress Indicator appearance property should be &quot;default&quot; if unspecified" name="Progress Indicator appearance property should be &quot;default&quot; if unspecified" time="0.001">
    </testcase>
    <testcase classname="Progress Indicator values property should render the correct number of indicators" name="Progress Indicator values property should render the correct number of indicators" time="0.006">
    </testcase>
    <testcase classname="Progress Indicator values property should accept an array of any value types" name="Progress Indicator values property should accept an array of any value types" time="0.003">
    </testcase>
    <testcase classname="Progress Indicator onSelect property should return an &lt;IndicatorDiv /&gt; when NOT specified" name="Progress Indicator onSelect property should return an &lt;IndicatorDiv /&gt; when NOT specified" time="0.055">
    </testcase>
    <testcase classname="Progress Indicator onSelect property should return an &lt;IndicatorButton /&gt; when specified" name="Progress Indicator onSelect property should return an &lt;IndicatorButton /&gt; when specified" time="0.02">
    </testcase>
    <testcase classname="Progress Indicator selectedIndex property should return a &quot;selected&quot; &lt;Indicator* /&gt; at the correct index" name="Progress Indicator selectedIndex property should return a &quot;selected&quot; &lt;Indicator* /&gt; at the correct index" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="running release" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:35:23" time="7.161" tests="8">
    <testcase classname="running release in a simple project when there are no changeset commits should warn if no changeset commits exist" name="running release in a simple project when there are no changeset commits should warn if no changeset commits exist" time="0.046">
    </testcase>
    <testcase classname="running release in a simple project when runing in CI When there is no changeset commits should still run bolt.publish" name="running release in a simple project when runing in CI When there is no changeset commits should still run bolt.publish" time="0.014">
    </testcase>
    <testcase classname="running release in a simple project when runing in CI When there is a changeset commit should bump releasedPackages" name="running release in a simple project when runing in CI When there is a changeset commit should bump releasedPackages" time="0.039">
    </testcase>
    <testcase classname="running release in a simple project when runing in CI When there is a changeset commit should git add the expected files" name="running release in a simple project when runing in CI When there is a changeset commit should git add the expected files" time="0.029">
    </testcase>
    <testcase classname="running release in a simple project when runing in CI When there is a changeset commit should run bolt.publish" name="running release in a simple project when runing in CI When there is a changeset commit should run bolt.publish" time="0.022">
    </testcase>
    <testcase classname="running release in a simple project when runing in CI When there is a changeset commit should add git tags" name="running release in a simple project when runing in CI When there is a changeset commit should add git tags" time="0.027">
    </testcase>
    <testcase classname="running release in a simple project when runing in CI when there are multiple changeset commits should bump releasedPackages" name="running release in a simple project when runing in CI when there are multiple changeset commits should bump releasedPackages" time="0.019">
    </testcase>
    <testcase classname="running release in a simple project when runing in CI when there are multiple changeset commits should bump multiple released packages if required" name="running release in a simple project when runing in CI when there are multiple changeset commits should bump multiple released packages if required" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common json-schema v1" errors="0" failures="1" skipped="0" timestamp="2018-01-09T09:35:23" time="7.676" tests="1">
    <testcase classname="@atlaskit/editor-common json-schema v1 encountered a declaration exception" name="@atlaskit/editor-common json-schema v1 encountered a declaration exception" time="0.292">
      <failure>SyntaxError: Unexpected token } in JSON at position 654
    at JSON.parse (&lt;anonymous&gt;)
    at /Users/jyotipuri/humble/atl/atlaskit-mk-2/packages/fabric/editor-common/test-helpers/index.ts:10:22
    at Array.reduce (&lt;anonymous&gt;)
    at Object.&lt;anonymous&gt;.exports.readFilesSync (/Users/jyotipuri/humble/atl/atlaskit-mk-2/packages/fabric/editor-common/test-helpers/index.ts:5:31)
    at Suite.&lt;anonymous&gt; (/Users/jyotipuri/humble/atl/atlaskit-mk-2/packages/fabric/editor-common/__tests__/json-schema/v1.ts:10:17)
    at addSpecsToSuite (/Users/jyotipuri/humble/atl/atlaskit-mk-2/node_modules/jest-jasmine2/build/jasmine/Env.js:301:25)
    at Env.describe (/Users/jyotipuri/humble/atl/atlaskit-mk-2/node_modules/jest-jasmine2/build/jasmine/Env.js:270:7)
    at describe (/Users/jyotipuri/humble/atl/atlaskit-mk-2/node_modules/jest-jasmine2/build/jasmine/jasmine-light.js:72:18)
    at Object.&lt;anonymous&gt; (/Users/jyotipuri/humble/atl/atlaskit-mk-2/packages/fabric/editor-common/__tests__/json-schema/v1.ts:9:1)
    at Runtime._execModule (/Users/jyotipuri/humble/atl/atlaskit-mk-2/node_modules/jest-runtime/build/index.js:513:13)
    at Runtime.requireModule (/Users/jyotipuri/humble/atl/atlaskit-mk-2/node_modules/jest-runtime/build/index.js:329:14)
    at jasmine2 (/Users/jyotipuri/humble/atl/atlaskit-mk-2/node_modules/jest-jasmine2/build/index.js:97:11)
    at runTest (/Users/jyotipuri/humble/atl/atlaskit-mk-2/node_modules/jest-cli/build/runTest.js:85:10)
    at module.exports (/Users/jyotipuri/humble/atl/atlaskit-mk-2/node_modules/jest-cli/build/TestWorker.js:87:5)
    at handle (/Users/jyotipuri/humble/atl/atlaskit-mk-2/node_modules/worker-farm/lib/child/index.js:44:8)
    at process.&lt;anonymous&gt; (/Users/jyotipuri/humble/atl/atlaskit-mk-2/node_modules/worker-farm/lib/child/index.js:51:3)
    at emitTwo (events.js:125:13)
    at process.emit (events.js:213:7)
    at emit (internal/child_process.js:774:12)
    at _combinedTickCallback (internal/process/next_tick.js:141:11)
    at process._tickCallback (internal/process/next_tick.js:180:9)</failure>
    </testcase>
  </testsuite>
  <testsuite name="CodeBlock" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:35:30" time="1.222" tests="2">
    <testcase classname="CodeBlock should have &quot;markdown&quot; as default language" name="CodeBlock should have &quot;markdown&quot; as default language" time="0.015">
    </testcase>
    <testcase classname="CodeBlock should have &quot;showLineNumbers&quot; enabled by default" name="CodeBlock should have &quot;showLineNumbers&quot; enabled by default" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/ToolbarFeedback" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:35:32" time="0.692" tests="3">
    <testcase classname="@atlaskit/editor-core/ui/ToolbarFeedback analytics should trigger analyticsService.trackEvent when feedback icon is clicked" name="@atlaskit/editor-core/ui/ToolbarFeedback analytics should trigger analyticsService.trackEvent when feedback icon is clicked" time="0.126">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarFeedback should have spacing of toolbar button set to none if editorWidth is less then BreakPoint10" name="@atlaskit/editor-core/ui/ToolbarFeedback should have spacing of toolbar button set to none if editorWidth is less then BreakPoint10" time="0.014">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarFeedback should have spacing of toolbar button set to default if editorWidth is greater then BreakPoint10" name="@atlaskit/editor-core/ui/ToolbarFeedback should have spacing of toolbar button set to default if editorWidth is greater then BreakPoint10" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="CardGenericViewSmall" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:35:32" time="0.418" tests="7">
    <testcase classname="CardGenericViewSmall ThumbnailView should render the &lt;LoadingPlaceholder/&gt; when isLoading=true" name="CardGenericViewSmall ThumbnailView should render the &lt;LoadingPlaceholder/&gt; when isLoading=true" time="0.008">
    </testcase>
    <testcase classname="CardGenericViewSmall ThumbnailView should not render the &lt;LoadingPlaceholder/&gt; when isLoading=false" name="CardGenericViewSmall ThumbnailView should not render the &lt;LoadingPlaceholder/&gt; when isLoading=false" time="0.001">
    </testcase>
    <testcase classname="CardGenericViewSmall ThumbnailView should render the &lt;EmptyPlaceholder/&gt; with a &lt;LinkIcon/&gt; when type=link and url is undefined" name="CardGenericViewSmall ThumbnailView should render the &lt;EmptyPlaceholder/&gt; with a &lt;LinkIcon/&gt; when type=link and url is undefined" time="0.001">
    </testcase>
    <testcase classname="CardGenericViewSmall ThumbnailView should render the &lt;EmptyPlaceholder/&gt; with a &lt;LinkIcon/&gt; when type=file and url is undefined" name="CardGenericViewSmall ThumbnailView should render the &lt;EmptyPlaceholder/&gt; with a &lt;LinkIcon/&gt; when type=file and url is undefined" time="0.002">
    </testcase>
    <testcase classname="CardGenericViewSmall ThumbnailView should not render the &lt;EmptyPlaceholder/&gt; when url is defined" name="CardGenericViewSmall ThumbnailView should not render the &lt;EmptyPlaceholder/&gt; when url is defined" time="0.001">
    </testcase>
    <testcase classname="CardGenericViewSmall ThumbnailView should render the &lt;MediaImage/&gt; when url is defined" name="CardGenericViewSmall ThumbnailView should render the &lt;MediaImage/&gt; when url is defined" time="0.001">
    </testcase>
    <testcase classname="CardGenericViewSmall ThumbnailView should not render the &lt;MediaImage/&gt; when url is undefined" name="CardGenericViewSmall ThumbnailView should not render the &lt;MediaImage/&gt; when url is undefined" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema decisionList node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:35:28" time="7.106" tests="3">
    <testcase classname="@atlaskit/editor-common/schema decisionList node serializes to &lt;ol&gt; with proper data-attributes" name="@atlaskit/editor-common/schema decisionList node serializes to &lt;ol&gt; with proper data-attributes" time="0.01">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema decisionList node matches &lt;ol data-decision-list-local-id&gt;" name="@atlaskit/editor-common/schema decisionList node matches &lt;ol data-decision-list-local-id&gt;" time="0.013">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema decisionList node does not match &lt;ol&gt;" name="@atlaskit/editor-common/schema decisionList node does not match &lt;ol&gt;" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema Bitbucket schema" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:35:35" time="15.813" tests="1">
    <testcase classname="@atlaskit/editor-common/schema Bitbucket schema contains expected nodes and marks" name="@atlaskit/editor-common/schema Bitbucket schema contains expected nodes and marks" time="15.007">
    </testcase>
  </testsuite>
  <testsuite name="hyperlink" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:35:51" time="10.911" tests="72">
    <testcase classname="hyperlink active when select the whole hyperlink text from start to end is active" name="hyperlink active when select the whole hyperlink text from start to end is active" time="0.031">
    </testcase>
    <testcase classname="hyperlink active when select the whole hyperlink text from end to start is active" name="hyperlink active when select the whole hyperlink text from end to start is active" time="0.006">
    </testcase>
    <testcase classname="hyperlink active when select part of the hyperlink text from the end is active" name="hyperlink active when select part of the hyperlink text from the end is active" time="0.004">
    </testcase>
    <testcase classname="hyperlink active when select part of the hyperlink text from the start is active" name="hyperlink active when select part of the hyperlink text from the start is active" time="0.004">
    </testcase>
    <testcase classname="hyperlink active when select part of the hyperlink text in the middle is active" name="hyperlink active when select part of the hyperlink text in the middle is active" time="0.005">
    </testcase>
    <testcase classname="hyperlink active when cursor is winthin hyperlink text is active" name="hyperlink active when cursor is winthin hyperlink text is active" time="0.005">
    </testcase>
    <testcase classname="hyperlink active when cursor at the beginning of hyperlink text returns undefined" name="hyperlink active when cursor at the beginning of hyperlink text returns undefined" time="0.004">
    </testcase>
    <testcase classname="hyperlink active when cursor at the end of hyperlink text returns undefined" name="hyperlink active when cursor at the end of hyperlink text returns undefined" time="0.008">
    </testcase>
    <testcase classname="hyperlink element when select the whole hyperlink text from start to end returns link element" name="hyperlink element when select the whole hyperlink text from start to end returns link element" time="0.004">
    </testcase>
    <testcase classname="hyperlink element when select the whole hyperlink text from end to start returns link element" name="hyperlink element when select the whole hyperlink text from end to start returns link element" time="0.005">
    </testcase>
    <testcase classname="hyperlink element when select part of the hyperlink text from the end returns link element" name="hyperlink element when select part of the hyperlink text from the end returns link element" time="0.006">
    </testcase>
    <testcase classname="hyperlink element when select part of the hyperlink text from the start returns link element" name="hyperlink element when select part of the hyperlink text from the start returns link element" time="0.005">
    </testcase>
    <testcase classname="hyperlink element when select part of the hyperlink text in the middle returns link element" name="hyperlink element when select part of the hyperlink text in the middle returns link element" time="0.005">
    </testcase>
    <testcase classname="hyperlink element when cursor is winthin hyperlink text returns undefined" name="hyperlink element when cursor is winthin hyperlink text returns undefined" time="0.014">
    </testcase>
    <testcase classname="hyperlink element when cursor at the beginning of hyperlink text returns undefined" name="hyperlink element when cursor at the beginning of hyperlink text returns undefined" time="0.005">
    </testcase>
    <testcase classname="hyperlink element when cursor at the end of hyperlink text returns undefined" name="hyperlink element when cursor at the end of hyperlink text returns undefined" time="0.004">
    </testcase>
    <testcase classname="hyperlink API should allow a change handler to be registered" name="hyperlink API should allow a change handler to be registered" time="0.007">
    </testcase>
    <testcase classname="hyperlink API should get current state immediately once subscribed" name="hyperlink API should get current state immediately once subscribed" time="0.005">
    </testcase>
    <testcase classname="hyperlink API should be able to register handlers for state change events" name="hyperlink API should be able to register handlers for state change events" time="0.006">
    </testcase>
    <testcase classname="hyperlink API sets linkable to false when in a describe where links are not supported by the schema" name="hyperlink API sets linkable to false when in a describe where links are not supported by the schema" time="0.004">
    </testcase>
    <testcase classname="hyperlink API sets active to true when link is already in place" name="hyperlink API sets active to true when link is already in place" time="0.003">
    </testcase>
    <testcase classname="hyperlink API does not emit `change` multiple times when the selection moves within a link" name="hyperlink API does not emit `change` multiple times when the selection moves within a link" time="0.005">
    </testcase>
    <testcase classname="hyperlink API emits change when the selection leaves a link" name="hyperlink API emits change when the selection leaves a link" time="0.009">
    </testcase>
    <testcase classname="hyperlink API permits adding a link to an empty selection using the href" name="hyperlink API permits adding a link to an empty selection using the href" time="0.009">
    </testcase>
    <testcase classname="hyperlink API permits adding a link to an empty selection using the href and text" name="hyperlink API permits adding a link to an empty selection using the href and text" time="0.005">
    </testcase>
    <testcase classname="hyperlink API should add http:// for a link without protocol" name="hyperlink API should add http:// for a link without protocol" time="0.034">
    </testcase>
    <testcase classname="hyperlink API should add mailto: for a link if it is an email" name="hyperlink API should add mailto: for a link if it is an email" time="0.023">
    </testcase>
    <testcase classname="hyperlink API does not permit adding a link to an existing link" name="hyperlink API does not permit adding a link to an existing link" time="0.005">
    </testcase>
    <testcase classname="hyperlink API does not permit adding a link when not supported by the schema" name="hyperlink API does not permit adding a link when not supported by the schema" time="0.003">
    </testcase>
    <testcase classname="hyperlink API requires href when adding a link" name="hyperlink API requires href when adding a link" time="0.006">
    </testcase>
    <testcase classname="hyperlink API should not be a part of the link when typing before it" name="hyperlink API should not be a part of the link when typing before it" time="0.009">
    </testcase>
    <testcase classname="hyperlink API should be a part of the link when typing in it" name="hyperlink API should be a part of the link when typing in it" time="0.018">
    </testcase>
    <testcase classname="hyperlink API should create a link if href is invalid" name="hyperlink API should create a link if href is invalid" time="0.007">
    </testcase>
    <testcase classname="hyperlink API should not be a part of the link when typing after it" name="hyperlink API should not be a part of the link when typing after it" time="0.008">
    </testcase>
    <testcase classname="hyperlink API should allow links to be added when the selection is empty" name="hyperlink API should allow links to be added when the selection is empty" time="0.005">
    </testcase>
    <testcase classname="hyperlink API should add link in the correct position" name="hyperlink API should add link in the correct position" time="0.004">
    </testcase>
    <testcase classname="hyperlink API should not be able to unlink a node that has no link" name="hyperlink API should not be able to unlink a node that has no link" time="0.007">
    </testcase>
    <testcase classname="hyperlink API should be able to unlink an existing link" name="hyperlink API should be able to unlink an existing link" time="0.008">
    </testcase>
    <testcase classname="hyperlink API should be able to unlink an existing link" name="hyperlink API should be able to unlink an existing link" time="0.008">
    </testcase>
    <testcase classname="hyperlink API when a link is in the second paragraph should be able to unlink that link" name="hyperlink API when a link is in the second paragraph should be able to unlink that link" time="0.005">
    </testcase>
    <testcase classname="hyperlink API should be able to update existing links with href" name="hyperlink API should be able to update existing links with href" time="0.006">
    </testcase>
    <testcase classname="hyperlink API should be able to update existing links text" name="hyperlink API should be able to update existing links text" time="0.006">
    </testcase>
    <testcase classname="hyperlink API should allow updating a link if new href is empty" name="hyperlink API should allow updating a link if new href is empty" time="0.007">
    </testcase>
    <testcase classname="hyperlink API should not be able to update when not in a link" name="hyperlink API should not be able to update when not in a link" time="0.006">
    </testcase>
    <testcase classname="hyperlink API should escape from link mark when typing at the beginning of the link" name="hyperlink API should escape from link mark when typing at the beginning of the link" time="0.006">
    </testcase>
    <testcase classname="hyperlink API should not escape from link mark when typing at the middle of the link" name="hyperlink API should not escape from link mark when typing at the middle of the link" time="0.008">
    </testcase>
    <testcase classname="hyperlink API should call subscribers when link is clicked" name="hyperlink API should call subscribers when link is clicked" time="0.005">
    </testcase>
    <testcase classname="hyperlink API should call subscribers when link was focused and then editor is blur" name="hyperlink API should call subscribers when link was focused and then editor is blur" time="0.021">
    </testcase>
    <testcase classname="hyperlink API should not call subscribers if link was not focused when editor is blur" name="hyperlink API should not call subscribers if link was not focused when editor is blur" time="0.007">
    </testcase>
    <testcase classname="hyperlink API should not call subscribers if editor is focused but link is not focused" name="hyperlink API should not call subscribers if editor is focused but link is not focused" time="0.005">
    </testcase>
    <testcase classname="hyperlink API should return referring DOM element" name="hyperlink API should return referring DOM element" time="0.007">
    </testcase>
    <testcase classname="hyperlink API should update both href and text on edit if they were same before edit inserts a character inside a link" name="hyperlink API should update both href and text on edit if they were same before edit inserts a character inside a link" time="0.006">
    </testcase>
    <testcase classname="hyperlink API should update both href and text on edit if they were same before edit inserts a character at the end of a link" name="hyperlink API should update both href and text on edit if they were same before edit inserts a character at the end of a link" time="0.008">
    </testcase>
    <testcase classname="hyperlink API should update both href and text on edit if they were same before edit inserts a character at the beginning of a link" name="hyperlink API should update both href and text on edit if they were same before edit inserts a character at the beginning of a link" time="0.007">
    </testcase>
    <testcase classname="hyperlink API should update both href and text on edit if they were same before edit replaces a character inside a link" name="hyperlink API should update both href and text on edit if they were same before edit replaces a character inside a link" time="0.009">
    </testcase>
    <testcase classname="hyperlink API should update both href and text on edit if they were same before edit replaces end of the link with extended content" name="hyperlink API should update both href and text on edit if they were same before edit replaces end of the link with extended content" time="0.009">
    </testcase>
    <testcase classname="hyperlink API should update both href and text on edit if they were same before edit works with valid URLs without scheme" name="hyperlink API should update both href and text on edit if they were same before edit works with valid URLs without scheme" time="0.009">
    </testcase>
    <testcase classname="hyperlink editorFocused when editor is focused it is true" name="hyperlink editorFocused when editor is focused it is true" time="0.007">
    </testcase>
    <testcase classname="hyperlink editorFocused when editor is blur it is false" name="hyperlink editorFocused when editor is blur it is false" time="0.009">
    </testcase>
    <testcase classname="hyperlink showLinkPanel when called without any selection in the editor should set state value showToolbarPanel to true" name="hyperlink showLinkPanel when called without any selection in the editor should set state value showToolbarPanel to true" time="0.006">
    </testcase>
    <testcase classname="hyperlink showLinkPanel when called without any selection in the editor should call subscribers" name="hyperlink showLinkPanel when called without any selection in the editor should call subscribers" time="0.005">
    </testcase>
    <testcase classname="hyperlink showLinkPanel when called with cursor in a link should not call subscribers" name="hyperlink showLinkPanel when called with cursor in a link should not call subscribers" time="0.006">
    </testcase>
    <testcase classname="hyperlink showLinkPanel when called with a selection in the editor should create a link node" name="hyperlink showLinkPanel when called with a selection in the editor should create a link node" time="0.018">
    </testcase>
    <testcase classname="hyperlink showLinkPanel when called with a selection in the editor should not create a link node if selected incompatible mark" name="hyperlink showLinkPanel when called with a selection in the editor should not create a link node if selected incompatible mark" time="0.007">
    </testcase>
    <testcase classname="hyperlink showLinkPanel when called with a selection in the editor should add placeholder cursor in the editor" name="hyperlink showLinkPanel when called with a selection in the editor should add placeholder cursor in the editor" time="0.004">
    </testcase>
    <testcase classname="hyperlink hideLinkPanel should remove placeholder cursor from the editor" name="hyperlink hideLinkPanel should remove placeholder cursor from the editor" time="0.006">
    </testcase>
    <testcase classname="hyperlink Key Press Cmd-K when called without any selection in the editor should call subscribers" name="hyperlink Key Press Cmd-K when called without any selection in the editor should call subscribers" time="0.01">
    </testcase>
    <testcase classname="hyperlink Key Press Cmd-K when called with selection in the editor should call subscribers" name="hyperlink Key Press Cmd-K when called with selection in the editor should call subscribers" time="0.009">
    </testcase>
    <testcase classname="hyperlink Key Press Cmd-K when called with a selection in the editor should create a link node" name="hyperlink Key Press Cmd-K when called with a selection in the editor should create a link node" time="0.007">
    </testcase>
    <testcase classname="hyperlink Message Appearance should remove link mark if visible text is not a valid link - 1" name="hyperlink Message Appearance should remove link mark if visible text is not a valid link - 1" time="0.008">
    </testcase>
    <testcase classname="hyperlink Message Appearance should remove link mark if visible text is not a valid link - 2" name="hyperlink Message Appearance should remove link mark if visible text is not a valid link - 2" time="0.006">
    </testcase>
    <testcase classname="hyperlink Message Appearance should remove link mark if visible text is not a valid link - 3" name="hyperlink Message Appearance should remove link mark if visible text is not a valid link - 3" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="submit-editor" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:02" time="1.292" tests="1">
    <testcase classname="submit-editor Mod-Enter should submit editor content" name="submit-editor Mod-Enter should submit editor content" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Media plugin" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:35:33" time="34.828" tests="47">
    <testcase classname="Media plugin should invoke binary picker when calling insertFileFromDataUrl" name="Media plugin should invoke binary picker when calling insertFileFromDataUrl" time="0.086">
    </testcase>
    <testcase classname="Media plugin when message editor inserts media group" name="Media plugin when message editor inserts media group" time="2.396">
    </testcase>
    <testcase classname="Media plugin when non message editor when all of the files are images inserts single medias" name="Media plugin when non message editor when all of the files are images inserts single medias" time="1.939">
    </testcase>
    <testcase classname="Media plugin when non message editor when it is a mix of pdf and image inserts single medias" name="Media plugin when non message editor when it is a mix of pdf and image inserts single medias" time="2.547">
    </testcase>
    <testcase classname="Media plugin should call uploadErrorHandler on upload error" name="Media plugin should call uploadErrorHandler on upload error" time="0.458">
    </testcase>
    <testcase classname="Media plugin should remove failed uploads from the document" name="Media plugin should remove failed uploads from the document" time="0.04">
    </testcase>
    <testcase classname="Media plugin should cancel in-flight uploads after media item is removed from document" name="Media plugin should cancel in-flight uploads after media item is removed from document" time="0.581">
    </testcase>
    <testcase classname="Media plugin should not revert to temporary media nodes after upload finished and we undo" name="Media plugin should not revert to temporary media nodes after upload finished and we undo" time="0.052">
    </testcase>
    <testcase classname="Media plugin should set new pickers exactly when new media provider is set" name="Media plugin should set new pickers exactly when new media provider is set" time="0.01">
    </testcase>
    <testcase classname="Media plugin should re-use old pickers when new media provider is set" name="Media plugin should re-use old pickers when new media provider is set" time="0.009">
    </testcase>
    <testcase classname="Media plugin should hide any existing popup picker when new media provider is set" name="Media plugin should hide any existing popup picker when new media provider is set" time="0.009">
    </testcase>
    <testcase classname="Media plugin should set new upload params for existing pickers when new media provider is set" name="Media plugin should set new upload params for existing pickers when new media provider is set" time="0.01">
    </testcase>
    <testcase classname="Media plugin should trigger analytics events for picking" name="Media plugin should trigger analytics events for picking" time="0.264">
    </testcase>
    <testcase classname="Media plugin handleMediaNodeRemove removes media node" name="Media plugin handleMediaNodeRemove removes media node" time="0.062">
    </testcase>
    <testcase classname="Media plugin removeSelectedMediaNode when selection is a media node removes node" name="Media plugin removeSelectedMediaNode when selection is a media node removes node" time="0.031">
    </testcase>
    <testcase classname="Media plugin removeSelectedMediaNode when selection is a media node returns true" name="Media plugin removeSelectedMediaNode when selection is a media node returns true" time="0.031">
    </testcase>
    <testcase classname="Media plugin removeSelectedMediaNode when selection is a non media node does not remove media node" name="Media plugin removeSelectedMediaNode when selection is a non media node does not remove media node" time="0.028">
    </testcase>
    <testcase classname="Media plugin removeSelectedMediaNode when selection is a non media node returns false" name="Media plugin removeSelectedMediaNode when selection is a non media node returns false" time="0.02">
    </testcase>
    <testcase classname="Media plugin removeSelectedMediaNode when selection is text does not remove media node" name="Media plugin removeSelectedMediaNode when selection is text does not remove media node" time="0.019">
    </testcase>
    <testcase classname="Media plugin removeSelectedMediaNode when selection is text returns false" name="Media plugin removeSelectedMediaNode when selection is text returns false" time="1.031">
    </testcase>
    <testcase classname="Media plugin should focus the editor after files are added to the document" name="Media plugin should focus the editor after files are added to the document" time="0.357">
    </testcase>
    <testcase classname="Media plugin should copy optional attributes from MediaState to Node attrs" name="Media plugin should copy optional attributes from MediaState to Node attrs" time="0.034">
    </testcase>
    <testcase classname="Media plugin detectLinkRangesInSteps when ignore links flag is set to true does not detect any links" name="Media plugin detectLinkRangesInSteps when ignore links flag is set to true does not detect any links" time="0.009">
    </testcase>
    <testcase classname="Media plugin detectLinkRangesInSteps when ignore links flag is set to true resets ignore links flag to false" name="Media plugin detectLinkRangesInSteps when ignore links flag is set to true resets ignore links flag to false" time="0.019">
    </testcase>
    <testcase classname="Media plugin detectLinkRangesInSteps when ignore links flag is set to false sets ranges with links" name="Media plugin detectLinkRangesInSteps when ignore links flag is set to false sets ranges with links" time="0.007">
    </testcase>
    <testcase classname="Media plugin insertLinks creates a link card below linkified text" name="Media plugin insertLinks creates a link card below linkified text" time="0.168">
    </testcase>
    <testcase classname="Media plugin splitMediaGroup splits media group" name="Media plugin splitMediaGroup splits media group" time="0.072">
    </testcase>
    <testcase classname="Media plugin splitMediaGroup when insert text in the middle of media group splits media group" name="Media plugin splitMediaGroup when insert text in the middle of media group splits media group" time="0.094">
    </testcase>
    <testcase classname="Media plugin ignoreLinks should set to true when at the beginning of a link" name="Media plugin ignoreLinks should set to true when at the beginning of a link" time="0.011">
    </testcase>
    <testcase classname="Media plugin ignoreLinks should set to true when at the end of a link" name="Media plugin ignoreLinks should set to true when at the end of a link" time="0.014">
    </testcase>
    <testcase classname="Media plugin ignoreLinks should switch from true to false when insert space after a link" name="Media plugin ignoreLinks should switch from true to false when insert space after a link" time="0.009">
    </testcase>
    <testcase classname="Media plugin align when there is only one image in the media group when selection is a media node changes media group to mediaSingle with layout" name="Media plugin align when there is only one image in the media group when selection is a media node changes media group to mediaSingle with layout" time="0.09">
    </testcase>
    <testcase classname="Media plugin align when there is only one image in the media group when selection is not a media node does nothing" name="Media plugin align when there is only one image in the media group when selection is not a media node does nothing" time="0.027">
    </testcase>
    <testcase classname="Media plugin Drop Placeholder should show the placeholder at the current position inside paragraph" name="Media plugin Drop Placeholder should show the placeholder at the current position inside paragraph" time="0.27">
    </testcase>
    <testcase classname="Media plugin Drop Placeholder should show the placeholder for code block" name="Media plugin Drop Placeholder should show the placeholder for code block" time="0.067">
    </testcase>
    <testcase classname="Media plugin element when cursor is on a media node of a single image returns dom" name="Media plugin element when cursor is on a media node of a single image returns dom" time="0.672">
    </testcase>
    <testcase classname="Media plugin element when cursor is on one of the media nodes inside media group returns dom" name="Media plugin element when cursor is on one of the media nodes inside media group returns dom" time="1.155">
    </testcase>
    <testcase classname="Media plugin element when cursor is not on a media node returns undefined" name="Media plugin element when cursor is not on a media node returns undefined" time="1.066">
    </testcase>
    <testcase classname="Media plugin element when cursor move from a media node to another media node returns dom" name="Media plugin element when cursor move from a media node to another media node returns dom" time="1.438">
    </testcase>
    <testcase classname="Media plugin element when cursor move from a media node to another media node notified subscriber" name="Media plugin element when cursor move from a media node to another media node notified subscriber" time="1.635">
    </testcase>
    <testcase classname="Media plugin element when cursor move to a media node returns dom" name="Media plugin element when cursor move to a media node returns dom" time="1.019">
    </testcase>
    <testcase classname="Media plugin element when cursor move to a media node notified subscriber" name="Media plugin element when cursor move to a media node notified subscriber" time="0.806">
    </testcase>
    <testcase classname="Media plugin element when cursor move away from a media node returns undefined" name="Media plugin element when cursor move away from a media node returns undefined" time="0.858">
    </testcase>
    <testcase classname="Media plugin element when cursor move away from a media node notified subscriber" name="Media plugin element when cursor move away from a media node notified subscriber" time="0.887">
    </testcase>
    <testcase classname="Media plugin element when element has not been changed does not notified subscriber" name="Media plugin element when element has not been changed does not notified subscriber" time="0.818">
    </testcase>
    <testcase classname="Media plugin updateLayout updates the plugin layout" name="Media plugin updateLayout updates the plugin layout" time="0.81">
    </testcase>
    <testcase classname="Media plugin updateLayout notifies subscriber" name="Media plugin updateLayout notifies subscriber" time="0.927">
    </testcase>
  </testsuite>
  <testsuite name="BitbucketTransformer: parser" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:08" time="1.748" tests="30">
    <testcase classname="BitbucketTransformer: parser block elements should support level 1 to 6 headings" name="BitbucketTransformer: parser block elements should support level 1 to 6 headings" time="0.021">
    </testcase>
    <testcase classname="BitbucketTransformer: parser block elements should support paragraphs" name="BitbucketTransformer: parser block elements should support paragraphs" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: parser block elements should remove all zero-with-non-joiners" name="BitbucketTransformer: parser block elements should remove all zero-with-non-joiners" time="0.003">
    </testcase>
    <testcase classname="BitbucketTransformer: parser block elements should support horizontal rules" name="BitbucketTransformer: parser block elements should support horizontal rules" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: parser block elements should support images" name="BitbucketTransformer: parser block elements should support images" time="0.005">
    </testcase>
    <testcase classname="BitbucketTransformer: parser inline elements should support emphasis" name="BitbucketTransformer: parser inline elements should support emphasis" time="0.004">
    </testcase>
    <testcase classname="BitbucketTransformer: parser inline elements should support strong" name="BitbucketTransformer: parser inline elements should support strong" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: parser inline elements should support strikethrough" name="BitbucketTransformer: parser inline elements should support strikethrough" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: parser inline elements should support code" name="BitbucketTransformer: parser inline elements should support code" time="0.007">
    </testcase>
    <testcase classname="BitbucketTransformer: parser inline elements should support links" name="BitbucketTransformer: parser inline elements should support links" time="0.025">
    </testcase>
    <testcase classname="BitbucketTransformer: parser inline elements should support both strong and em" name="BitbucketTransformer: parser inline elements should support both strong and em" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: parser blockquotes should be parsed" name="BitbucketTransformer: parser blockquotes should be parsed" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: parser lists that are unordered should be parsed" name="BitbucketTransformer: parser lists that are unordered should be parsed" time="0.004">
    </testcase>
    <testcase classname="BitbucketTransformer: parser lists that are ordered should be parsed" name="BitbucketTransformer: parser lists that are ordered should be parsed" time="0.008">
    </testcase>
    <testcase classname="BitbucketTransformer: parser lists that are nested and homogeneous should be parsed" name="BitbucketTransformer: parser lists that are nested and homogeneous should be parsed" time="0.005">
    </testcase>
    <testcase classname="BitbucketTransformer: parser lists that are nested and heterogeneous should be parsed" name="BitbucketTransformer: parser lists that are nested and heterogeneous should be parsed" time="0.003">
    </testcase>
    <testcase classname="BitbucketTransformer: parser lists with multiple paragraphs should be parsed" name="BitbucketTransformer: parser lists with multiple paragraphs should be parsed" time="0.004">
    </testcase>
    <testcase classname="BitbucketTransformer: parser tables with header, multiple rows and columns should be converted into table" name="BitbucketTransformer: parser tables with header, multiple rows and columns should be converted into table" time="0.017">
    </testcase>
    <testcase classname="BitbucketTransformer: parser tables with a single column should be converted into table" name="BitbucketTransformer: parser tables with a single column should be converted into table" time="0.006">
    </testcase>
    <testcase classname="BitbucketTransformer: parser tables with a empty cells" name="BitbucketTransformer: parser tables with a empty cells" time="0.003">
    </testcase>
    <testcase classname="BitbucketTransformer: parser tables with inline styling" name="BitbucketTransformer: parser tables with inline styling" time="0.005">
    </testcase>
    <testcase classname="BitbucketTransformer: parser code inline should be parsed" name="BitbucketTransformer: parser code inline should be parsed" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: parser code block parses block with specified language" name="BitbucketTransformer: parser code block parses block with specified language" time="0.005">
    </testcase>
    <testcase classname="BitbucketTransformer: parser mentions should be parsed preserving display name and user id" name="BitbucketTransformer: parser mentions should be parsed preserving display name and user id" time="0.005">
    </testcase>
    <testcase classname="BitbucketTransformer: parser emojis should be parsed from data attribute on the img" name="BitbucketTransformer: parser emojis should be parsed from data attribute on the img" time="0.003">
    </testcase>
    <testcase classname="BitbucketTransformer: parser emojis should fallback to parsing from img src if data attribute not present" name="BitbucketTransformer: parser emojis should fallback to parsing from img src if data attribute not present" time="0.003">
    </testcase>
    <testcase classname="BitbucketTransformer: parser links created manually by the user should be recreated" name="BitbucketTransformer: parser links created manually by the user should be recreated" time="0.003">
    </testcase>
    <testcase classname="BitbucketTransformer: parser links with title, created manually, should be preserved" name="BitbucketTransformer: parser links with title, created manually, should be preserved" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: parser links created automatically by bitbucket should be removed" name="BitbucketTransformer: parser links created automatically by bitbucket should be removed" time="0.004">
    </testcase>
    <testcase classname="BitbucketTransformer: parser links created manually by bitbucket should not be removed if disableBitbucketLinkStripping is true" name="BitbucketTransformer: parser links created manually by bitbucket should not be removed if disableBitbucketLinkStripping is true" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="mentions - input rules" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:11" time="1.544" tests="13">
    <testcase classname="mentions - input rules should replace a standalone &quot;@&quot; with mention-query-mark" name="mentions - input rules should replace a standalone &quot;@&quot; with mention-query-mark" time="0.022">
    </testcase>
    <testcase classname="mentions - input rules should not replace a &quot;@&quot; when part of a word" name="mentions - input rules should not replace a &quot;@&quot; when part of a word" time="0.006">
    </testcase>
    <testcase classname="mentions - input rules should not replace a &quot;@&quot; after the &quot;`&quot;" name="mentions - input rules should not replace a &quot;@&quot; after the &quot;`&quot;" time="0.003">
    </testcase>
    <testcase classname="mentions - input rules should replace &quot;@&quot; at the start of the content" name="mentions - input rules should replace &quot;@&quot; at the start of the content" time="0.007">
    </testcase>
    <testcase classname="mentions - input rules should replace &quot;@&quot; if there are multiple spaces in front of it" name="mentions - input rules should replace &quot;@&quot; if there are multiple spaces in front of it" time="0.005">
    </testcase>
    <testcase classname="mentions - input rules should replace &quot;@&quot; if there is a hardbreak node in front of it" name="mentions - input rules should replace &quot;@&quot; if there is a hardbreak node in front of it" time="0.003">
    </testcase>
    <testcase classname="mentions - input rules should replace &quot;@&quot; if there is another emoji node in front of it" name="mentions - input rules should replace &quot;@&quot; if there is another emoji node in front of it" time="0.006">
    </testcase>
    <testcase classname="mentions - input rules should replace &quot;@&quot; if there is a mention node in front of it" name="mentions - input rules should replace &quot;@&quot; if there is a mention node in front of it" time="0.023">
    </testcase>
    <testcase classname="mentions - input rules should not replace &quot;@&quot; when in an unsupported node" name="mentions - input rules should not replace &quot;@&quot; when in an unsupported node" time="0.026">
    </testcase>
    <testcase classname="mentions - input rules should not replace &quot;@&quot; when there is an unsupported stored mark" name="mentions - input rules should not replace &quot;@&quot; when there is an unsupported stored mark" time="0.006">
    </testcase>
    <testcase classname="mentions - input rules should replace non empty selection with mentionQuery mark" name="mentions - input rules should replace non empty selection with mentionQuery mark" time="0.004">
    </testcase>
    <testcase classname="mentions - input rules should not replace non empty selection with mentionQuery mark if selection starts with an excluding mark" name="mentions - input rules should not replace non empty selection with mentionQuery mark if selection starts with an excluding mark" time="0.002">
    </testcase>
    <testcase classname="mentions - input rules should replace &quot;@&quot; when preceded by an open round bracket" name="mentions - input rules should replace &quot;@&quot; when preceded by an open round bracket" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/nodeviews/code-mirror" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:13" time="2.748" tests="9">
    <testcase classname="@atlaskit/nodeviews/code-mirror should export code-mirror nodeview factory" name="@atlaskit/nodeviews/code-mirror should export code-mirror nodeview factory" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/nodeviews/code-mirror should be possible to create a code-block" name="@atlaskit/nodeviews/code-mirror should be possible to create a code-block" time="0.086">
    </testcase>
    <testcase classname="@atlaskit/nodeviews/code-mirror should return a defined codeMirrorNodeView object" name="@atlaskit/nodeviews/code-mirror should return a defined codeMirrorNodeView object" time="0.067">
    </testcase>
    <testcase classname="@atlaskit/nodeviews/code-mirror should have dom defined as public member of codeMirrorNodeView object" name="@atlaskit/nodeviews/code-mirror should have dom defined as public member of codeMirrorNodeView object" time="0.054">
    </testcase>
    <testcase classname="@atlaskit/nodeviews/code-mirror should have callBacks defined as public member of codeMirrorNodeView object" name="@atlaskit/nodeviews/code-mirror should have callBacks defined as public member of codeMirrorNodeView object" time="0.04">
    </testcase>
    <testcase classname="@atlaskit/nodeviews/code-mirror should add a uniqueId to code block node" name="@atlaskit/nodeviews/code-mirror should add a uniqueId to code block node" time="0.021">
    </testcase>
    <testcase classname="@atlaskit/nodeviews/code-mirror should add a isCodeMirror to code block node" name="@atlaskit/nodeviews/code-mirror should add a isCodeMirror to code block node" time="0.033">
    </testcase>
    <testcase classname="@atlaskit/nodeviews/code-mirror should call unsubscribeFocusHandlers menthod of code-block plugin editor is destroyed" name="@atlaskit/nodeviews/code-mirror should call unsubscribeFocusHandlers menthod of code-block plugin editor is destroyed" time="0.019">
    </testcase>
    <testcase classname="@atlaskit/nodeviews/code-mirror should call unsubscribe menthod of code-block plugin editor is destroyed" name="@atlaskit/nodeviews/code-mirror should call unsubscribe menthod of code-block plugin editor is destroyed" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/single-select" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:04" time="13.365" tests="74">
    <testcase classname="@atlaskit/single-select render sanity check" name="@atlaskit/single-select render sanity check" time="0.009">
    </testcase>
    <testcase classname="@atlaskit/single-select render should render Label when the prop is set" name="@atlaskit/single-select render should render Label when the prop is set" time="0.095">
    </testcase>
    <testcase classname="@atlaskit/single-select render should render Droplist" name="@atlaskit/single-select render should render Droplist" time="0.025">
    </testcase>
    <testcase classname="@atlaskit/single-select render should render Fieldbase inside Droplist" name="@atlaskit/single-select render should render Fieldbase inside Droplist" time="0.042">
    </testcase>
    <testcase classname="@atlaskit/single-select render should render placeholder in trigger if there is no selected item" name="@atlaskit/single-select render should render placeholder in trigger if there is no selected item" time="0.024">
    </testcase>
    <testcase classname="@atlaskit/single-select render should render selected items`s content instead of placeholder" name="@atlaskit/single-select render should render selected items`s content instead of placeholder" time="0.018">
    </testcase>
    <testcase classname="@atlaskit/single-select render should render selectedItems elemBefore" name="@atlaskit/single-select render should render selectedItems elemBefore" time="0.028">
    </testcase>
    <testcase classname="@atlaskit/single-select render should render groups and items inside Droplist (when open)" name="@atlaskit/single-select render should render groups and items inside Droplist (when open)" time="0.255">
    </testcase>
    <testcase classname="@atlaskit/single-select render should only render groups with at least one match when filtering" name="@atlaskit/single-select render should only render groups with at least one match when filtering" time="0.118">
    </testcase>
    <testcase classname="@atlaskit/single-select render should not render any groups when there is not a single match when filtering" name="@atlaskit/single-select render should not render any groups when there is not a single match when filtering" time="0.104">
    </testcase>
    <testcase classname="@atlaskit/single-select props managements should pass props to Label" name="@atlaskit/single-select props managements should pass props to Label" time="0.024">
    </testcase>
    <testcase classname="@atlaskit/single-select props managements shouldFocus prop should focus inputNode when set to true" name="@atlaskit/single-select props managements shouldFocus prop should focus inputNode when set to true" time="0.025">
    </testcase>
    <testcase classname="@atlaskit/single-select props managements should pass props to Droplist" name="@atlaskit/single-select props managements should pass props to Droplist" time="0.193">
    </testcase>
    <testcase classname="@atlaskit/single-select props managements should pass props to fieldBase" name="@atlaskit/single-select props managements should pass props to fieldBase" time="0.112">
    </testcase>
    <testcase classname="@atlaskit/single-select props managements should pass props to Item" name="@atlaskit/single-select props managements should pass props to Item" time="0.114">
    </testcase>
    <testcase classname="@atlaskit/single-select hidden select should render a select tag" name="@atlaskit/single-select hidden select should render a select tag" time="0.147">
    </testcase>
    <testcase classname="@atlaskit/single-select hidden select select tag should be invisible" name="@atlaskit/single-select hidden select select tag should be invisible" time="0.107">
    </testcase>
    <testcase classname="@atlaskit/single-select hidden select optgroups should render optgroups inside a select tag" name="@atlaskit/single-select hidden select optgroups should render optgroups inside a select tag" time="0.112">
    </testcase>
    <testcase classname="@atlaskit/single-select hidden select optgroups optgroups should have the label attribute" name="@atlaskit/single-select hidden select optgroups optgroups should have the label attribute" time="0.119">
    </testcase>
    <testcase classname="@atlaskit/single-select hidden select optgroups options should render options inside optgroups" name="@atlaskit/single-select hidden select optgroups options should render options inside optgroups" time="0.132">
    </testcase>
    <testcase classname="@atlaskit/single-select hidden select optgroups options should have &quot;disabled&quot; attribute if the option is disabled" name="@atlaskit/single-select hidden select optgroups options should have &quot;disabled&quot; attribute if the option is disabled" time="0.141">
    </testcase>
    <testcase classname="@atlaskit/single-select hidden select optgroups options should have &quot;value&quot; attribute" name="@atlaskit/single-select hidden select optgroups options should have &quot;value&quot; attribute" time="0.128">
    </testcase>
    <testcase classname="@atlaskit/single-select hidden select optgroups options should render content inside" name="@atlaskit/single-select hidden select optgroups options should render content inside" time="0.124">
    </testcase>
    <testcase classname="@atlaskit/single-select hidden select should pass selected value into the select tag" name="@atlaskit/single-select hidden select should pass selected value into the select tag" time="0.182">
    </testcase>
    <testcase classname="@atlaskit/single-select hidden select select tag should have &quot;readOnly&quot; attribute" name="@atlaskit/single-select hidden select select tag should have &quot;readOnly&quot; attribute" time="0.126">
    </testcase>
    <testcase classname="@atlaskit/single-select hidden select should pass id into the select tag" name="@atlaskit/single-select hidden select should pass id into the select tag" time="0.113">
    </testcase>
    <testcase classname="@atlaskit/single-select hidden select should pass name into the select tag" name="@atlaskit/single-select hidden select should pass name into the select tag" time="0.124">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleTriggerClick default behavior" name="@atlaskit/single-select private functions handleTriggerClick default behavior" time="0.13">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleTriggerClick disabled select" name="@atlaskit/single-select private functions handleTriggerClick disabled select" time="0.34">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleTriggerClick should close select when it was open before" name="@atlaskit/single-select private functions handleTriggerClick should close select when it was open before" time="0.141">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleTriggerClick should focus the autocomplete textfield" name="@atlaskit/single-select private functions handleTriggerClick should focus the autocomplete textfield" time="0.152">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleTriggerClick should focus the select after opening" name="@atlaskit/single-select private functions handleTriggerClick should focus the select after opening" time="0.113">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleKeyboardInteractions should call focusNextItem when ArrowDown is pressed and Select is open" name="@atlaskit/single-select private functions handleKeyboardInteractions should call focusNextItem when ArrowDown is pressed and Select is open" time="0.206">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleKeyboardInteractions should call focusNextItem when ArrowDown is pressed and Select is closed" name="@atlaskit/single-select private functions handleKeyboardInteractions should call focusNextItem when ArrowDown is pressed and Select is closed" time="0.166">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleKeyboardInteractions should call onOpenChange when ArrowDown is pressed and Select is closed" name="@atlaskit/single-select private functions handleKeyboardInteractions should call onOpenChange when ArrowDown is pressed and Select is closed" time="0.127">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleKeyboardInteractions should call focusPreviousItem when ArrowUp is pressed and Select is open" name="@atlaskit/single-select private functions handleKeyboardInteractions should call focusPreviousItem when ArrowUp is pressed and Select is open" time="0.252">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleKeyboardInteractions should NOT call focusPreviousItem when ArrowUp is pressed and Select is closed" name="@atlaskit/single-select private functions handleKeyboardInteractions should NOT call focusPreviousItem when ArrowUp is pressed and Select is closed" time="0.119">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleKeyboardInteractions should call handleItemSelect when Enter is pressed and an item is focused and Select is open" name="@atlaskit/single-select private functions handleKeyboardInteractions should call handleItemSelect when Enter is pressed and an item is focused and Select is open" time="0.438">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleKeyboardInteractions should NOT call handleItemSelect when Enter is pressed and no item is focused and Select is open" name="@atlaskit/single-select private functions handleKeyboardInteractions should NOT call handleItemSelect when Enter is pressed and no item is focused and Select is open" time="0.135">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleKeyboardInteractions should NOT call handleItemSelect when Enter is pressed and Select is closed" name="@atlaskit/single-select private functions handleKeyboardInteractions should NOT call handleItemSelect when Enter is pressed and Select is closed" time="0.163">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleKeyboardInteractions should NOT call handleNativeSearch when autocompelte is enabled" name="@atlaskit/single-select private functions handleKeyboardInteractions should NOT call handleNativeSearch when autocompelte is enabled" time="0.227">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleKeyboardInteractions should NOT call handleNativeSearch when keyUp, keyDown or Enter are pressed" name="@atlaskit/single-select private functions handleKeyboardInteractions should NOT call handleNativeSearch when keyUp, keyDown or Enter are pressed" time="0.426">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleKeyboardInteractions should call handleNativeSearch when other keys are pressed and autocomplete is not enabled" name="@atlaskit/single-select private functions handleKeyboardInteractions should call handleNativeSearch when other keys are pressed and autocomplete is not enabled" time="0.246">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleKeyboardInteractions should only select one option, even when there are multiple groups" name="@atlaskit/single-select private functions handleKeyboardInteractions should only select one option, even when there are multiple groups" time="0.391">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleInputOnChange should call onFilterChange every time the value is changed" name="@atlaskit/single-select private functions handleInputOnChange should call onFilterChange every time the value is changed" time="0.286">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleInputOnChange should not call onFilterChange when value is the same" name="@atlaskit/single-select private functions handleInputOnChange should not call onFilterChange when value is the same" time="0.347">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions filterItems should return items intact if nothing is selected and filter is empty" name="@atlaskit/single-select private functions filterItems should return items intact if nothing is selected and filter is empty" time="0.34">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions filterItems should filter out selected item and return filtered items" name="@atlaskit/single-select private functions filterItems should filter out selected item and return filtered items" time="0.489">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions filterItems with filterValues should filter using filterValues instead of props, if available" name="@atlaskit/single-select private functions filterItems with filterValues should filter using filterValues instead of props, if available" time="0.828">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleItemSelect should call onSelected when called" name="@atlaskit/single-select private functions handleItemSelect should call onSelected when called" time="0.186">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleItemSelect should call onOpenChange when called" name="@atlaskit/single-select private functions handleItemSelect should call onOpenChange when called" time="0.16">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleItemSelect should call onFilterChange with items`s content when called" name="@atlaskit/single-select private functions handleItemSelect should call onFilterChange with items`s content when called" time="0.129">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions getNextFocusable should return 0 if undefined is passed as a current focus" name="@atlaskit/single-select private functions getNextFocusable should return 0 if undefined is passed as a current focus" time="0.126">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions getNextFocusable should return next item" name="@atlaskit/single-select private functions getNextFocusable should return next item" time="0.125">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions getNextFocusable should return 0 if focus is on the last item" name="@atlaskit/single-select private functions getNextFocusable should return 0 if focus is on the last item" time="0.121">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions getPrevFocusable should return previous item" name="@atlaskit/single-select private functions getPrevFocusable should return previous item" time="0.136">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions getPrevFocusable should return length if focus is on the first item" name="@atlaskit/single-select private functions getPrevFocusable should return length if focus is on the first item" time="0.142">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions getAllVisibleItems should return all visible items" name="@atlaskit/single-select private functions getAllVisibleItems should return all visible items" time="0.467">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions getAllItems should return all items" name="@atlaskit/single-select private functions getAllItems should return all items" time="0.358">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions getNextNativeSearchItem should return first matching item after given index" name="@atlaskit/single-select private functions getNextNativeSearchItem should return first matching item after given index" time="0.101">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions getNextNativeSearchItem should return first matching item in the array if nothing is found after given index" name="@atlaskit/single-select private functions getNextNativeSearchItem should return first matching item in the array if nothing is found after given index" time="0.119">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions getNextNativeSearchItem should return undefined if nothing is found" name="@atlaskit/single-select private functions getNextNativeSearchItem should return undefined if nothing is found" time="0.117">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions getItemTrueIndex should return the index of the item when there is only one group" name="@atlaskit/single-select private functions getItemTrueIndex should return the index of the item when there is only one group" time="0.297">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions getItemTrueIndex should return the index of the item when there are multiple groups" name="@atlaskit/single-select private functions getItemTrueIndex should return the index of the item when there are multiple groups" time="0.379">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleOnBlur should close select when handleOnBlur is called" name="@atlaskit/single-select private functions handleOnBlur should close select when handleOnBlur is called" time="0.141">
    </testcase>
    <testcase classname="@atlaskit/single-select private functions handleOnBlur should close select when select is blurred" name="@atlaskit/single-select private functions handleOnBlur should close select when select is blurred" time="0.136">
    </testcase>
    <testcase classname="@atlaskit/single-select appearance variations should have appearance prop by default" name="@atlaskit/single-select appearance variations should have appearance prop by default" time="0.057">
    </testcase>
    <testcase classname="@atlaskit/single-select appearance variations should correctly map appearance prop to FieldBase" name="@atlaskit/single-select appearance variations should correctly map appearance prop to FieldBase" time="0.126">
    </testcase>
    <testcase classname="@atlaskit/single-select with JSX item content should show a console warning if item.label is not supplied when item.content is JSX" name="@atlaskit/single-select with JSX item content should show a console warning if item.label is not supplied when item.content is JSX" time="0.464">
    </testcase>
    <testcase classname="@atlaskit/single-select with JSX item content should render item label instead of content" name="@atlaskit/single-select with JSX item content should render item label instead of content" time="0.012">
    </testcase>
    <testcase classname="@atlaskit/single-select with JSX item content should render item label instead of content when hasAutocomplete" name="@atlaskit/single-select with JSX item content should render item label instead of content when hasAutocomplete" time="0.018">
    </testcase>
    <testcase classname="@atlaskit/single-select initial loading state should display loading icon and message when conditions are met" name="@atlaskit/single-select initial loading state should display loading icon and message when conditions are met" time="0.156">
    </testcase>
    <testcase classname="@atlaskit/single-select initial loading state should accept a custom loading message" name="@atlaskit/single-select initial loading state should accept a custom loading message" time="0.123">
    </testcase>
    <testcase classname="@atlaskit/single-select initial loading state should not display loading icon and message when select is not open" name="@atlaskit/single-select initial loading state should not display loading icon and message when select is not open" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="Emoji" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:17" time="0.825" tests="5">
    <testcase classname="Emoji should render &quot;fallback&quot; if there is no emojiProvider prop" name="Emoji should render &quot;fallback&quot; if there is no emojiProvider prop" time="0.012">
    </testcase>
    <testcase classname="Emoji should still render resourced emoji if allowTextFallback=true" name="Emoji should still render resourced emoji if allowTextFallback=true" time="0.015">
    </testcase>
    <testcase classname="Emoji should render &quot;fallback&quot; if there is no emojiProvider prop and no fallback" name="Emoji should render &quot;fallback&quot; if there is no emojiProvider prop and no fallback" time="0.003">
    </testcase>
    <testcase classname="Emoji should render a EmojiWrapper component if emojiProvider supplied" name="Emoji should render a EmojiWrapper component if emojiProvider supplied" time="0.008">
    </testcase>
    <testcase classname="Emoji should pass fitToHeight down to ResourcedEmoji if there is a provider" name="Emoji should pass fitToHeight down to ResourcedEmoji if there is a provider" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="MediaGroup" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:16" time="4.308" tests="3">
    <testcase classname="MediaGroup should not render a FilmstripView component if it has only one media node" name="MediaGroup should not render a FilmstripView component if it has only one media node" time="0.004">
    </testcase>
    <testcase classname="MediaGroup should render a FilmstripView component if it has more than one media node" name="MediaGroup should render a FilmstripView component if it has more than one media node" time="0.004">
    </testcase>
    <testcase classname="MediaGroup should call onClick with all the items in a media group" name="MediaGroup should call onClick with all the items in a media group" time="2.44">
    </testcase>
  </testsuite>
  <testsuite name="media-files" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:18" time="2.208" tests="33">
    <testcase classname="media-files when cursor is at the end of a text block inserts media node into the document after current paragraph node" name="media-files when cursor is at the end of a text block inserts media node into the document after current paragraph node" time="0.016">
    </testcase>
    <testcase classname="media-files when cursor is at the end of a text block puts cursor to the next paragraph after inserting media node" name="media-files when cursor is at the end of a text block puts cursor to the next paragraph after inserting media node" time="0.006">
    </testcase>
    <testcase classname="media-files when cursor is at the end of a text block should prepend media node to existing media group after it" name="media-files when cursor is at the end of a text block should prepend media node to existing media group after it" time="0.007">
    </testcase>
    <testcase classname="media-files when cursor is at the beginning of a text block should prepend media node to existing media group before it" name="media-files when cursor is at the beginning of a text block should prepend media node to existing media group before it" time="0.007">
    </testcase>
    <testcase classname="media-files when cursor is in the middle of a text block when inside a paragraph splits text" name="media-files when cursor is in the middle of a text block when inside a paragraph splits text" time="0.007">
    </testcase>
    <testcase classname="media-files when cursor is in the middle of a text block when inside a paragraph moves cursor to the front of later part of the text" name="media-files when cursor is in the middle of a text block when inside a paragraph moves cursor to the front of later part of the text" time="0.004">
    </testcase>
    <testcase classname="media-files when cursor is in the middle of a text block when inside a heading preserves heading" name="media-files when cursor is in the middle of a text block when inside a heading preserves heading" time="0.005">
    </testcase>
    <testcase classname="media-files when selection is not empty when selection is a text when selection is in the middle of the text block replaces selection with a media node" name="media-files when selection is not empty when selection is a text when selection is in the middle of the text block replaces selection with a media node" time="0.004">
    </testcase>
    <testcase classname="media-files when selection is not empty when selection is a text when selection covers the whole text block when there is no existing media group nearby when inside a paragraph replaces selection with a media node" name="media-files when selection is not empty when selection is a text when selection covers the whole text block when there is no existing media group nearby when inside a paragraph replaces selection with a media node" time="0.006">
    </testcase>
    <testcase classname="media-files when selection is not empty when selection is a text when selection covers the whole text block when there is no existing media group nearby when inside a heading replaces selection with a media node" name="media-files when selection is not empty when selection is a text when selection covers the whole text block when there is no existing media group nearby when inside a heading replaces selection with a media node" time="0.005">
    </testcase>
    <testcase classname="media-files when selection is not empty when selection is a text when selection covers the whole text block when there is an existing media group nearby prepand media to the media group after parent" name="media-files when selection is not empty when selection is a text when selection covers the whole text block when there is an existing media group nearby prepand media to the media group after parent" time="0.005">
    </testcase>
    <testcase classname="media-files when selection is not empty when selection is a text when selection is at the end of the text block replaces selection with a media node" name="media-files when selection is not empty when selection is a text when selection is at the end of the text block replaces selection with a media node" time="0.004">
    </testcase>
    <testcase classname="media-files when selection is not empty when selection is a text when selection is at the end of the text block prepends to exisiting media group after parent" name="media-files when selection is not empty when selection is a text when selection is at the end of the text block prepends to exisiting media group after parent" time="0.005">
    </testcase>
    <testcase classname="media-files when selection is not empty when selection is a node when selection is an inline node replaces selection with a media node" name="media-files when selection is not empty when selection is a node when selection is an inline node replaces selection with a media node" time="0.008">
    </testcase>
    <testcase classname="media-files when selection is not empty when selection is a node when selection is a media node prepends to the existsing media group" name="media-files when selection is not empty when selection is a node when selection is a media node prepends to the existsing media group" time="0.006">
    </testcase>
    <testcase classname="media-files when selection is not empty when selection is a node when selection is a media node sets cursor to the paragraph after" name="media-files when selection is not empty when selection is a node when selection is a media node sets cursor to the paragraph after" time="0.005">
    </testcase>
    <testcase classname="media-files when selection is not empty when selection is a node when selection is a non media block node when no exisiting media group replaces selection with a media node" name="media-files when selection is not empty when selection is a node when selection is a non media block node when no exisiting media group replaces selection with a media node" time="0.006">
    </testcase>
    <testcase classname="media-files when selection is not empty when selection is a node when selection is a non media block node when there are exisiting media group when media group is in the front prepend media to the exisiting media group before" name="media-files when selection is not empty when selection is a node when selection is a non media block node when there are exisiting media group when media group is in the front prepend media to the exisiting media group before" time="0.008">
    </testcase>
    <testcase classname="media-files when selection is not empty when selection is a node when selection is a non media block node when there are exisiting media group when media group is at the end prepend media to the exisiting media group after" name="media-files when selection is not empty when selection is a node when selection is a non media block node when there are exisiting media group when media group is at the end prepend media to the exisiting media group after" time="0.009">
    </testcase>
    <testcase classname="media-files when selection is not empty when selection is a node when selection is a non media block node when there are exisiting media group when both sides have media groups prepend media to the exisiting media group after" name="media-files when selection is not empty when selection is a node when selection is a non media block node when there are exisiting media group when both sides have media groups prepend media to the exisiting media group after" time="0.008">
    </testcase>
    <testcase classname="media-files when selection is not empty when selection is at the beginning of the text block replaces selection with a media node" name="media-files when selection is not empty when selection is at the beginning of the text block replaces selection with a media node" time="0.01">
    </testcase>
    <testcase classname="media-files when selection is not empty when selection is at the beginning of the text block prepends to exisiting media group before parent" name="media-files when selection is not empty when selection is at the beginning of the text block prepends to exisiting media group before parent" time="0.004">
    </testcase>
    <testcase classname="media-files should insert media node into the document after current heading node" name="media-files should insert media node into the document after current heading node" time="0.006">
    </testcase>
    <testcase classname="media-files should insert media node into the document after current codeblock node" name="media-files should insert media node into the document after current codeblock node" time="0.003">
    </testcase>
    <testcase classname="media-files inside empty block replaces empty paragraph with the media grroup in an empty document" name="media-files inside empty block replaces empty paragraph with the media grroup in an empty document" time="0.007">
    </testcase>
    <testcase classname="media-files inside empty block apends media group to empty paragraph in an empty code block" name="media-files inside empty block apends media group to empty paragraph in an empty code block" time="0.007">
    </testcase>
    <testcase classname="media-files inside empty block apends media group to empty paragraph in an empty heading" name="media-files inside empty block apends media group to empty paragraph in an empty heading" time="0.007">
    </testcase>
    <testcase classname="media-files inside empty block prepends media to existing media group before the empty paragraph" name="media-files inside empty block prepends media to existing media group before the empty paragraph" time="0.006">
    </testcase>
    <testcase classname="media-files inside empty block should replace empty paragraph with mediaGroup and preserve next empty paragraph" name="media-files inside empty block should replace empty paragraph with mediaGroup and preserve next empty paragraph" time="0.01">
    </testcase>
    <testcase classname="media-files inside empty block should replace empty paragraph with mediaGroup and preserve previous empty paragraph" name="media-files inside empty block should replace empty paragraph with mediaGroup and preserve previous empty paragraph" time="0.006">
    </testcase>
    <testcase classname="media-files inside empty block should insert all media nodes on the same line" name="media-files inside empty block should insert all media nodes on the same line" time="0.01">
    </testcase>
    <testcase classname="media-files when selection is in a task or decision block media insertion ignored for task item" name="media-files when selection is in a task or decision block media insertion ignored for task item" time="0.006">
    </testcase>
    <testcase classname="media-files when selection is in a task or decision block media insertion ignored for decision item" name="media-files when selection is in a task or decision block media insertion ignored for decision item" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:20" time="1.832" tests="7">
    <testcase classname="@atlaskit/editor-core Plugins -&gt; table/UI/ToolbarTable should be defined" name="@atlaskit/editor-core Plugins -&gt; table/UI/ToolbarTable should be defined" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-core Plugins -&gt; table/UI/ToolbarTable should trigger analyticsService.trackEvent when table icon is clicked" name="@atlaskit/editor-core Plugins -&gt; table/UI/ToolbarTable should trigger analyticsService.trackEvent when table icon is clicked" time="0.054">
    </testcase>
    <testcase classname="@atlaskit/editor-core Plugins -&gt; table/UI/ToolbarTable should invoke tableCommands.createTable when table icon is clicked" name="@atlaskit/editor-core Plugins -&gt; table/UI/ToolbarTable should invoke tableCommands.createTable when table icon is clicked" time="0.015">
    </testcase>
    <testcase classname="@atlaskit/editor-core Plugins -&gt; table/UI/ToolbarTable should invoke pluginState.subscribe when table icon is clicked" name="@atlaskit/editor-core Plugins -&gt; table/UI/ToolbarTable should invoke pluginState.subscribe when table icon is clicked" time="0.013">
    </testcase>
    <testcase classname="@atlaskit/editor-core Plugins -&gt; table/UI/ToolbarTable should return null if EditorWith is less then BreakPoint3" name="@atlaskit/editor-core Plugins -&gt; table/UI/ToolbarTable should return null if EditorWith is less then BreakPoint3" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/editor-core Plugins -&gt; table/UI/ToolbarTable should have spacing default when EditorWidth is defined" name="@atlaskit/editor-core Plugins -&gt; table/UI/ToolbarTable should have spacing default when EditorWidth is defined" time="0.017">
    </testcase>
    <testcase classname="@atlaskit/editor-core Plugins -&gt; table/UI/ToolbarTable should have disabled button if isDisbled property is passed true" name="@atlaskit/editor-core Plugins -&gt; table/UI/ToolbarTable should have disabled button if isDisbled property is passed true" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="JIRATransformer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:22" time="1.535" tests="9">
    <testcase classname="JIRATransformer table parses HTML: with header column" name="JIRATransformer table parses HTML: with header column" time="0.026">
    </testcase>
    <testcase classname="JIRATransformer table encodes HTML: with header column" name="JIRATransformer table encodes HTML: with header column" time="0.01">
    </testcase>
    <testcase classname="JIRATransformer table round-trips HTML: with header column" name="JIRATransformer table round-trips HTML: with header column" time="0.009">
    </testcase>
    <testcase classname="JIRATransformer table parses HTML: with header row" name="JIRATransformer table parses HTML: with header row" time="0.008">
    </testcase>
    <testcase classname="JIRATransformer table encodes HTML: with header row" name="JIRATransformer table encodes HTML: with header row" time="0.011">
    </testcase>
    <testcase classname="JIRATransformer table round-trips HTML: with header row" name="JIRATransformer table round-trips HTML: with header row" time="0.011">
    </testcase>
    <testcase classname="JIRATransformer table parses HTML: with header row and header column" name="JIRATransformer table parses HTML: with header row and header column" time="0.007">
    </testcase>
    <testcase classname="JIRATransformer table encodes HTML: with header row and header column" name="JIRATransformer table encodes HTML: with header row and header column" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer table round-trips HTML: with header row and header column" name="JIRATransformer table round-trips HTML: with header row and header column" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Comment" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:21" time="3.239" tests="5">
    <testcase classname="Comment should render as AkComment" name="Comment should render as AkComment" time="0.002">
    </testcase>
    <testcase classname="Comment should render author" name="Comment should render author" time="0.006">
    </testcase>
    <testcase classname="Comment should render avatar" name="Comment should render avatar" time="0.002">
    </testcase>
    <testcase classname="Comment should render editor in reply-mode" name="Comment should render editor in reply-mode" time="0.004">
    </testcase>
    <testcase classname="Comment should render child-comments if any" name="Comment should render child-comments if any" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="extension" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:24" time="1.519" tests="6">
    <testcase classname="extension actions setExtensionElement should set &quot;element&quot; prop in plugin state to a DOM node" name="extension actions setExtensionElement should set &quot;element&quot; prop in plugin state to a DOM node" time="0.043">
    </testcase>
    <testcase classname="extension actions editExtension should return false if macroProvider is not available" name="extension actions editExtension should return false if macroProvider is not available" time="0.018">
    </testcase>
    <testcase classname="extension actions editExtension should return false if extension node is not selected or cursor is not inside extension body" name="extension actions editExtension should return false if extension node is not selected or cursor is not inside extension body" time="0.005">
    </testcase>
    <testcase classname="extension actions editExtension should return true if macroProvider is available and cursor is inside extension node" name="extension actions editExtension should return true if macroProvider is available and cursor is inside extension node" time="0.041">
    </testcase>
    <testcase classname="extension actions removeExtension should set &quot;element&quot; prop in plugin state to null and remove the node" name="extension actions removeExtension should set &quot;element&quot; prop in plugin state to null and remove the node" time="0.02">
    </testcase>
    <testcase classname="extension actions selectExtension should create a NodeSelection and return true" name="extension actions selectExtension should create a NodeSelection and return true" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="&lt;UploadView /&gt;" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:24" time="2.007" tests="5">
    <testcase classname="&lt;UploadView /&gt; should deliver all required props to stateless component" name="&lt;UploadView /&gt; should deliver all required props to stateless component" time="0.009">
    </testcase>
    <testcase classname="&lt;UploadView /&gt; should dispatch fileClick action when onFileClick called" name="&lt;UploadView /&gt; should dispatch fileClick action when onFileClick called" time="0.003">
    </testcase>
    <testcase classname="&lt;UploadView /&gt; should dispatch editorShowImage action when onEditorShowImage called" name="&lt;UploadView /&gt; should dispatch editorShowImage action when onEditorShowImage called" time="0.001">
    </testcase>
    <testcase classname="&lt;UploadView /&gt; should dispatch editRemoteImage action when onEditRemoteImage called" name="&lt;UploadView /&gt; should dispatch editRemoteImage action when onEditRemoteImage called" time="0.001">
    </testcase>
    <testcase classname="&lt;UploadView /&gt; should display a flag if WebGL is not available" name="&lt;UploadView /&gt; should display a flag if WebGL is not available" time="0.655">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/TaskItem" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:27" time="0.875" tests="2">
    <testcase classname="Renderer - React/Nodes/TaskItem should wrap content with &lt;AkTaskItem&gt;-tag" name="Renderer - React/Nodes/TaskItem should wrap content with &lt;AkTaskItem&gt;-tag" time="0.036">
    </testcase>
    <testcase classname="Renderer - React/Nodes/TaskItem should not render if no children" name="Renderer - React/Nodes/TaskItem should not render if no children" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="table hover selection plugin" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:26" time="2.154" tests="7">
    <testcase classname="table hover selection plugin hoverColumn(number) when table has 3 columns when called with 0 it should create a hover selection of 0 column" name="table hover selection plugin hoverColumn(number) when table has 3 columns when called with 0 it should create a hover selection of 0 column" time="0.169">
    </testcase>
    <testcase classname="table hover selection plugin hoverColumn(number) when table has 3 columns when called with 1 it should create a hover selection of 1 column" name="table hover selection plugin hoverColumn(number) when table has 3 columns when called with 1 it should create a hover selection of 1 column" time="0.086">
    </testcase>
    <testcase classname="table hover selection plugin hoverColumn(number) when table has 3 columns when called with 2 it should create a hover selection of 2 column" name="table hover selection plugin hoverColumn(number) when table has 3 columns when called with 2 it should create a hover selection of 2 column" time="0.079">
    </testcase>
    <testcase classname="table hover selection plugin hoverRow(number) when table has 3 rows when called with 0 it should create a hover selection of 0 row" name="table hover selection plugin hoverRow(number) when table has 3 rows when called with 0 it should create a hover selection of 0 row" time="0.12">
    </testcase>
    <testcase classname="table hover selection plugin hoverRow(number) when table has 3 rows when called with 1 it should create a hover selection of 1 row" name="table hover selection plugin hoverRow(number) when table has 3 rows when called with 1 it should create a hover selection of 1 row" time="0.102">
    </testcase>
    <testcase classname="table hover selection plugin hoverRow(number) when table has 3 rows when called with 2 it should create a hover selection of 2 row" name="table hover selection plugin hoverRow(number) when table has 3 rows when called with 2 it should create a hover selection of 2 row" time="0.073">
    </testcase>
    <testcase classname="table hover selection plugin hoverTable() when table has 3 rows it should create a hover selection of the whole table" name="table hover selection plugin hoverTable() when table has 3 rows it should create a hover selection of the whole table" time="0.082">
    </testcase>
  </testsuite>
  <testsuite name="JIRATransformer html:" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:28" time="1.988" tests="74">
    <testcase classname="JIRATransformer html: paragraphs: parses HTML: empty" name="JIRATransformer html: paragraphs: parses HTML: empty" time="0.014">
    </testcase>
    <testcase classname="JIRATransformer html: paragraphs: encodes HTML: empty" name="JIRATransformer html: paragraphs: encodes HTML: empty" time="0.005">
    </testcase>
    <testcase classname="JIRATransformer html: paragraphs: round-trips HTML: empty" name="JIRATransformer html: paragraphs: round-trips HTML: empty" time="0.016">
    </testcase>
    <testcase classname="JIRATransformer html: paragraphs: parses HTML: a paragraph with text" name="JIRATransformer html: paragraphs: parses HTML: a paragraph with text" time="0.012">
    </testcase>
    <testcase classname="JIRATransformer html: paragraphs: encodes HTML: a paragraph with text" name="JIRATransformer html: paragraphs: encodes HTML: a paragraph with text" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer html: paragraphs: round-trips HTML: a paragraph with text" name="JIRATransformer html: paragraphs: round-trips HTML: a paragraph with text" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer html: paragraphs: parses HTML: two adjacent paragraphs" name="JIRATransformer html: paragraphs: parses HTML: two adjacent paragraphs" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer html: paragraphs: encodes HTML: two adjacent paragraphs" name="JIRATransformer html: paragraphs: encodes HTML: two adjacent paragraphs" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer html: paragraphs: round-trips HTML: two adjacent paragraphs" name="JIRATransformer html: paragraphs: round-trips HTML: two adjacent paragraphs" time="0.006">
    </testcase>
    <testcase classname="JIRATransformer html: paragraphs: parses HTML: a paragraph with a hard break in it" name="JIRATransformer html: paragraphs: parses HTML: a paragraph with a hard break in it" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer html: paragraphs: encodes HTML: a paragraph with a hard break in it" name="JIRATransformer html: paragraphs: encodes HTML: a paragraph with a hard break in it" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer html: paragraphs: round-trips HTML: a paragraph with a hard break in it" name="JIRATransformer html: paragraphs: round-trips HTML: a paragraph with a hard break in it" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer html: breaks: parses HTML: a hard break in a paragraph" name="JIRATransformer html: breaks: parses HTML: a hard break in a paragraph" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer html: breaks: encodes HTML: a hard break in a paragraph" name="JIRATransformer html: breaks: encodes HTML: a hard break in a paragraph" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer html: breaks: round-trips HTML: a hard break in a paragraph" name="JIRATransformer html: breaks: round-trips HTML: a hard break in a paragraph" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer html: breaks: parses HTML: multiple hard break in a paragraph" name="JIRATransformer html: breaks: parses HTML: multiple hard break in a paragraph" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer html: breaks: encodes HTML: multiple hard break in a paragraph" name="JIRATransformer html: breaks: encodes HTML: multiple hard break in a paragraph" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer html: breaks: round-trips HTML: multiple hard break in a paragraph" name="JIRATransformer html: breaks: round-trips HTML: multiple hard break in a paragraph" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: checkParseEncodeRoundTrips parses HTML: &lt;tt&gt; tag" name="JIRATransformer html: marks formatting: checkParseEncodeRoundTrips parses HTML: &lt;tt&gt; tag" time="0.007">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: checkParseEncodeRoundTrips encodes HTML: &lt;tt&gt; tag" name="JIRATransformer html: marks formatting: checkParseEncodeRoundTrips encodes HTML: &lt;tt&gt; tag" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: checkParseEncodeRoundTrips round-trips HTML: &lt;tt&gt; tag" name="JIRATransformer html: marks formatting: checkParseEncodeRoundTrips round-trips HTML: &lt;tt&gt; tag" time="0.011">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: checkParseEncodeRoundTrips parses HTML: &lt;tt&gt; and &lt;b&gt;" name="JIRATransformer html: marks formatting: checkParseEncodeRoundTrips parses HTML: &lt;tt&gt; and &lt;b&gt;" time="0.007">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: parses HTML: &lt;ins&gt; tag" name="JIRATransformer html: marks formatting: parses HTML: &lt;ins&gt; tag" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: encodes HTML: &lt;ins&gt; tag" name="JIRATransformer html: marks formatting: encodes HTML: &lt;ins&gt; tag" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: round-trips HTML: &lt;ins&gt; tag" name="JIRATransformer html: marks formatting: round-trips HTML: &lt;ins&gt; tag" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: parses HTML: &lt;em&gt; tag" name="JIRATransformer html: marks formatting: parses HTML: &lt;em&gt; tag" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: encodes HTML: &lt;em&gt; tag" name="JIRATransformer html: marks formatting: encodes HTML: &lt;em&gt; tag" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: round-trips HTML: &lt;em&gt; tag" name="JIRATransformer html: marks formatting: round-trips HTML: &lt;em&gt; tag" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: parses HTML: &lt;b&gt; tag" name="JIRATransformer html: marks formatting: parses HTML: &lt;b&gt; tag" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: encodes HTML: &lt;b&gt; tag" name="JIRATransformer html: marks formatting: encodes HTML: &lt;b&gt; tag" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: round-trips HTML: &lt;b&gt; tag" name="JIRATransformer html: marks formatting: round-trips HTML: &lt;b&gt; tag" time="0.007">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: parses HTML: &lt;b&gt; and &lt;em&gt;" name="JIRATransformer html: marks formatting: parses HTML: &lt;b&gt; and &lt;em&gt;" time="0.006">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: encodes HTML: &lt;b&gt; and &lt;em&gt;" name="JIRATransformer html: marks formatting: encodes HTML: &lt;b&gt; and &lt;em&gt;" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: checkParseEncodeRoundTrips parses HTML: &lt;del&gt; tag" name="JIRATransformer html: marks formatting: checkParseEncodeRoundTrips parses HTML: &lt;del&gt; tag" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: checkParseEncodeRoundTrips encodes HTML: &lt;del&gt; tag" name="JIRATransformer html: marks formatting: checkParseEncodeRoundTrips encodes HTML: &lt;del&gt; tag" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: checkParseEncodeRoundTrips round-trips HTML: &lt;del&gt; tag" name="JIRATransformer html: marks formatting: checkParseEncodeRoundTrips round-trips HTML: &lt;del&gt; tag" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: parses HTML: &lt;sub&gt;" name="JIRATransformer html: marks formatting: parses HTML: &lt;sub&gt;" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: encodes HTML: &lt;sub&gt;" name="JIRATransformer html: marks formatting: encodes HTML: &lt;sub&gt;" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: round-trips HTML: &lt;sub&gt;" name="JIRATransformer html: marks formatting: round-trips HTML: &lt;sub&gt;" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: encodes HTML: &lt;em&gt; and &lt;sub&gt;" name="JIRATransformer html: marks formatting: encodes HTML: &lt;em&gt; and &lt;sub&gt;" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: parses HTML: &lt;em&gt; and &lt;sub&gt;" name="JIRATransformer html: marks formatting: parses HTML: &lt;em&gt; and &lt;sub&gt;" time="0.005">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: parses HTML: &lt;sup&gt;" name="JIRATransformer html: marks formatting: parses HTML: &lt;sup&gt;" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: encodes HTML: &lt;sup&gt;" name="JIRATransformer html: marks formatting: encodes HTML: &lt;sup&gt;" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: round-trips HTML: &lt;sup&gt;" name="JIRATransformer html: marks formatting: round-trips HTML: &lt;sup&gt;" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: encodes HTML: &lt;em&gt; and &lt;sup&gt;" name="JIRATransformer html: marks formatting: encodes HTML: &lt;em&gt; and &lt;sup&gt;" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer html: marks formatting: parses HTML: &lt;em&gt; and &lt;sup&gt;" name="JIRATransformer html: marks formatting: parses HTML: &lt;em&gt; and &lt;sup&gt;" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer html: heading: parses HTML: &lt;h1&gt; with anchor" name="JIRATransformer html: heading: parses HTML: &lt;h1&gt; with anchor" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer html: heading: encodes HTML: &lt;h1&gt; with anchor" name="JIRATransformer html: heading: encodes HTML: &lt;h1&gt; with anchor" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer html: heading: round-trips HTML: &lt;h1&gt; with anchor" name="JIRATransformer html: heading: round-trips HTML: &lt;h1&gt; with anchor" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer html: heading: parses HTML: &lt;h2&gt; with anchor" name="JIRATransformer html: heading: parses HTML: &lt;h2&gt; with anchor" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer html: heading: encodes HTML: &lt;h2&gt; with anchor" name="JIRATransformer html: heading: encodes HTML: &lt;h2&gt; with anchor" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer html: heading: round-trips HTML: &lt;h2&gt; with anchor" name="JIRATransformer html: heading: round-trips HTML: &lt;h2&gt; with anchor" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer html: heading: parses HTML: &lt;h3&gt; with anchor" name="JIRATransformer html: heading: parses HTML: &lt;h3&gt; with anchor" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer html: heading: encodes HTML: &lt;h3&gt; with anchor" name="JIRATransformer html: heading: encodes HTML: &lt;h3&gt; with anchor" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer html: heading: round-trips HTML: &lt;h3&gt; with anchor" name="JIRATransformer html: heading: round-trips HTML: &lt;h3&gt; with anchor" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer html: heading: parses HTML: &lt;h4&gt; with anchor" name="JIRATransformer html: heading: parses HTML: &lt;h4&gt; with anchor" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer html: heading: encodes HTML: &lt;h4&gt; with anchor" name="JIRATransformer html: heading: encodes HTML: &lt;h4&gt; with anchor" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer html: heading: round-trips HTML: &lt;h4&gt; with anchor" name="JIRATransformer html: heading: round-trips HTML: &lt;h4&gt; with anchor" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer html: heading: parses HTML: &lt;h5&gt; with anchor" name="JIRATransformer html: heading: parses HTML: &lt;h5&gt; with anchor" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer html: heading: encodes HTML: &lt;h5&gt; with anchor" name="JIRATransformer html: heading: encodes HTML: &lt;h5&gt; with anchor" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer html: heading: round-trips HTML: &lt;h5&gt; with anchor" name="JIRATransformer html: heading: round-trips HTML: &lt;h5&gt; with anchor" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer html: heading: parses HTML: &lt;h6&gt; with anchor" name="JIRATransformer html: heading: parses HTML: &lt;h6&gt; with anchor" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer html: heading: encodes HTML: &lt;h6&gt; with anchor" name="JIRATransformer html: heading: encodes HTML: &lt;h6&gt; with anchor" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer html: heading: round-trips HTML: &lt;h6&gt; with anchor" name="JIRATransformer html: heading: round-trips HTML: &lt;h6&gt; with anchor" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer html: heading: lossy transformation encodes HTML: &lt;h1&gt; with nested &lt;b&gt;" name="JIRATransformer html: heading: lossy transformation encodes HTML: &lt;h1&gt; with nested &lt;b&gt;" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer html: heading: lossy transformation encodes HTML: &lt;h1&gt; with nested &lt;b&gt;&lt;em&gt;" name="JIRATransformer html: heading: lossy transformation encodes HTML: &lt;h1&gt; with nested &lt;b&gt;&lt;em&gt;" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer html: heading: lossy transformation parses HTML: &lt;h1&gt; with nested &lt;b&gt;" name="JIRATransformer html: heading: lossy transformation parses HTML: &lt;h1&gt; with nested &lt;b&gt;" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer html: heading: lossy transformation parses HTML: &lt;h1&gt; with nested &lt;b&gt;&lt;em&gt;" name="JIRATransformer html: heading: lossy transformation parses HTML: &lt;h1&gt; with nested &lt;b&gt;&lt;em&gt;" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer html: horizontal rule parses HTML: single &lt;hr /&gt;" name="JIRATransformer html: horizontal rule parses HTML: single &lt;hr /&gt;" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer html: horizontal rule encodes HTML: single &lt;hr /&gt;" name="JIRATransformer html: horizontal rule encodes HTML: single &lt;hr /&gt;" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer html: horizontal rule round-trips HTML: single &lt;hr /&gt;" name="JIRATransformer html: horizontal rule round-trips HTML: single &lt;hr /&gt;" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer html: horizontal rule parses HTML: multiple &lt;hr /&gt;" name="JIRATransformer html: horizontal rule parses HTML: multiple &lt;hr /&gt;" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer html: horizontal rule encodes HTML: multiple &lt;hr /&gt;" name="JIRATransformer html: horizontal rule encodes HTML: multiple &lt;hr /&gt;" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer html: horizontal rule round-trips HTML: multiple &lt;hr /&gt;" name="JIRATransformer html: horizontal rule round-trips HTML: multiple &lt;hr /&gt;" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Media" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:28" time="1.45" tests="1">
    <testcase classname="Media should render a media component with the proper props" name="Media should render a media component with the proper props" time="0.122">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema heading node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:30" time="1.572" tests="5">
    <testcase classname="@atlaskit/editor-common/schema heading node serializes to &lt;h4&gt;" name="@atlaskit/editor-common/schema heading node serializes to &lt;h4&gt;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema heading node matches &lt;h3&gt;" name="@atlaskit/editor-common/schema heading node matches &lt;h3&gt;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema heading node can have inline strong" name="@atlaskit/editor-common/schema heading node can have inline strong" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema heading node can have inline italic" name="@atlaskit/editor-common/schema heading node can have inline italic" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema heading node can have inline links" name="@atlaskit/editor-common/schema heading node can have inline links" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="code-block" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:30" time="2.141" tests="31">
    <testcase classname="code-block subscribe calls subscriber with plugin" name="code-block subscribe calls subscriber with plugin" time="0.012">
    </testcase>
    <testcase classname="code-block subscribe when leaving code block notifies subscriber" name="code-block subscribe when leaving code block notifies subscriber" time="0.021">
    </testcase>
    <testcase classname="code-block subscribe when entering code block notifies subscriber" name="code-block subscribe when entering code block notifies subscriber" time="0.006">
    </testcase>
    <testcase classname="code-block subscribe when moving to a different code block notifies subscriber" name="code-block subscribe when moving to a different code block notifies subscriber" time="0.005">
    </testcase>
    <testcase classname="code-block subscribe when moving within the same code block does not notify subscriber" name="code-block subscribe when moving within the same code block does not notify subscriber" time="0.002">
    </testcase>
    <testcase classname="code-block subscribe when code block is focused and then editor is blur should call subscribers" name="code-block subscribe when code block is focused and then editor is blur should call subscribers" time="0.007">
    </testcase>
    <testcase classname="code-block subscribe when code block is not focused and then editor is blur should not call subscribers" name="code-block subscribe when code block is not focused and then editor is blur should not call subscribers" time="0.007">
    </testcase>
    <testcase classname="code-block subscribe when click inside code_block notify the subscriber" name="code-block subscribe when click inside code_block notify the subscriber" time="0.007">
    </testcase>
    <testcase classname="code-block subscribe when click outside of code_block does not notify the subscriber" name="code-block subscribe when click outside of code_block does not notify the subscriber" time="0.002">
    </testcase>
    <testcase classname="code-block subscribe when unsubscribe does not notify the subscriber" name="code-block subscribe when unsubscribe does not notify the subscriber" time="0.007">
    </testcase>
    <testcase classname="code-block element when cursor moves within the same code block returns the same element" name="code-block element when cursor moves within the same code block returns the same element" time="0.005">
    </testcase>
    <testcase classname="code-block element when cursor moves onto different code block returns different elements" name="code-block element when cursor moves onto different code block returns different elements" time="0.004">
    </testcase>
    <testcase classname="code-block element when cursor is within a code block when at the end of the code block returns code block element" name="code-block element when cursor is within a code block when at the end of the code block returns code block element" time="0.008">
    </testcase>
    <testcase classname="code-block element when cursor is within a code block when at the beginning of the code block returns code block element" name="code-block element when cursor is within a code block when at the beginning of the code block returns code block element" time="0.003">
    </testcase>
    <testcase classname="code-block element when cursor is within a code block when at the middle of the code block returns code block element" name="code-block element when cursor is within a code block when at the middle of the code block returns code block element" time="0.004">
    </testcase>
    <testcase classname="code-block element when cursor is out of code block returns undefined" name="code-block element when cursor is out of code block returns undefined" time="0.004">
    </testcase>
    <testcase classname="code-block clicked when click inside code block returns true" name="code-block clicked when click inside code block returns true" time="0.004">
    </testcase>
    <testcase classname="code-block clicked when click outside of code block returns false" name="code-block clicked when click outside of code block returns false" time="0.004">
    </testcase>
    <testcase classname="code-block clicked when has not been clicked returns false" name="code-block clicked when has not been clicked returns false" time="0.002">
    </testcase>
    <testcase classname="code-block updateLanguage keeps the content" name="code-block updateLanguage keeps the content" time="0.007">
    </testcase>
    <testcase classname="code-block updateLanguage can update language to be undefined" name="code-block updateLanguage can update language to be undefined" time="0.007">
    </testcase>
    <testcase classname="code-block updateLanguage updates language" name="code-block updateLanguage updates language" time="0.004">
    </testcase>
    <testcase classname="code-block updateLanguage updates the node" name="code-block updateLanguage updates the node" time="0.006">
    </testcase>
    <testcase classname="code-block removeCodeBlock should change current code_block to simple paragraph" name="code-block removeCodeBlock should change current code_block to simple paragraph" time="0.007">
    </testcase>
    <testcase classname="code-block removeCodeBlock should not remove parent block when removing code_block" name="code-block removeCodeBlock should not remove parent block when removing code_block" time="0.012">
    </testcase>
    <testcase classname="code-block language is the same as activeCodeBlock language" name="code-block language is the same as activeCodeBlock language" time="0.003">
    </testcase>
    <testcase classname="code-block language updates if activeCodeBlock updates langugae" name="code-block language updates if activeCodeBlock updates langugae" time="0.006">
    </testcase>
    <testcase classname="code-block language sets language to null if no activeCodeBlock" name="code-block language sets language to null if no activeCodeBlock" time="0.004">
    </testcase>
    <testcase classname="code-block toolbarVisible when editor is blur it is false" name="code-block toolbarVisible when editor is blur it is false" time="0.007">
    </testcase>
    <testcase classname="code-block editorFocued when editor is focused it is true" name="code-block editorFocued when editor is focused it is true" time="0.002">
    </testcase>
    <testcase classname="code-block editorFocued when editor is blur it is false" name="code-block editorFocued when editor is blur it is false" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:33" time="1.314" tests="2">
    <testcase classname="@atlaskit/editor-core WithHelpTrigger should render child component as is" name="@atlaskit/editor-core WithHelpTrigger should render child component as is" time="0.012">
    </testcase>
    <testcase classname="@atlaskit/editor-core WithHelpTrigger should pass function openHelp as parameter to render method" name="@atlaskit/editor-core WithHelpTrigger should pass function openHelp as parameter to render method" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:34" time="0.924" tests="2">
    <testcase classname="@atlaskit/editor-core AddonToolbar should render ToolbarButton" name="@atlaskit/editor-core AddonToolbar should render ToolbarButton" time="0.047">
    </testcase>
    <testcase classname="@atlaskit/editor-core AddonToolbar should not render ToolbarButton if dropdownItems prop is missing" name="@atlaskit/editor-core AddonToolbar should not render ToolbarButton if dropdownItems prop is missing" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="BitbucketTransformer: serializer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:35" time="1.922" tests="11">
    <testcase classname="BitbucketTransformer: serializer tables should serialized" name="BitbucketTransformer: serializer tables should serialized" time="0.012">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer tables should serialized table correctly" name="BitbucketTransformer: serializer tables should serialized table correctly" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer tables should serialized table correctly when in middle of other blocks" name="BitbucketTransformer: serializer tables should serialized table correctly when in middle of other blocks" time="0.003">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer tables should serialized even if there is only header row" name="BitbucketTransformer: serializer tables should serialized even if there is only header row" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer tables should serialized even header and cells are empty" name="BitbucketTransformer: serializer tables should serialized even header and cells are empty" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer tables should escape pipe character in the cells" name="BitbucketTransformer: serializer tables should escape pipe character in the cells" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer tables should preserve inline marks" name="BitbucketTransformer: serializer tables should preserve inline marks" time="0.003">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer tables should preserve mentions correctly" name="BitbucketTransformer: serializer tables should preserve mentions correctly" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer tables should separate content of multiple blocks with space" name="BitbucketTransformer: serializer tables should separate content of multiple blocks with space" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer tables should separate content of list with space" name="BitbucketTransformer: serializer tables should separate content of list with space" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer tables should not produce markdown if table has no header" name="BitbucketTransformer: serializer tables should not produce markdown if table has no header" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:32" time="8.163" tests="22">
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should render disabled ToolbarButton if both pluginStateTextFormatting and pluginStateClearFormatting are undefined" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should render disabled ToolbarButton if both pluginStateTextFormatting and pluginStateClearFormatting are undefined" time="0.075">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should have spacing of toolbar button set to none if editorWidth is less then BreakPoint10" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should have spacing of toolbar button set to none if editorWidth is less then BreakPoint10" time="0.018">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should have spacing of toolbar button set to default if editorWidth is greater then BreakPoint10" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should have spacing of toolbar button set to default if editorWidth is greater then BreakPoint10" time="0.027">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should not have option to underline if EditorWidth is not defined" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should not have option to underline if EditorWidth is not defined" time="0.526">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should have option to underline text if editor editorWidth is less than BreakPoint2" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should have option to underline text if editor editorWidth is less than BreakPoint2" time="0.461">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should not have option to underline text if editor editorWidth is greater than BreakPoint2" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should not have option to underline text if editor editorWidth is greater than BreakPoint2" time="0.374">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should have only 5 child elements if both pluginStateTextFormatting and pluginStateClearFormatting are defined and editorWidth is not defined" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should have only 5 child elements if both pluginStateTextFormatting and pluginStateClearFormatting are defined and editorWidth is not defined" time="0.394">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should return only 4 items if only pluginStateTextFormatting is defined" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should return only 4 items if only pluginStateTextFormatting is defined" time="0.384">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should return only 1 items if only pluginStateClearFormatting is defined" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should return only 1 items if only pluginStateClearFormatting is defined" time="0.352">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should render disabled toolbar button when all marks and strikethrough and clearformatting are disabled" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should render disabled toolbar button when all marks and strikethrough and clearformatting are disabled" time="0.024">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should trigger toggleCode in pluginState when clicked" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should trigger toggleCode in pluginState when clicked" time="0.425">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should trigger toggleStrike of pluginStateTextFormatting when strikethrough option is clicked" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should trigger toggleStrike of pluginStateTextFormatting when strikethrough option is clicked" time="0.549">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should not have Strikethrough option if strikeHidden is true" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should not have Strikethrough option if strikeHidden is true" time="0.359">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should trigger clearFormatting function of pluginStateTextFormatting when clearFormatting option is clicked" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should trigger clearFormatting function of pluginStateTextFormatting when clearFormatting option is clicked" time="0.501">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should render disabled ToolbarButton if isDisabled property is true" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should render disabled ToolbarButton if isDisabled property is true" time="0.021">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should render disabled ToolbarButton if all marks and strikethrough and clearformatting are disabled" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should render disabled ToolbarButton if all marks and strikethrough and clearformatting are disabled" time="0.026">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should be selected inside strike" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting should be selected inside strike" time="0.021">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting analytics should trigger analyticsService.trackEvent when Code is clicked" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting analytics should trigger analyticsService.trackEvent when Code is clicked" time="0.442">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting analytics should trigger analyticsService.trackEvent when Strikethrough is clicked" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting analytics should trigger analyticsService.trackEvent when Strikethrough is clicked" time="0.369">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting analytics should trigger analyticsService.trackEvent when Subscript is clicked" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting analytics should trigger analyticsService.trackEvent when Subscript is clicked" time="0.351">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting analytics should trigger analyticsService.trackEvent when Superscript is clicked" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting analytics should trigger analyticsService.trackEvent when Superscript is clicked" time="0.369">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting analytics should trigger analyticsService.trackEvent when Clear Formatting is clicked" name="@atlaskit/editor-core/ui/ToolbarAdvancedTextFormatting analytics should trigger analyticsService.trackEvent when Clear Formatting is clicked" time="0.382">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema extension node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:41" time="0.868" tests="4">
    <testcase classname="@atlaskit/editor-common/schema extension node parse html converts to extension PM node" name="@atlaskit/editor-common/schema extension node parse html converts to extension PM node" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema extension node parse html gets attributes from html" name="@atlaskit/editor-common/schema extension node parse html gets attributes from html" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema extension node encode html converts html data attributes to node attributes" name="@atlaskit/editor-common/schema extension node encode html converts html data attributes to node attributes" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema extension node encode html encodes and decodes to the same node" name="@atlaskit/editor-common/schema extension node encode html encodes and decodes to the same node" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/renderer/ui/Renderer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:42" time="0.979" tests="1">
    <testcase classname="@atlaskit/renderer/ui/Renderer should catch errors and render unsupported content text" name="@atlaskit/renderer/ui/Renderer should catch errors and render unsupported content text" time="0.033">
    </testcase>
  </testsuite>
  <testsuite name="JIRATransformer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:43" time="1.604" tests="11">
    <testcase classname="JIRATransformer code block parses HTML: code_block node" name="JIRATransformer code block parses HTML: code_block node" time="0.009">
    </testcase>
    <testcase classname="JIRATransformer code block encodes HTML: code_block node" name="JIRATransformer code block encodes HTML: code_block node" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer code block round-trips HTML: code_block node" name="JIRATransformer code block round-trips HTML: code_block node" time="0.018">
    </testcase>
    <testcase classname="JIRATransformer code block parses HTML: multiline code_block node" name="JIRATransformer code block parses HTML: multiline code_block node" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer code block encodes HTML: multiline code_block node" name="JIRATransformer code block encodes HTML: multiline code_block node" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer code block round-trips HTML: multiline code_block node" name="JIRATransformer code block round-trips HTML: multiline code_block node" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer code block encodes HTML: default language is plain" name="JIRATransformer code block encodes HTML: default language is plain" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer code block encodes HTML: lowercase language" name="JIRATransformer code block encodes HTML: lowercase language" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer code block parses HTML: JIRA preformatted macros" name="JIRATransformer code block parses HTML: JIRA preformatted macros" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer code block parses HTML: strip spans" name="JIRATransformer code block parses HTML: strip spans" time="0.006">
    </testcase>
    <testcase classname="JIRATransformer code block parses HTML: empty content" name="JIRATransformer code block parses HTML: empty content" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/ToolbarInsertBlock" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:38" time="8.127" tests="23">
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock should render disabled ToolbarButtons if isDisabled property is true" name="@atlaskit/editor-core/ui/ToolbarInsertBlock should render disabled ToolbarButtons if isDisabled property is true" time="0.058">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock should return null if none of the plugins are present" name="@atlaskit/editor-core/ui/ToolbarInsertBlock should return null if none of the plugins are present" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock should disable mention option if mentionsEnabled is false" name="@atlaskit/editor-core/ui/ToolbarInsertBlock should disable mention option if mentionsEnabled is false" time="0.45">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock should close emoji picker when dropdown is toggled" name="@atlaskit/editor-core/ui/ToolbarInsertBlock should close emoji picker when dropdown is toggled" time="0.459">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock should open emoji picker when emoji option is clicked" name="@atlaskit/editor-core/ui/ToolbarInsertBlock should open emoji picker when emoji option is clicked" time="0.489">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock should have emoji picker component when emojiPickerOpen is true" name="@atlaskit/editor-core/ui/ToolbarInsertBlock should have emoji picker component when emojiPickerOpen is true" time="0.075">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock should have 1 child elements if mediaSupported and mediaUploadsEnabled is defined and equals true" name="@atlaskit/editor-core/ui/ToolbarInsertBlock should have 1 child elements if mediaSupported and mediaUploadsEnabled is defined and equals true" time="0.024">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock should have spacing of toolbar button set to none if editorWidth is not defined" name="@atlaskit/editor-core/ui/ToolbarInsertBlock should have spacing of toolbar button set to none if editorWidth is not defined" time="0.028">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock should have spacing of toolbar button set to none if editorWidth is less then BreakPoint10" name="@atlaskit/editor-core/ui/ToolbarInsertBlock should have spacing of toolbar button set to none if editorWidth is less then BreakPoint10" time="0.032">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock should call onShowMediaPicker when media option is clicked" name="@atlaskit/editor-core/ui/ToolbarInsertBlock should call onShowMediaPicker when media option is clicked" time="0.38">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock should have spacing of toolbar button set to default if editorWidth is greater then BreakPoint10" name="@atlaskit/editor-core/ui/ToolbarInsertBlock should have spacing of toolbar button set to default if editorWidth is greater then BreakPoint10" time="0.342">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock should trigger insertBlockType when Panel option is clicked" name="@atlaskit/editor-core/ui/ToolbarInsertBlock should trigger insertBlockType when Panel option is clicked" time="0.419">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock should trigger insertBlockType when code block option is clicked" name="@atlaskit/editor-core/ui/ToolbarInsertBlock should trigger insertBlockType when code block option is clicked" time="0.4">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock should trigger insertBlockType when blockquote option is clicked" name="@atlaskit/editor-core/ui/ToolbarInsertBlock should trigger insertBlockType when blockquote option is clicked" time="0.344">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock should track table creation event when table menu is clicked option is clicked" name="@atlaskit/editor-core/ui/ToolbarInsertBlock should track table creation event when table menu is clicked option is clicked" time="0.304">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock should trigger insertMacroFromMacroBrowser when &quot;[...] View More&quot; option is clicked" name="@atlaskit/editor-core/ui/ToolbarInsertBlock should trigger insertMacroFromMacroBrowser when &quot;[...] View More&quot; option is clicked" time="0.388">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock Options in insert toolbar should have table option if tableSupported is true" name="@atlaskit/editor-core/ui/ToolbarInsertBlock Options in insert toolbar should have table option if tableSupported is true" time="0.338">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock Options in insert toolbar should have 3 child elements if availableWrapperBlockTypes is defined" name="@atlaskit/editor-core/ui/ToolbarInsertBlock Options in insert toolbar should have 3 child elements if availableWrapperBlockTypes is defined" time="0.033">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock Options in insert toolbar should have link option in dropdown if the width is greater then BreakPoint7" name="@atlaskit/editor-core/ui/ToolbarInsertBlock Options in insert toolbar should have link option in dropdown if the width is greater then BreakPoint7" time="0.372">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock Options in insert toolbar should have media option in dropdown if the width is less then BreakPoint6" name="@atlaskit/editor-core/ui/ToolbarInsertBlock Options in insert toolbar should have media option in dropdown if the width is less then BreakPoint6" time="0.356">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock Options in insert toolbar should have mention option in dropdown if the width is greater then BreakPoint5" name="@atlaskit/editor-core/ui/ToolbarInsertBlock Options in insert toolbar should have mention option in dropdown if the width is greater then BreakPoint5" time="0.33">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock Options in insert toolbar should have emoji option in dropdown if the width is greater then BreakPoint4" name="@atlaskit/editor-core/ui/ToolbarInsertBlock Options in insert toolbar should have emoji option in dropdown if the width is greater then BreakPoint4" time="0.282">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarInsertBlock Options in insert toolbar should have table option if width is less then BreakPoint3" name="@atlaskit/editor-core/ui/ToolbarInsertBlock Options in insert toolbar should have table option if width is less then BreakPoint3" time="0.304">
    </testcase>
  </testsuite>
  <testsuite name="JIRATransformer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:45" time="1.46" tests="15">
    <testcase classname="JIRATransformer media parses HTML: thumbnail type (viewContext)" name="JIRATransformer media parses HTML: thumbnail type (viewContext)" time="0.012">
    </testcase>
    <testcase classname="JIRATransformer media encodes HTML: thumbnail type (viewContext)" name="JIRATransformer media encodes HTML: thumbnail type (viewContext)" time="0.005">
    </testcase>
    <testcase classname="JIRATransformer media round-trips HTML: thumbnail type (viewContext)" name="JIRATransformer media round-trips HTML: thumbnail type (viewContext)" time="0.01">
    </testcase>
    <testcase classname="JIRATransformer media parses HTML: file type" name="JIRATransformer media parses HTML: file type" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer media encodes HTML: file type" name="JIRATransformer media encodes HTML: file type" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer media round-trips HTML: file type" name="JIRATransformer media round-trips HTML: file type" time="0.005">
    </testcase>
    <testcase classname="JIRATransformer media parses HTML: !foo.jpg|thumbnail!" name="JIRATransformer media parses HTML: !foo.jpg|thumbnail!" time="0.007">
    </testcase>
    <testcase classname="JIRATransformer media parses HTML: [^bar.pdf]" name="JIRATransformer media parses HTML: [^bar.pdf]" time="0.006">
    </testcase>
    <testcase classname="JIRATransformer media parses HTML: !foo.jpg|thumbnail! [^bar.pdf]" name="JIRATransformer media parses HTML: !foo.jpg|thumbnail! [^bar.pdf]" time="0.009">
    </testcase>
    <testcase classname="JIRATransformer media parses HTML: thumbnail type (uploadContext)" name="JIRATransformer media parses HTML: thumbnail type (uploadContext)" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer media encodes HTML: thumbnail type (uploadContext)" name="JIRATransformer media encodes HTML: thumbnail type (uploadContext)" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer media encodes HTML: file type (without __displayType)" name="JIRATransformer media encodes HTML: file type (without __displayType)" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer media encodes HTML: thumbnail type (without __displayType)" name="JIRATransformer media encodes HTML: thumbnail type (without __displayType)" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer media should not throw error when trying to parse media nodes within non-media schema" name="JIRATransformer media should not throw error when trying to parse media nodes within non-media schema" time="0.006">
    </testcase>
    <testcase classname="JIRATransformer media should not throw error when trying to parse media groups within non-media schema" name="JIRATransformer media should not throw error when trying to parse media groups within non-media schema" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="ToolbarTextColor" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:47" time="3.6" tests="9">
    <testcase classname="ToolbarTextColor should have spacing of toolbar button set to default" name="ToolbarTextColor should have spacing of toolbar button set to default" time="0.07">
    </testcase>
    <testcase classname="ToolbarTextColor should return null if editor width is less then BreakPoint8" name="ToolbarTextColor should return null if editor width is less then BreakPoint8" time="0.009">
    </testcase>
    <testcase classname="ToolbarTextColor when plugin is enabled sets disabled to false" name="ToolbarTextColor when plugin is enabled sets disabled to false" time="0.037">
    </testcase>
    <testcase classname="ToolbarTextColor when plugin is not enabled sets disabled to true" name="ToolbarTextColor when plugin is not enabled sets disabled to true" time="0.031">
    </testcase>
    <testcase classname="ToolbarTextColor should make isOpen true when toolbar textColor button is clicked" name="ToolbarTextColor should make isOpen true when toolbar textColor button is clicked" time="0.559">
    </testcase>
    <testcase classname="ToolbarTextColor should make isOpen false when a color is clicked" name="ToolbarTextColor should make isOpen false when a color is clicked" time="0.459">
    </testcase>
    <testcase classname="ToolbarTextColor should render disabled ToolbarButton if disabled property is true" name="ToolbarTextColor should render disabled ToolbarButton if disabled property is true" time="0.033">
    </testcase>
    <testcase classname="ToolbarTextColor should have Color components as much as size of color palette" name="ToolbarTextColor should have Color components as much as size of color palette" time="0.39">
    </testcase>
    <testcase classname="ToolbarTextColor analytics should trigger analyticsService.trackEvent when a color is clicked" name="ToolbarTextColor analytics should trigger analyticsService.trackEvent when a color is clicked" time="0.346">
    </testcase>
  </testsuite>
  <testsuite name="ToolbarLists" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:51" time="1.839" tests="7">
    <testcase classname="ToolbarLists should render disabled ToolbarButtons if disabled property is true" name="ToolbarLists should render disabled ToolbarButtons if disabled property is true" time="0.059">
    </testcase>
    <testcase classname="ToolbarLists should have spacing of toolbar button set to none if editorWidth is less then BreakPoint10" name="ToolbarLists should have spacing of toolbar button set to none if editorWidth is less then BreakPoint10" time="0.029">
    </testcase>
    <testcase classname="ToolbarLists should have spacing of toolbar button set to default if editorWidth is greater then BreakPoint10" name="ToolbarLists should have spacing of toolbar button set to default if editorWidth is greater then BreakPoint10" time="0.024">
    </testcase>
    <testcase classname="ToolbarLists should have a dropdown if editor-width is less then BreakPoint9" name="ToolbarLists should have a dropdown if editor-width is less then BreakPoint9" time="0.025">
    </testcase>
    <testcase classname="ToolbarLists should not have a dropdown if editor-width is less then BreakPoint9" name="ToolbarLists should not have a dropdown if editor-width is less then BreakPoint9" time="0.03">
    </testcase>
    <testcase classname="ToolbarLists analytics should trigger analyticsService.trackEvent when bulleted list button is clicked" name="ToolbarLists analytics should trigger analyticsService.trackEvent when bulleted list button is clicked" time="0.049">
    </testcase>
    <testcase classname="ToolbarLists analytics should trigger analyticsService.trackEvent when numbered list button is clicked" name="ToolbarLists analytics should trigger analyticsService.trackEvent when numbered list button is clicked" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/MediaComponent" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:53" time="1.762" tests="10">
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent should render a CardView component if the media type is file without provider" name="@atlaskit/editor-core/ui/MediaComponent should render a CardView component if the media type is file without provider" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent should render a Card component if the media is a public file with provider" name="@atlaskit/editor-core/ui/MediaComponent should render a Card component if the media is a public file with provider" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent should render a CardView component if the media is a temporary file with provider" name="@atlaskit/editor-core/ui/MediaComponent should render a CardView component if the media is a temporary file with provider" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent should render nothing if media type is link without provider" name="@atlaskit/editor-core/ui/MediaComponent should render nothing if media type is link without provider" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent should render nothing if linkCreateContext not provided" name="@atlaskit/editor-core/ui/MediaComponent should render nothing if linkCreateContext not provided" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent should render a Card component if media type is link with provider" name="@atlaskit/editor-core/ui/MediaComponent should render a Card component if media type is link with provider" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent when appearance is set renders a Card component with the customized appearance" name="@atlaskit/editor-core/ui/MediaComponent when appearance is set renders a Card component with the customized appearance" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent when appearance is not set renders a link Card component with the default appearance" name="@atlaskit/editor-core/ui/MediaComponent when appearance is not set renders a link Card component with the default appearance" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent should use stateManager from Plugin state in Editor mode" name="@atlaskit/editor-core/ui/MediaComponent should use stateManager from Plugin state in Editor mode" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent should not raise exception if there is no linkCreateContext in mediaProvider" name="@atlaskit/editor-core/ui/MediaComponent should not raise exception if there is no linkCreateContext in mediaProvider" time="0.181">
    </testcase>
  </testsuite>
  <testsuite name="table plugin" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:46" time="8.526" tests="40">
    <testcase classname="table plugin subscribe calls subscriber with plugin" name="table plugin subscribe calls subscriber with plugin" time="0.007">
    </testcase>
    <testcase classname="table plugin subscribe should not be possible to add same listener twice" name="table plugin subscribe should not be possible to add same listener twice" time="0.003">
    </testcase>
    <testcase classname="table plugin subscribe when leaving table notifies subscriber" name="table plugin subscribe when leaving table notifies subscriber" time="0.007">
    </testcase>
    <testcase classname="table plugin subscribe when entering table notifies subscriber" name="table plugin subscribe when entering table notifies subscriber" time="0.004">
    </testcase>
    <testcase classname="table plugin subscribe when moving cursor to a different table notifies subscriber" name="table plugin subscribe when moving cursor to a different table notifies subscriber" time="0.003">
    </testcase>
    <testcase classname="table plugin subscribe when moving within the same table notifies subscriber" name="table plugin subscribe when moving within the same table notifies subscriber" time="0.004">
    </testcase>
    <testcase classname="table plugin subscribe when unsubscribe does not notify the subscriber" name="table plugin subscribe when unsubscribe does not notify the subscriber" time="0.004">
    </testcase>
    <testcase classname="table plugin editorFocued when editor is focused it is true" name="table plugin editorFocued when editor is focused it is true" time="0.126">
    </testcase>
    <testcase classname="table plugin editorFocued when editor is not focused it is false" name="table plugin editorFocued when editor is not focused it is false" time="0.006">
    </testcase>
    <testcase classname="table plugin createTable() when the cursor is inside the table it should not create a new table and return false" name="table plugin createTable() when the cursor is inside the table it should not create a new table and return false" time="0.044">
    </testcase>
    <testcase classname="table plugin createTable() when the cursor is inside a codeblock it should not create a new table and return false" name="table plugin createTable() when the cursor is inside a codeblock it should not create a new table and return false" time="0.004">
    </testcase>
    <testcase classname="table plugin createTable() when the cursor is inside inline code it should not create a new table and return false" name="table plugin createTable() when the cursor is inside inline code it should not create a new table and return false" time="0.004">
    </testcase>
    <testcase classname="table plugin createTable() when the cursor is outside the table it should create a new table and return true" name="table plugin createTable() when the cursor is outside the table it should create a new table and return true" time="0.011">
    </testcase>
    <testcase classname="table plugin insertColumn(number) when table has 2 columns when it called with 0 it should prepend a new column and move cursor inside it&apos;s first cell" name="table plugin insertColumn(number) when table has 2 columns when it called with 0 it should prepend a new column and move cursor inside it&apos;s first cell" time="0.155">
    </testcase>
    <testcase classname="table plugin insertColumn(number) when table has 2 columns when it called with 1 it should insert a new column in the middle and move cursor inside it&apos;s first cell" name="table plugin insertColumn(number) when table has 2 columns when it called with 1 it should insert a new column in the middle and move cursor inside it&apos;s first cell" time="0.129">
    </testcase>
    <testcase classname="table plugin insertColumn(number) when table has 2 columns when it called with 2 it should append a new column and move cursor inside it&apos;s first cell" name="table plugin insertColumn(number) when table has 2 columns when it called with 2 it should append a new column and move cursor inside it&apos;s first cell" time="0.145">
    </testcase>
    <testcase classname="table plugin insertRow(number) when table has 2 rows when it called with 0 it should prepend a new row and move cursor inside it&apos;s first cell" name="table plugin insertRow(number) when table has 2 rows when it called with 0 it should prepend a new row and move cursor inside it&apos;s first cell" time="0.223">
    </testcase>
    <testcase classname="table plugin insertRow(number) when table has 2 rows when it called with 1 it should insert a new row in the middle and move cursor inside it&apos;s first cell" name="table plugin insertRow(number) when table has 2 rows when it called with 1 it should insert a new row in the middle and move cursor inside it&apos;s first cell" time="0.17">
    </testcase>
    <testcase classname="table plugin insertRow(number) when table has 2 row when it called with 2 it should append a new row and move cursor inside it&apos;s first cell" name="table plugin insertRow(number) when table has 2 row when it called with 2 it should append a new row and move cursor inside it&apos;s first cell" time="0.133">
    </testcase>
    <testcase classname="table plugin selectColumn(number) when table has 3 columns when called with 0 it should select 0 column" name="table plugin selectColumn(number) when table has 3 columns when called with 0 it should select 0 column" time="0.132">
    </testcase>
    <testcase classname="table plugin selectColumn(number) when table has 3 columns when called with 1 it should select 1 column" name="table plugin selectColumn(number) when table has 3 columns when called with 1 it should select 1 column" time="0.14">
    </testcase>
    <testcase classname="table plugin selectColumn(number) when table has 3 columns when called with 2 it should select 2 column" name="table plugin selectColumn(number) when table has 3 columns when called with 2 it should select 2 column" time="0.136">
    </testcase>
    <testcase classname="table plugin selectRow(number) when table has 3 rows when called with 0 it should select 0 row" name="table plugin selectRow(number) when table has 3 rows when called with 0 it should select 0 row" time="0.12">
    </testcase>
    <testcase classname="table plugin selectRow(number) when table has 3 rows when called with 1 it should select 1 row" name="table plugin selectRow(number) when table has 3 rows when called with 1 it should select 1 row" time="0.169">
    </testcase>
    <testcase classname="table plugin selectRow(number) when table has 3 rows when called with 2 it should select 2 row" name="table plugin selectRow(number) when table has 3 rows when called with 2 it should select 2 row" time="0.118">
    </testcase>
    <testcase classname="table plugin selectTable() it should select the whole table" name="table plugin selectTable() it should select the whole table" time="0.12">
    </testcase>
    <testcase classname="table plugin isColumnSelected(number) when table has 3 columns when column 0 is selected when called with 0 it should return true" name="table plugin isColumnSelected(number) when table has 3 columns when column 0 is selected when called with 0 it should return true" time="0.141">
    </testcase>
    <testcase classname="table plugin isColumnSelected(number) when table has 3 columns when column 1 is selected when called with 1 it should return true" name="table plugin isColumnSelected(number) when table has 3 columns when column 1 is selected when called with 1 it should return true" time="0.114">
    </testcase>
    <testcase classname="table plugin isColumnSelected(number) when table has 3 columns when column 2 is selected when called with 2 it should return true" name="table plugin isColumnSelected(number) when table has 3 columns when column 2 is selected when called with 2 it should return true" time="0.118">
    </testcase>
    <testcase classname="table plugin isRowSelected(number) when table has 3 rows when row 0 is selected when called with 0 it should return true" name="table plugin isRowSelected(number) when table has 3 rows when row 0 is selected when called with 0 it should return true" time="0.12">
    </testcase>
    <testcase classname="table plugin isRowSelected(number) when table has 3 rows when row 1 is selected when called with 1 it should return true" name="table plugin isRowSelected(number) when table has 3 rows when row 1 is selected when called with 1 it should return true" time="0.173">
    </testcase>
    <testcase classname="table plugin isRowSelected(number) when table has 3 rows when row 2 is selected when called with 2 it should return true" name="table plugin isRowSelected(number) when table has 3 rows when row 2 is selected when called with 2 it should return true" time="0.113">
    </testcase>
    <testcase classname="table plugin remove() when table has 3 columns when the first column is selected it should remove the first column and move cursor to the first cell of the column to the left" name="table plugin remove() when table has 3 columns when the first column is selected it should remove the first column and move cursor to the first cell of the column to the left" time="0.285">
    </testcase>
    <testcase classname="table plugin remove() when table has 3 columns when the middle column is selected it should remove the middle column and move cursor to the first cell of the column to the left" name="table plugin remove() when table has 3 columns when the middle column is selected it should remove the middle column and move cursor to the first cell of the column to the left" time="0.241">
    </testcase>
    <testcase classname="table plugin remove() when table has 3 columns when the header row is selected it should convert first following row to header if pluginState.isHeaderRowRequired is true" name="table plugin remove() when table has 3 columns when the header row is selected it should convert first following row to header if pluginState.isHeaderRowRequired is true" time="0.295">
    </testcase>
    <testcase classname="table plugin remove() when table has 3 columns when the header row is selected it should move cursor to the first cell of the new header row" name="table plugin remove() when table has 3 columns when the header row is selected it should move cursor to the first cell of the new header row" time="0.37">
    </testcase>
    <testcase classname="table plugin remove() when table has 3 columns when the last column is selected it should remove the last column and move cursor to the first cell of the previous column" name="table plugin remove() when table has 3 columns when the last column is selected it should remove the last column and move cursor to the first cell of the previous column" time="0.171">
    </testcase>
    <testcase classname="table plugin remove() when table has 3 rows when the first row is selected it should remove the first row and move cursor to the first cell of the first row" name="table plugin remove() when table has 3 rows when the first row is selected it should remove the first row and move cursor to the first cell of the first row" time="0.17">
    </testcase>
    <testcase classname="table plugin remove() when table has 3 rows when the middle row is selected it should remove the middle row and move cursor to the first cell of the next row" name="table plugin remove() when table has 3 rows when the middle row is selected it should remove the middle row and move cursor to the first cell of the next row" time="0.219">
    </testcase>
    <testcase classname="table plugin remove() when table has 3 rows when the last row is selected it should remove the middle row and move cursor to the first cell of the previous row" name="table plugin remove() when table has 3 rows when the last row is selected it should remove the middle row and move cursor to the first cell of the previous row" time="0.162">
    </testcase>
  </testsuite>
  <testsuite name="hyperlink" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:55" time="2.205" tests="22">
    <testcase classname="hyperlink input rules should convert &quot;www.atlassian.com&quot; to hyperlink" name="hyperlink input rules should convert &quot;www.atlassian.com&quot; to hyperlink" time="0.073">
    </testcase>
    <testcase classname="hyperlink input rules should not convert &quot;www.atlassian.com&quot; to a hyperlink when we haven not hit space afterward" name="hyperlink input rules should not convert &quot;www.atlassian.com&quot; to a hyperlink when we haven not hit space afterward" time="0.01">
    </testcase>
    <testcase classname="hyperlink input rules should convert &quot;www.atlassian.com/&quot; to hyperlink" name="hyperlink input rules should convert &quot;www.atlassian.com/&quot; to hyperlink" time="0.018">
    </testcase>
    <testcase classname="hyperlink input rules should convert &quot;http://www.atlassian.com/&quot; to hyperlink" name="hyperlink input rules should convert &quot;http://www.atlassian.com/&quot; to hyperlink" time="0.016">
    </testcase>
    <testcase classname="hyperlink input rules should convert &quot;http://www.atlassian.com&quot; to hyperlink" name="hyperlink input rules should convert &quot;http://www.atlassian.com&quot; to hyperlink" time="0.01">
    </testcase>
    <testcase classname="hyperlink input rules should convert &quot;https://www.atlassian.com/&quot; to hyperlink" name="hyperlink input rules should convert &quot;https://www.atlassian.com/&quot; to hyperlink" time="0.011">
    </testcase>
    <testcase classname="hyperlink input rules should not convert &quot;https://www.atlassian.com&quot; to hyperlink inside a code_block" name="hyperlink input rules should not convert &quot;https://www.atlassian.com&quot; to hyperlink inside a code_block" time="0.01">
    </testcase>
    <testcase classname="hyperlink input rules should not convert &quot;javascript://alert(1) &quot; to hyperlink" name="hyperlink input rules should not convert &quot;javascript://alert(1) &quot; to hyperlink" time="0.032">
    </testcase>
    <testcase classname="hyperlink input rules should convert prettyandsimple@example.com to a link" name="hyperlink input rules should convert prettyandsimple@example.com to a link" time="0.026">
    </testcase>
    <testcase classname="hyperlink input rules should not convert mention like string to a mailto link" name="hyperlink input rules should not convert mention like string to a mailto link" time="0.005">
    </testcase>
    <testcase classname="hyperlink input rules should not convert invalid emails like to a mailto link (double dot)" name="hyperlink input rules should not convert invalid emails like to a mailto link (double dot)" time="0.016">
    </testcase>
    <testcase classname="hyperlink input rules should convert &quot;[text](http://foo)&quot; to hyperlink" name="hyperlink input rules should convert &quot;[text](http://foo)&quot; to hyperlink" time="0.013">
    </testcase>
    <testcase classname="hyperlink input rules should convert text with spaces &quot;[text text](http://foo)&quot; to hyperlink" name="hyperlink input rules should convert text with spaces &quot;[text text](http://foo)&quot; to hyperlink" time="0.011">
    </testcase>
    <testcase classname="hyperlink input rules should convert &quot;[text](http://foo)&quot; to hyperlink inside a code_block" name="hyperlink input rules should convert &quot;[text](http://foo)&quot; to hyperlink inside a code_block" time="0.007">
    </testcase>
    <testcase classname="hyperlink input rules is not part of hyperlink after if I have close my link markdown" name="hyperlink input rules is not part of hyperlink after if I have close my link markdown" time="0.03">
    </testcase>
    <testcase classname="hyperlink input rules does not convert to hyperlink if the previous part already contains a hyperlink" name="hyperlink input rules does not convert to hyperlink if the previous part already contains a hyperlink" time="0.013">
    </testcase>
    <testcase classname="hyperlink input rules does convert to hyperlink if the previous link part is already linkified" name="hyperlink input rules does convert to hyperlink if the previous link part is already linkified" time="0.005">
    </testcase>
    <testcase classname="hyperlink input rules does convert to hyperlink if markdown formatting is used with link pasting" name="hyperlink input rules does convert to hyperlink if markdown formatting is used with link pasting" time="0.01">
    </testcase>
    <testcase classname="hyperlink input rules does convert to hyperlink if markdown formatting is used with pasting of link with spaces" name="hyperlink input rules does convert to hyperlink if markdown formatting is used with pasting of link with spaces" time="0.005">
    </testcase>
    <testcase classname="hyperlink input rules does not remove existsing other mark" name="hyperlink input rules does not remove existsing other mark" time="0.007">
    </testcase>
    <testcase classname="hyperlink input rules converts to hyperlink if possible hyperink text is after a new line and previous line has an hyperlink" name="hyperlink input rules converts to hyperlink if possible hyperink text is after a new line and previous line has an hyperlink" time="0.01">
    </testcase>
    <testcase classname="hyperlink input rules should be able to remove hyperlink when its the first node of the paragraph" name="hyperlink input rules should be able to remove hyperlink when its the first node of the paragraph" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Dropzone" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:55" time="6.78" tests="12">
    <testcase classname="Dropzone MediaPicker returns the Dropzone object when &quot;dropzone&quot; is specified" name="Dropzone MediaPicker returns the Dropzone object when &quot;dropzone&quot; is specified" time="0.012">
    </testcase>
    <testcase classname="Dropzone activate injects drop zone into supplied container" name="Dropzone activate injects drop zone into supplied container" time="0.006">
    </testcase>
    <testcase classname="Dropzone activate injects drop zone into document.body if no container is supplied to constructor" name="Dropzone activate injects drop zone into document.body if no container is supplied to constructor" time="0.004">
    </testcase>
    <testcase classname="Dropzone activate displays dropzone UI should append &quot;active&quot; class to .mediaPickerDropzone on &quot;dragover&quot;" name="Dropzone activate displays dropzone UI should append &quot;active&quot; class to .mediaPickerDropzone on &quot;dragover&quot;" time="0.005">
    </testcase>
    <testcase classname="Dropzone activate displays dropzone UI should remove &quot;active&quot; class to .mediaPickerDropzone on &quot;dragover&quot;" name="Dropzone activate displays dropzone UI should remove &quot;active&quot; class to .mediaPickerDropzone on &quot;dragover&quot;" time="0.003">
    </testcase>
    <testcase classname="Dropzone deactivate removes &quot;dragover&quot;, &quot;dragleave&quot; and &quot;drop&quot; events from container" name="Dropzone deactivate removes &quot;dragover&quot;, &quot;dragleave&quot; and &quot;drop&quot; events from container" time="0.003">
    </testcase>
    <testcase classname="Dropzone MediaPickerDropzone emitted events should emit drag-enter for drag over with type &quot;Files&quot; and contain files length" name="Dropzone MediaPickerDropzone emitted events should emit drag-enter for drag over with type &quot;Files&quot; and contain files length" time="0.331">
    </testcase>
    <testcase classname="Dropzone MediaPickerDropzone emitted events should not emit drag-enter for drag over with type &quot;Not Files&quot;" name="Dropzone MediaPickerDropzone emitted events should not emit drag-enter for drag over with type &quot;Not Files&quot;" time="0.003">
    </testcase>
    <testcase classname="Dropzone MediaPickerDropzone emitted events should emit drag-leave for dragleave event" name="Dropzone MediaPickerDropzone emitted events should emit drag-leave for dragleave event" time="0.055">
    </testcase>
    <testcase classname="Dropzone MediaPickerDropzone emitted events should not emit drag-leave for dragleave event if there was no dragover" name="Dropzone MediaPickerDropzone emitted events should not emit drag-leave for dragleave event if there was no dragover" time="0.003">
    </testcase>
    <testcase classname="Dropzone MediaPickerDropzone emitted events should fire &quot;drop&quot; event when upload-service fires &quot;file-dropped&quot; event and datatransfer.types array contains the string &quot;Files&quot;" name="Dropzone MediaPickerDropzone emitted events should fire &quot;drop&quot; event when upload-service fires &quot;file-dropped&quot; event and datatransfer.types array contains the string &quot;Files&quot;" time="0.002">
    </testcase>
    <testcase classname="Dropzone MediaPickerDropzone emitted events should not fire &quot;drop&quot; event when upload-service fires &quot;file-dropped&quot; event and datatransfer.types array does not contain the string &quot;Files&quot;" name="Dropzone MediaPickerDropzone emitted events should not fire &quot;drop&quot; event when upload-service fires &quot;file-dropped&quot; event and datatransfer.types array does not contain the string &quot;Files&quot;" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="WithDataURI" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:02" time="1.857" tests="19">
    <testcase classname="WithDataURI .componentWillReceiveProps() should attempt to update the dataURI when the dataURIService prop changes" name="WithDataURI .componentWillReceiveProps() should attempt to update the dataURI when the dataURIService prop changes" time="0.021">
    </testcase>
    <testcase classname="WithDataURI .componentWillReceiveProps() should attempt to update the dataURI when the metadata prop changes" name="WithDataURI .componentWillReceiveProps() should attempt to update the dataURI when the metadata prop changes" time="0.003">
    </testcase>
    <testcase classname="WithDataURI .componentWillReceiveProps() should not attempt to update the dataURI when another prop changes" name="WithDataURI .componentWillReceiveProps() should not attempt to update the dataURI when another prop changes" time="0.006">
    </testcase>
    <testcase classname="WithDataURI .updateDataURI() should clear the dataURI when the metadata is undefined" name="WithDataURI .updateDataURI() should clear the dataURI when the metadata is undefined" time="0.005">
    </testcase>
    <testcase classname="WithDataURI .updateDataURI() should clear the dataURI when the metadata is a link" name="WithDataURI .updateDataURI() should clear the dataURI when the metadata is a link" time="0.001">
    </testcase>
    <testcase classname="WithDataURI .updateDataURI() should set the dataURI to a GIF when the mimeType indicates the item is a GIF" name="WithDataURI .updateDataURI() should set the dataURI to a GIF when the mimeType indicates the item is a GIF" time="0.061">
    </testcase>
    <testcase classname="WithDataURI .updateDataURI() should set the dataURI to a JPG when the mimeType indicates the item is not a GIF" name="WithDataURI .updateDataURI() should set the dataURI to a JPG when the mimeType indicates the item is not a GIF" time="0.054">
    </testcase>
    <testcase classname="WithDataURI .updateDataURI() should call fetchImageDataUri with allowAnimated false" name="WithDataURI .updateDataURI() should call fetchImageDataUri with allowAnimated false" time="0.003">
    </testcase>
    <testcase classname="WithDataURI .updateDataURI() should call fetchImageDataUri with allowAnimated true" name="WithDataURI .updateDataURI() should call fetchImageDataUri with allowAnimated true" time="0.002">
    </testcase>
    <testcase classname="WithDataURI .updateDataURI() with dimensions should call fetchImageDataUri with dimentions in px when percentages passed" name="WithDataURI .updateDataURI() with dimensions should call fetchImageDataUri with dimentions in px when percentages passed" time="0.003">
    </testcase>
    <testcase classname="WithDataURI .updateDataURI() with dimensions should call fetchImageDataUri with given dimensions, even if they use pixels" name="WithDataURI .updateDataURI() with dimensions should call fetchImageDataUri with given dimensions, even if they use pixels" time="0.001">
    </testcase>
    <testcase classname="WithDataURI .updateDataURI() with dimensions should return default dimensions when small appeareance is passed" name="WithDataURI .updateDataURI() with dimensions should return default dimensions when small appeareance is passed" time="0.01">
    </testcase>
    <testcase classname="WithDataURI .updateDataURI() with dimensions should return default dimensions when invalid dimension value is passed" name="WithDataURI .updateDataURI() with dimensions should return default dimensions when invalid dimension value is passed" time="0.002">
    </testcase>
    <testcase classname="WithDataURI .updateDataURI() with dimensions should return passed dimension when dimension are valid" name="WithDataURI .updateDataURI() with dimensions should return passed dimension when dimension are valid" time="0.002">
    </testcase>
    <testcase classname="WithDataURI .updateDataURI() with dimensions should fetch dimensions with original size for non retina displays" name="WithDataURI .updateDataURI() with dimensions should fetch dimensions with original size for non retina displays" time="0.002">
    </testcase>
    <testcase classname="WithDataURI .updateDataURI() should call fetchImageDataUri when the mimeType indicates the item is a GIF" name="WithDataURI .updateDataURI() should call fetchImageDataUri when the mimeType indicates the item is a GIF" time="0.008">
    </testcase>
    <testcase classname="WithDataURI .render() should pass down dataURI when I have one" name="WithDataURI .render() should pass down dataURI when I have one" time="0.002">
    </testcase>
    <testcase classname="WithDataURI .render() should pass down other props when I am passed them" name="WithDataURI .render() should pass down other props when I am passed them" time="0.002">
    </testcase>
    <testcase classname="WithDataURI .render() should not pass down dataURIService when I have one" name="WithDataURI .render() should not pass down dataURIService when I have one" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/ToolbarBlockType" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:36:57" time="7.654" tests="14">
    <testcase classname="@atlaskit/editor-core/ui/ToolbarBlockType should render disabled ToolbarButton if isDisabled property is true" name="@atlaskit/editor-core/ui/ToolbarBlockType should render disabled ToolbarButton if isDisabled property is true" time="0.057">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarBlockType should render disabled ToolbarButton if current selection is blockquote" name="@atlaskit/editor-core/ui/ToolbarBlockType should render disabled ToolbarButton if current selection is blockquote" time="0.024">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarBlockType should have spacing of toolbar button set to none if editorWidth is less then BreakPoint10" name="@atlaskit/editor-core/ui/ToolbarBlockType should have spacing of toolbar button set to none if editorWidth is less then BreakPoint10" time="0.029">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarBlockType should have spacing of toolbar button set to default if editorWidth is greater then BreakPoint10" name="@atlaskit/editor-core/ui/ToolbarBlockType should have spacing of toolbar button set to default if editorWidth is greater then BreakPoint10" time="0.026">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarBlockType should render icon in dropdown-menu if editorWidth is less then BreakPoint1" name="@atlaskit/editor-core/ui/ToolbarBlockType should render icon in dropdown-menu if editorWidth is less then BreakPoint1" time="0.022">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarBlockType should render current block type in dropdown-menu if editorWidth is greater then BreakPoint1" name="@atlaskit/editor-core/ui/ToolbarBlockType should render current block type in dropdown-menu if editorWidth is greater then BreakPoint1" time="0.018">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarBlockType should not render disabled ToolbarButton if current selection is panel" name="@atlaskit/editor-core/ui/ToolbarBlockType should not render disabled ToolbarButton if current selection is panel" time="0.065">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarBlockType should render disabled ToolbarButton if code-block is selected" name="@atlaskit/editor-core/ui/ToolbarBlockType should render disabled ToolbarButton if code-block is selected" time="0.016">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarBlockType analytics should trigger analyticsService.trackEvent when Normal text is clicked" name="@atlaskit/editor-core/ui/ToolbarBlockType analytics should trigger analyticsService.trackEvent when Normal text is clicked" time="0.394">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarBlockType analytics should trigger analyticsService.trackEvent when Heading 1 is clicked" name="@atlaskit/editor-core/ui/ToolbarBlockType analytics should trigger analyticsService.trackEvent when Heading 1 is clicked" time="0.727">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarBlockType analytics should trigger analyticsService.trackEvent when Heading 2 is clicked" name="@atlaskit/editor-core/ui/ToolbarBlockType analytics should trigger analyticsService.trackEvent when Heading 2 is clicked" time="0.635">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarBlockType analytics should trigger analyticsService.trackEvent when Heading 3 is clicked" name="@atlaskit/editor-core/ui/ToolbarBlockType analytics should trigger analyticsService.trackEvent when Heading 3 is clicked" time="0.551">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarBlockType analytics should trigger analyticsService.trackEvent when Heading 4 is clicked" name="@atlaskit/editor-core/ui/ToolbarBlockType analytics should trigger analyticsService.trackEvent when Heading 4 is clicked" time="0.541">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarBlockType analytics should trigger analyticsService.trackEvent when Heading 5 is clicked" name="@atlaskit/editor-core/ui/ToolbarBlockType analytics should trigger analyticsService.trackEvent when Heading 5 is clicked" time="0.688">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editore-core/utils" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:04" time="2.568" tests="43">
    <testcase classname="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node supports the given mark type and a stored mark is present returns true if given mark type is not excluded" name="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node supports the given mark type and a stored mark is present returns true if given mark type is not excluded" time="0.009">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node supports the given mark type and a stored mark is present returns false if given mark type is excluded" name="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node supports the given mark type and a stored mark is present returns false if given mark type is excluded" time="0.006">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node supports the given mark type without a stored mark present and the selection is empty returns true if given mark type not excluded" name="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node supports the given mark type without a stored mark present and the selection is empty returns true if given mark type not excluded" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node supports the given mark type without a stored mark present and the selection is empty returns false if given mark type is excluded" name="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node supports the given mark type without a stored mark present and the selection is empty returns false if given mark type is excluded" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node supports the given mark type without a stored mark present and a non-empty selection returns false if mark type is allowed at the start of the selection" name="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node supports the given mark type without a stored mark present and a non-empty selection returns false if mark type is allowed at the start of the selection" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node supports the given mark type without a stored mark present and a non-empty selection returns true if the selection starts at the end of an excluded mark type" name="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node supports the given mark type without a stored mark present and a non-empty selection returns true if the selection starts at the end of an excluded mark type" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node supports the given mark type without a stored mark present and a non-empty selection returns false if mark type is excluded at the start of the selection" name="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node supports the given mark type without a stored mark present and a non-empty selection returns false if mark type is excluded at the start of the selection" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node supports the given mark type without a stored mark present and a non-empty selection returns true if the selection ends at the start of an excluded mark type" name="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node supports the given mark type without a stored mark present and a non-empty selection returns true if the selection ends at the start of an excluded mark type" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node supports the given mark type without a stored mark present and a non-empty selection returns false if the selection includes an excluded node" name="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node supports the given mark type without a stored mark present and a non-empty selection returns false if the selection includes an excluded node" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node does not support the given mark type returns false" name="@atlaskit/editore-core/utils #isMarkTypeAllowedInCurrentSelection when the current node does not support the given mark type returns false" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #areBlockTypesDisabled should return true is selection has a blockquote" name="@atlaskit/editore-core/utils #areBlockTypesDisabled should return true is selection has a blockquote" time="0.023">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #areBlockTypesDisabled should return false is selection has no blockquote" name="@atlaskit/editore-core/utils #areBlockTypesDisabled should return false is selection has no blockquote" time="0.008">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #moveCursorToTheEnd should move cursor to the end of a document" name="@atlaskit/editore-core/utils #moveCursorToTheEnd should move cursor to the end of a document" time="0.006">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #moveCursorToTheEnd should not blow up on empty document" name="@atlaskit/editore-core/utils #moveCursorToTheEnd should not blow up on empty document" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty paragraph" name="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty paragraph" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty paragraph" name="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty paragraph" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return false for invisible content" name="@atlaskit/editore-core/utils #isEmptyNode it should return false for invisible content" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty codeBlock" name="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty codeBlock" time="0">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty codeBlock" name="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty codeBlock" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty heading" name="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty heading" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty heading" name="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty heading" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty blockquote" name="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty blockquote" time="0.011">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty blockquote" name="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty blockquote" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty panel" name="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty panel" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty panel" name="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty panel" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty unordered list" name="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty unordered list" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty unordered" name="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty unordered" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty ordered list" name="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty ordered list" time="0">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty ordered" name="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty ordered" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty task list" name="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty task list" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty task list" name="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty task list" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty decision list" name="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty decision list" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty decision list" name="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty decision list" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return false for any mediaGroup" name="@atlaskit/editore-core/utils #isEmptyNode it should return false for any mediaGroup" time="0">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return false for any mediaSingle" name="@atlaskit/editore-core/utils #isEmptyNode it should return false for any mediaSingle" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty doc" name="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty doc" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty doc with empty panel" name="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty doc with empty panel" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty doc with empty heading" name="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty doc with empty heading" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty doc with multiple empty blocks" name="@atlaskit/editore-core/utils #isEmptyNode it should return true for empty doc with multiple empty blocks" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty doc" name="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty doc" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty doc" name="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty doc" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty doc with multiple empty blocks" name="@atlaskit/editore-core/utils #isEmptyNode it should return false for non-empty doc with multiple empty blocks" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editore-core/utils #isEmptyNode it should throw for unknown nodes" name="@atlaskit/editore-core/utils #isEmptyNode it should throw for unknown nodes" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/single-select - smart" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:06" time="1.835" tests="7">
    <testcase classname="@atlaskit/single-select - smart render should render stateless single select" name="@atlaskit/single-select - smart render should render stateless single select" time="0.075">
    </testcase>
    <testcase classname="@atlaskit/single-select - smart native search when select is closed should select first matching item when a key is pressed" name="@atlaskit/single-select - smart native search when select is closed should select first matching item when a key is pressed" time="0.063">
    </testcase>
    <testcase classname="@atlaskit/single-select - smart native search when select is closed should select next matching item if the same key was pressed after an interval" name="@atlaskit/single-select - smart native search when select is closed should select next matching item if the same key was pressed after an interval" time="0.537">
    </testcase>
    <testcase classname="@atlaskit/single-select - smart native search when select is closed should select first matching item after the selected item" name="@atlaskit/single-select - smart native search when select is closed should select first matching item after the selected item" time="0.128">
    </testcase>
    <testcase classname="@atlaskit/single-select - smart native search when select is closed should return to the first matching item when the last one was selected" name="@atlaskit/single-select - smart native search when select is closed should return to the first matching item when the last one was selected" time="0.304">
    </testcase>
    <testcase classname="@atlaskit/single-select - smart native search should &quot;append&quot; values if keys are pressed quickly" name="@atlaskit/single-select - smart native search should &quot;append&quot; values if keys are pressed quickly" time="0.084">
    </testcase>
    <testcase classname="@atlaskit/single-select - smart with JSX item content should set filterValue initially using item label instead of content" name="@atlaskit/single-select - smart with JSX item content should set filterValue initially using item label instead of content" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="paste plugins" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:07" time="2.833" tests="21">
    <testcase classname="paste plugins handlePaste message editor pastes" name="paste plugins handlePaste message editor pastes" time="0.041">
    </testcase>
    <testcase classname="paste plugins handlePaste non message editor when message is a media image node paste as mediaSingle" name="paste plugins handlePaste non message editor when message is a media image node paste as mediaSingle" time="0.012">
    </testcase>
    <testcase classname="paste plugins handlePaste non message editor when message is not a media image node does nothing" name="paste plugins handlePaste non message editor when message is not a media image node does nothing" time="0.007">
    </testcase>
    <testcase classname="paste plugins handlePaste should not create paragraph when plain text is copied in code-block" name="paste plugins handlePaste should not create paragraph when plain text is copied in code-block" time="0.011">
    </testcase>
    <testcase classname="paste plugins handlePaste should create paragraph when plain text is not copied in code-block" name="paste plugins handlePaste should create paragraph when plain text is not copied in code-block" time="0.031">
    </testcase>
    <testcase classname="paste plugins handlePaste hyperlink as a plain text should linkify hyperlink if it contains &quot;...&quot;" name="paste plugins handlePaste hyperlink as a plain text should linkify hyperlink if it contains &quot;...&quot;" time="0.019">
    </testcase>
    <testcase classname="paste plugins handlePaste hyperlink as a plain text should linkify pasted hyperlink if it contains &quot;---&quot;" name="paste plugins handlePaste hyperlink as a plain text should linkify pasted hyperlink if it contains &quot;---&quot;" time="0.008">
    </testcase>
    <testcase classname="paste plugins handlePaste hyperlink as a plain text should linkify pasted hyperlink if it contains &quot;~~~&quot;" name="paste plugins handlePaste hyperlink as a plain text should linkify pasted hyperlink if it contains &quot;~~~&quot;" time="0.01">
    </testcase>
    <testcase classname="paste plugins handlePaste hyperlink as a plain text should linkify pasted hyperlink if it contains combination of &quot;~~~&quot;, &quot;---&quot; and &quot;...&quot;" name="paste plugins handlePaste hyperlink as a plain text should linkify pasted hyperlink if it contains combination of &quot;~~~&quot;, &quot;---&quot; and &quot;...&quot;" time="0.007">
    </testcase>
    <testcase classname="paste plugins handlePaste hyperlink as a plain text should parse Urls with nested parentheses" name="paste plugins handlePaste hyperlink as a plain text should parse Urls with nested parentheses" time="0.078">
    </testcase>
    <testcase classname="paste plugins handlePaste hyperlink as a plain text should parse Urls with &quot;__text__&quot; and don" name="paste plugins handlePaste hyperlink as a plain text should parse Urls with &quot;__text__&quot; and don" time="0.012">
    </testcase>
    <testcase classname="paste plugins handlePaste hyperlink as a plain text should parse Urls with &quot;**text**&quot;" name="paste plugins handlePaste hyperlink as a plain text should parse Urls with &quot;**text**&quot;" time="0.009">
    </testcase>
    <testcase classname="paste plugins handlePaste hyperlink as a plain text should parse Urls with &quot;~~text~~&quot;" name="paste plugins handlePaste hyperlink as a plain text should parse Urls with &quot;~~text~~&quot;" time="0.007">
    </testcase>
    <testcase classname="paste plugins handlePaste hyperlink as a plain text if pasted markdown followed by hyperlink should parse markdown and create a hyperlink" name="paste plugins handlePaste hyperlink as a plain text if pasted markdown followed by hyperlink should parse markdown and create a hyperlink" time="0.009">
    </testcase>
    <testcase classname="paste plugins handlePaste should create code-block for multiple lines of code copied" name="paste plugins handlePaste should create code-block for multiple lines of code copied" time="0.012">
    </testcase>
    <testcase classname="paste plugins handlePaste should create code mark for single lines of code copied" name="paste plugins handlePaste should create code mark for single lines of code copied" time="0.011">
    </testcase>
    <testcase classname="paste plugins handlePaste should create code block for font-family monospace css" name="paste plugins handlePaste should create code block for font-family monospace css" time="0.013">
    </testcase>
    <testcase classname="paste plugins handlePaste should create code block for whitespace pre css" name="paste plugins handlePaste should create code block for whitespace pre css" time="0.008">
    </testcase>
    <testcase classname="paste plugins handlePaste should not create code block for whitespace pre-wrap css" name="paste plugins handlePaste should not create code block for whitespace pre-wrap css" time="0.012">
    </testcase>
    <testcase classname="paste plugins handlePaste should not handle events with Files type" name="paste plugins handlePaste should not handle events with Files type" time="0.006">
    </testcase>
    <testcase classname="paste plugins handlePaste should work properly when pasting multiple link markdowns" name="paste plugins handlePaste should work properly when pasting multiple link markdowns" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="UploadService" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:07" time="3.022" tests="30">
    <testcase classname="UploadService setUploadParams should apply defaultUploadParams" name="UploadService setUploadParams should apply defaultUploadParams" time="0.011">
    </testcase>
    <testcase classname="UploadService setUploadParams should combine default uploadParams given new upload parameters" name="UploadService setUploadParams should combine default uploadParams given new upload parameters" time="0.001">
    </testcase>
    <testcase classname="UploadService dropzone addDropzone should call addEventListener and assignDrop" name="UploadService dropzone addDropzone should call addEventListener and assignDrop" time="0.004">
    </testcase>
    <testcase classname="UploadService dropzone addDropzone should not call addEventListener and assignDrop if dropzone was already added to same element" name="UploadService dropzone addDropzone should not call addEventListener and assignDrop if dropzone was already added to same element" time="0.003">
    </testcase>
    <testcase classname="UploadService dropzone addDropzone should not call addEventListener and assignDrop twice if dropzone was already added to another element" name="UploadService dropzone addDropzone should not call addEventListener and assignDrop twice if dropzone was already added to another element" time="0.002">
    </testcase>
    <testcase classname="UploadService dropzone removeDropzone should call removeEventListener and unAssignDrop" name="UploadService dropzone removeDropzone should call removeEventListener and unAssignDrop" time="0.002">
    </testcase>
    <testcase classname="UploadService dropzone removeDropzone should call removeEventListener and unAssignDrop only once if is called twice" name="UploadService dropzone removeDropzone should call removeEventListener and unAssignDrop only once if is called twice" time="0.003">
    </testcase>
    <testcase classname="UploadService dropzone removeDropzone should not call removeEventListener and unAssignDrop if the dropzone was not added" name="UploadService dropzone removeDropzone should not call removeEventListener and unAssignDrop if the dropzone was not added" time="0.001">
    </testcase>
    <testcase classname="UploadService dropzone addDropzone should call addEventListener and assignDrop if dropzone was added and removed before" name="UploadService dropzone addDropzone should call addEventListener and assignDrop if dropzone was added and removed before" time="0.003">
    </testcase>
    <testcase classname="UploadService cancel should find resumable file by its unique id and call cancel if the file is found" name="UploadService cancel should find resumable file by its unique id and call cancel if the file is found" time="0.001">
    </testcase>
    <testcase classname="UploadService cancel should find resumable file by its unique id and do nothing if the file is not found" name="UploadService cancel should find resumable file by its unique id and do nothing if the file is not found" time="0">
    </testcase>
    <testcase classname="UploadService cancel should call cancel on resumable if unique id is not provided" name="UploadService cancel should call cancel on resumable if unique id is not provided" time="0.002">
    </testcase>
    <testcase classname="UploadService query should have client based auth parameters" name="UploadService query should have client based auth parameters" time="0.013">
    </testcase>
    <testcase classname="UploadService query should have issuer based auth parameters" name="UploadService query should have issuer based auth parameters" time="0.005">
    </testcase>
    <testcase classname="UploadService target should have client based auth parameters" name="UploadService target should have client based auth parameters" time="0.003">
    </testcase>
    <testcase classname="UploadService target should have issuer based auth parameters" name="UploadService target should have issuer based auth parameters" time="0.005">
    </testcase>
    <testcase classname="UploadService add should call createHasher once and its hash function twice for different UploadService instance" name="UploadService add should call createHasher once and its hash function twice for different UploadService instance" time="0.005">
    </testcase>
    <testcase classname="UploadService File events should emit &quot;files-added&quot; event" name="UploadService File events should emit &quot;files-added&quot; event" time="1.075">
    </testcase>
    <testcase classname="UploadService File events should not fire &quot;file-uploading&quot; for file with undefined progress" name="UploadService File events should not fire &quot;file-uploading&quot; for file with undefined progress" time="0.505">
    </testcase>
    <testcase classname="UploadService File events should not fire &quot;file-uploading&quot; for file with zero progress" name="UploadService File events should not fire &quot;file-uploading&quot; for file with zero progress" time="0.003">
    </testcase>
    <testcase classname="UploadService File events should not fire &quot;file-uploading&quot; for file with progress 1" name="UploadService File events should not fire &quot;file-uploading&quot; for file with progress 1" time="0.002">
    </testcase>
    <testcase classname="UploadService File events should fire &quot;file-uploading&quot; for file with progress 0.4" name="UploadService File events should fire &quot;file-uploading&quot; for file with progress 0.4" time="0.043">
    </testcase>
    <testcase classname="UploadService File events should finalize file automatically if finalizeFile in uploadParams is true" name="UploadService File events should finalize file automatically if finalizeFile in uploadParams is true" time="0.015">
    </testcase>
    <testcase classname="UploadService File events should emit &quot;file-finalize-ready&quot; if finalizeFile in uploadParams is false" name="UploadService File events should emit &quot;file-finalize-ready&quot; if finalizeFile in uploadParams is false" time="0.005">
    </testcase>
    <testcase classname="UploadService File events should fire &quot;file-upload-error&quot; with associated file and error" name="UploadService File events should fire &quot;file-upload-error&quot; with associated file and error" time="0.066">
    </testcase>
    <testcase classname="UploadService #finalizeFile() calls #copyFileToUsersCollection when upload is added to tenants collection" name="UploadService #finalizeFile() calls #copyFileToUsersCollection when upload is added to tenants collection" time="0.033">
    </testcase>
    <testcase classname="UploadService #copyFileToUsersCollection() resolves immediately when userAuthProvider was not passed in to UploadService constructor" name="UploadService #copyFileToUsersCollection() resolves immediately when userAuthProvider was not passed in to UploadService constructor" time="0.001">
    </testcase>
    <testcase classname="UploadService #copyFileToUsersCollection() calls the authProvider with the sourceCollection" name="UploadService #copyFileToUsersCollection() calls the authProvider with the sourceCollection" time="0.001">
    </testcase>
    <testcase classname="UploadService #copyFileToUsersCollection() resolves with api#copyFileToCollection response when userAuthProvider was passed into UploadService" name="UploadService #copyFileToUsersCollection() resolves with api#copyFileToCollection response when userAuthProvider was passed into UploadService" time="0.001">
    </testcase>
    <testcase classname="UploadService #copyFileToUsersCollection() rejects with api#copyFileToCollection rejection when userAuthProvider was passed into UploadService" name="UploadService #copyFileToUsersCollection() rejects with api#copyFileToCollection rejection when userAuthProvider was passed into UploadService" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ArtifactFormat" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:10" time="0.513" tests="4">
    <testcase classname="ArtifactFormat fromMediaItem should return undefined for partial files" name="ArtifactFormat fromMediaItem should return undefined for partial files" time="0.003">
    </testcase>
    <testcase classname="ArtifactFormat fromMediaItem should return image/gif for files with mime type image/gif" name="ArtifactFormat fromMediaItem should return image/gif for files with mime type image/gif" time="0.001">
    </testcase>
    <testcase classname="ArtifactFormat fromMediaItem should return correct media viewer item type for various media types" name="ArtifactFormat fromMediaItem should return correct media viewer item type for various media types" time="0.006">
    </testcase>
    <testcase classname="ArtifactFormat fromMediaItem should return undefined for links" name="ArtifactFormat fromMediaItem should return undefined for links" time="0">
    </testcase>
  </testsuite>
  <testsuite name="CardGenericViewSmall" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:11" time="0.559" tests="5">
    <testcase classname="CardGenericViewSmall InfoView Wrapper should align at the top when valign=top" name="CardGenericViewSmall InfoView Wrapper should align at the top when valign=top" time="0.019">
    </testcase>
    <testcase classname="CardGenericViewSmall InfoView Wrapper should align at the bottom when valign=bottom" name="CardGenericViewSmall InfoView Wrapper should align at the bottom when valign=bottom" time="0.006">
    </testcase>
    <testcase classname="CardGenericViewSmall InfoView Wrapper should align at the center when valign is undefined" name="CardGenericViewSmall InfoView Wrapper should align at the center when valign is undefined" time="0.011">
    </testcase>
    <testcase classname="CardGenericViewSmall InfoView Subtitle should render as a link when isLink=true" name="CardGenericViewSmall InfoView Subtitle should render as a link when isLink=true" time="0.03">
    </testcase>
    <testcase classname="CardGenericViewSmall InfoView Subtitle should not render as a link when isLink=false" name="CardGenericViewSmall InfoView Subtitle should not render as a link when isLink=false" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/Mention" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:11" time="1.514" tests="3">
    <testcase classname="Renderer - React/Nodes/Mention should render UI mention component" name="Renderer - React/Nodes/Mention should render UI mention component" time="0.032">
    </testcase>
    <testcase classname="Renderer - React/Nodes/Mention should render with access level if prop exists" name="Renderer - React/Nodes/Mention should render with access level if prop exists" time="0.023">
    </testcase>
    <testcase classname="Renderer - React/Nodes/Mention should pass event handlers into resourced mention" name="Renderer - React/Nodes/Mention should pass event handlers into resourced mention" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="emojis - input rules" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:12" time="2.358" tests="14">
    <testcase classname="emojis - input rules should replace a standalone &quot;:&quot; with emoji-query-mark" name="emojis - input rules should replace a standalone &quot;:&quot; with emoji-query-mark" time="0.022">
    </testcase>
    <testcase classname="emojis - input rules should not replace a &quot;:&quot; when part of a word" name="emojis - input rules should not replace a &quot;:&quot; when part of a word" time="0.011">
    </testcase>
    <testcase classname="emojis - input rules should not replace a &quot;:&quot; after the &quot;`&quot;" name="emojis - input rules should not replace a &quot;:&quot; after the &quot;`&quot;" time="0.007">
    </testcase>
    <testcase classname="emojis - input rules should replace &quot;:&quot; at the start of the content" name="emojis - input rules should replace &quot;:&quot; at the start of the content" time="0.021">
    </testcase>
    <testcase classname="emojis - input rules should replace &quot;:&quot; if there are multiple spaces in front of it" name="emojis - input rules should replace &quot;:&quot; if there are multiple spaces in front of it" time="0.004">
    </testcase>
    <testcase classname="emojis - input rules should replace &quot;:&quot; if there is a hardbreak node in front of it" name="emojis - input rules should replace &quot;:&quot; if there is a hardbreak node in front of it" time="0.005">
    </testcase>
    <testcase classname="emojis - input rules should replace &quot;:&quot; if there is another emoji node in front of it" name="emojis - input rules should replace &quot;:&quot; if there is another emoji node in front of it" time="0.033">
    </testcase>
    <testcase classname="emojis - input rules should replace &quot;:&quot; if there is a mention node in front of it" name="emojis - input rules should replace &quot;:&quot; if there is a mention node in front of it" time="0.005">
    </testcase>
    <testcase classname="emojis - input rules should not replace &quot;:&quot; when in an unsupported node" name="emojis - input rules should not replace &quot;:&quot; when in an unsupported node" time="0.003">
    </testcase>
    <testcase classname="emojis - input rules should not replace &quot;: when there is an unsupported stored mark" name="emojis - input rules should not replace &quot;: when there is an unsupported stored mark" time="0.005">
    </testcase>
    <testcase classname="emojis - input rules should replace non empty selection with emojiQuery mark" name="emojis - input rules should replace non empty selection with emojiQuery mark" time="0.006">
    </testcase>
    <testcase classname="emojis - input rules should not replace non empty selection with emojiQuery mark if selection starts with an excluding mark" name="emojis - input rules should not replace non empty selection with emojiQuery mark if selection starts with an excluding mark" time="0.005">
    </testcase>
    <testcase classname="emojis - input rules should not replace a &quot;:&quot; preceded by a special character" name="emojis - input rules should not replace a &quot;:&quot; preceded by a special character" time="0.005">
    </testcase>
    <testcase classname="emojis - input rules should replace a &quot;:&quot; when preceded by an opening round bracket" name="emojis - input rules should replace a &quot;:&quot; when preceded by an opening round bracket" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="mediaSingle - keymap" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:14" time="2.768" tests="6">
    <testcase classname="mediaSingle - keymap should remove the empty paragraph on backspace" name="mediaSingle - keymap should remove the empty paragraph on backspace" time="0.093">
    </testcase>
    <testcase classname="mediaSingle - keymap should remove the empty blockquote on backspace" name="mediaSingle - keymap should remove the empty blockquote on backspace" time="0.039">
    </testcase>
    <testcase classname="mediaSingle - keymap should remove the empty codeBlock on backspace" name="mediaSingle - keymap should remove the empty codeBlock on backspace" time="0.034">
    </testcase>
    <testcase classname="mediaSingle - keymap should not remove anything on backspace if the paragraph before is not empty" name="mediaSingle - keymap should not remove anything on backspace if the paragraph before is not empty" time="0.057">
    </testcase>
    <testcase classname="mediaSingle - keymap should not remove the first empty paragraph on backspace if the selection is not empty" name="mediaSingle - keymap should not remove the first empty paragraph on backspace if the selection is not empty" time="0.031">
    </testcase>
    <testcase classname="mediaSingle - keymap should not remove the first empty paragraph on backspace if mediaSingle is not wrap-right" name="mediaSingle - keymap should not remove the first empty paragraph on backspace if mediaSingle is not wrap-right" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="TableFloatingControls" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:12" time="5.911" tests="22">
    <testcase classname="TableFloatingControls when pluginState.tableElement is undefined should not render table header" name="TableFloatingControls when pluginState.tableElement is undefined should not render table header" time="0.024">
    </testcase>
    <testcase classname="TableFloatingControls when pluginState.tableElement is defined should render CornerControls, ColumnControls and RowControls" name="TableFloatingControls when pluginState.tableElement is defined should render CornerControls, ColumnControls and RowControls" time="0.018">
    </testcase>
    <testcase classname="TableFloatingControls when editor is not focused should not render table controls" name="TableFloatingControls when editor is not focused should not render table controls" time="0.229">
    </testcase>
    <testcase classname="TableFloatingControls CornerControls when isTableSelected is true should render selected header" name="TableFloatingControls CornerControls when isTableSelected is true should render selected header" time="0.434">
    </testcase>
    <testcase classname="TableFloatingControls ColumnControls when table has 1 columns should render 1 column header buttons" name="TableFloatingControls ColumnControls when table has 1 columns should render 1 column header buttons" time="0.188">
    </testcase>
    <testcase classname="TableFloatingControls ColumnControls when table has 2 columns should render 2 column header buttons" name="TableFloatingControls ColumnControls when table has 2 columns should render 2 column header buttons" time="0.28">
    </testcase>
    <testcase classname="TableFloatingControls ColumnControls when table has 3 columns should render 3 column header buttons" name="TableFloatingControls ColumnControls when table has 3 columns should render 3 column header buttons" time="0.236">
    </testcase>
    <testcase classname="TableFloatingControls ColumnControls when HeaderButton in column 1 is clicked should call selectColumn(0)" name="TableFloatingControls ColumnControls when HeaderButton in column 1 is clicked should call selectColumn(0)" time="0.248">
    </testcase>
    <testcase classname="TableFloatingControls ColumnControls when HeaderButton in column 2 is clicked should call selectColumn(1)" name="TableFloatingControls ColumnControls when HeaderButton in column 2 is clicked should call selectColumn(1)" time="0.27">
    </testcase>
    <testcase classname="TableFloatingControls ColumnControls when HeaderButton in column 3 is clicked should call selectColumn(2)" name="TableFloatingControls ColumnControls when HeaderButton in column 3 is clicked should call selectColumn(2)" time="0.236">
    </testcase>
    <testcase classname="TableFloatingControls RowControls when table has 1 rows should render 1 row header buttons" name="TableFloatingControls RowControls when table has 1 rows should render 1 row header buttons" time="0.137">
    </testcase>
    <testcase classname="TableFloatingControls RowControls when table has 2 rows should render 2 row header buttons" name="TableFloatingControls RowControls when table has 2 rows should render 2 row header buttons" time="0.241">
    </testcase>
    <testcase classname="TableFloatingControls RowControls when table has 3 rows should render 3 row header buttons" name="TableFloatingControls RowControls when table has 3 rows should render 3 row header buttons" time="0.204">
    </testcase>
    <testcase classname="TableFloatingControls RowControls when HeaderButton in row 1 is clicked should call selectRow(0)" name="TableFloatingControls RowControls when HeaderButton in row 1 is clicked should call selectRow(0)" time="0.229">
    </testcase>
    <testcase classname="TableFloatingControls RowControls when HeaderButton in row 2 is clicked should call selectRow(1)" name="TableFloatingControls RowControls when HeaderButton in row 2 is clicked should call selectRow(1)" time="0.236">
    </testcase>
    <testcase classname="TableFloatingControls RowControls when HeaderButton in row 3 is clicked should call selectRow(2)" name="TableFloatingControls RowControls when HeaderButton in row 3 is clicked should call selectRow(2)" time="0.218">
    </testcase>
    <testcase classname="TableFloatingControls InsertColumnButton when InsertColumnButton with index 0 is clicked should call pluginState.insertColumn(0)" name="TableFloatingControls InsertColumnButton when InsertColumnButton with index 0 is clicked should call pluginState.insertColumn(0)" time="0.03">
    </testcase>
    <testcase classname="TableFloatingControls InsertColumnButton when InsertColumnButton with index 1 is clicked should call pluginState.insertColumn(1)" name="TableFloatingControls InsertColumnButton when InsertColumnButton with index 1 is clicked should call pluginState.insertColumn(1)" time="0.033">
    </testcase>
    <testcase classname="TableFloatingControls InsertColumnButton when InsertColumnButton with index 2 is clicked should call pluginState.insertColumn(2)" name="TableFloatingControls InsertColumnButton when InsertColumnButton with index 2 is clicked should call pluginState.insertColumn(2)" time="0.025">
    </testcase>
    <testcase classname="TableFloatingControls InsertRowButton when InsertRowButton with index 0 is clicked should call pluginState.insertRow(0)" name="TableFloatingControls InsertRowButton when InsertRowButton with index 0 is clicked should call pluginState.insertRow(0)" time="0.019">
    </testcase>
    <testcase classname="TableFloatingControls InsertRowButton when InsertRowButton with index 1 is clicked should call pluginState.insertRow(1)" name="TableFloatingControls InsertRowButton when InsertRowButton with index 1 is clicked should call pluginState.insertRow(1)" time="0.024">
    </testcase>
    <testcase classname="TableFloatingControls InsertRowButton when InsertRowButton with index 2 is clicked should call pluginState.insertRow(2)" name="TableFloatingControls InsertRowButton when InsertRowButton with index 2 is clicked should call pluginState.insertRow(2)" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="unsupportedBlock - React component" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:18" time="1.789" tests="2">
    <testcase classname="unsupportedBlock - React component should return a node of type div" name="unsupportedBlock - React component should return a node of type div" time="0.025">
    </testcase>
    <testcase classname="unsupportedBlock - React component should have text content as string &quot;Unsupported content&quot;" name="unsupportedBlock - React component should have text content as string &quot;Unsupported content&quot;" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="FloatingToolbar" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:19" time="1.739" tests="7">
    <testcase classname="FloatingToolbar renders nothing if there is no target" name="FloatingToolbar renders nothing if there is no target" time="0.012">
    </testcase>
    <testcase classname="FloatingToolbar renders popup" name="FloatingToolbar renders popup" time="0.065">
    </testcase>
    <testcase classname="FloatingToolbar renders container" name="FloatingToolbar renders container" time="0.034">
    </testcase>
    <testcase classname="FloatingToolbar defaults popup height" name="FloatingToolbar defaults popup height" time="0.027">
    </testcase>
    <testcase classname="FloatingToolbar defaults container height" name="FloatingToolbar defaults container height" time="0.054">
    </testcase>
    <testcase classname="FloatingToolbar passes height to container" name="FloatingToolbar passes height to container" time="0.025">
    </testcase>
    <testcase classname="FloatingToolbar passes height to container" name="FloatingToolbar passes height to container" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="placeholderplugin" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:20" time="2.424" tests="3">
    <testcase classname="placeholderplugin stateKey should be well defined" name="placeholderplugin stateKey should be well defined" time="0.007">
    </testcase>
    <testcase classname="placeholderplugin plugin should have defined property decorations" name="placeholderplugin plugin should have defined property decorations" time="0.001">
    </testcase>
    <testcase classname="placeholderplugin plugin should add placeholder cursor" name="placeholderplugin plugin should add placeholder cursor" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema image node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:23" time="0.976" tests="3">
    <testcase classname="@atlaskit/editor-common/schema image node serializes to &lt;img&gt;" name="@atlaskit/editor-common/schema image node serializes to &lt;img&gt;" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema image node matches &lt;img src=&quot;...&quot;&gt;" name="@atlaskit/editor-common/schema image node matches &lt;img src=&quot;...&quot;&gt;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema image node does not match &lt;img src=&quot;data:image/...&quot;&gt;" name="@atlaskit/editor-common/schema image node does not match &lt;img src=&quot;data:image/...&quot;&gt;" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="App" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:21" time="5.04" tests="4">
    <testcase classname="App should render UploadView given selectedServiceName is &quot;upload&quot;" name="App should render UploadView given selectedServiceName is &quot;upload&quot;" time="0.013">
    </testcase>
    <testcase classname="App should render Browser given selectedServiceName is &quot;google&quot;" name="App should render Browser given selectedServiceName is &quot;google&quot;" time="0.004">
    </testcase>
    <testcase classname="App should call onStartApp" name="App should call onStartApp" time="0.002">
    </testcase>
    <testcase classname="Connected App should dispatch FILE_UPLOADS_START when onUploadsStart is called" name="Connected App should dispatch FILE_UPLOADS_START when onUploadsStart is called" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema Confluence schema" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:35:30" time="117.873" tests="1">
    <testcase classname="@atlaskit/editor-common/schema Confluence schema has all expects nodes and marks" name="@atlaskit/editor-common/schema Confluence schema has all expects nodes and marks" time="113.1">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core ui/PanelPlugin" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:26" time="3.543" tests="26">
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API should allow a change handler to be registered" name="@atlaskit/editor-core ui/PanelPlugin API should allow a change handler to be registered" time="0.068">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API should get current state immediately once subscribed" name="@atlaskit/editor-core ui/PanelPlugin API should get current state immediately once subscribed" time="0.026">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API should call subscribers with argument panel state" name="@atlaskit/editor-core ui/PanelPlugin API should call subscribers with argument panel state" time="0.015">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API should call subscribers when panel is clicked" name="@atlaskit/editor-core ui/PanelPlugin API should call subscribers when panel is clicked" time="0.011">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API should not call subscribers when another block in editor is clicked" name="@atlaskit/editor-core ui/PanelPlugin API should not call subscribers when another block in editor is clicked" time="0.016">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API should call subscribers when panel was focused and editor blur" name="@atlaskit/editor-core ui/PanelPlugin API should call subscribers when panel was focused and editor blur" time="0.016">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API should not call subscribers when another block was focused and editor blur" name="@atlaskit/editor-core ui/PanelPlugin API should not call subscribers when another block was focused and editor blur" time="0.013">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API should not call subscribers when panel received focus" name="@atlaskit/editor-core ui/PanelPlugin API should not call subscribers when panel received focus" time="0.027">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API should be able to identify panel node" name="@atlaskit/editor-core ui/PanelPlugin API should be able to identify panel node" time="0.019">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API should be able to change panel type using function changeType" name="@atlaskit/editor-core ui/PanelPlugin API should be able to change panel type using function changeType" time="0.043">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API should be able to change panel type using function changeType for panel with multiple blocks" name="@atlaskit/editor-core ui/PanelPlugin API should be able to change panel type using function changeType for panel with multiple blocks" time="0.079">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API should be able to remove panel type using function removePanel" name="@atlaskit/editor-core ui/PanelPlugin API should be able to remove panel type using function removePanel" time="0.017">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API should be able to remove panel having multiple paragraphs" name="@atlaskit/editor-core ui/PanelPlugin API should be able to remove panel having multiple paragraphs" time="0.011">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API should be possible to remove panel inside table" name="@atlaskit/editor-core ui/PanelPlugin API should be possible to remove panel inside table" time="0.011">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API should be possible to remove panel with no text inside table" name="@atlaskit/editor-core ui/PanelPlugin API should be possible to remove panel with no text inside table" time="0.012">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API should be able to remove panel type using function removePanel even if panel has no text content" name="@atlaskit/editor-core ui/PanelPlugin API should be able to remove panel type using function removePanel even if panel has no text content" time="0.008">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API should be able to remove panel for panel of multiple blocks using function removePanel" name="@atlaskit/editor-core ui/PanelPlugin API should be able to remove panel for panel of multiple blocks using function removePanel" time="0.015">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API should not remove enclosing block while removing panel" name="@atlaskit/editor-core ui/PanelPlugin API should not remove enclosing block while removing panel" time="0.01">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API should call handlers for change in panel type" name="@atlaskit/editor-core ui/PanelPlugin API should call handlers for change in panel type" time="0.011">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin API shoul call handlers when panel is removed" name="@atlaskit/editor-core ui/PanelPlugin API shoul call handlers when panel is removed" time="0.015">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin toolbarVisible when editor is blur it is false" name="@atlaskit/editor-core ui/PanelPlugin toolbarVisible when editor is blur it is false" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin toolbarVisible when focus is inside a list in panel it is true" name="@atlaskit/editor-core ui/PanelPlugin toolbarVisible when focus is inside a list in panel it is true" time="0.009">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin editorFocued when editor is focused it is true" name="@atlaskit/editor-core ui/PanelPlugin editorFocued when editor is focused it is true" time="0.011">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin editorFocued when editor is blur it is false" name="@atlaskit/editor-core ui/PanelPlugin editorFocued when editor is blur it is false" time="0.015">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin keyMaps when Enter key is pressed a new paragraph should be created in panel" name="@atlaskit/editor-core ui/PanelPlugin keyMaps when Enter key is pressed a new paragraph should be created in panel" time="0.032">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelPlugin keyMaps when Enter key is pressed twice a new paragraph should be created outside panel" name="@atlaskit/editor-core ui/PanelPlugin keyMaps when Enter key is pressed twice a new paragraph should be created outside panel" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="AvatarGroup" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:28" time="1.469" tests="4">
    <testcase classname="AvatarGroup maxCount of 3 should display single avatar" name="AvatarGroup maxCount of 3 should display single avatar" time="0.032">
    </testcase>
    <testcase classname="AvatarGroup maxCount of 3 should display two avatars" name="AvatarGroup maxCount of 3 should display two avatars" time="0.002">
    </testcase>
    <testcase classname="AvatarGroup maxCount of 3 should display three avatars" name="AvatarGroup maxCount of 3 should display three avatars" time="0.003">
    </testcase>
    <testcase classname="AvatarGroup maxCount of 3 should display four avatars as 2 avatars and a +2" name="AvatarGroup maxCount of 3 should display four avatars as 2 avatars and a +2" time="0.185">
    </testcase>
  </testsuite>
  <testsuite name="tasks and decisions - keymaps" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:30" time="2.63" tests="18">
    <testcase classname="tasks and decisions - keymaps decisions Backspace when decisionList exists before paragraph should merge paragraph with decisionItem and preserve content" name="tasks and decisions - keymaps decisions Backspace when decisionList exists before paragraph should merge paragraph with decisionItem and preserve content" time="0.049">
    </testcase>
    <testcase classname="tasks and decisions - keymaps decisions Backspace when decisionList exists before paragraph should remove paragraph with decisionItem and preserve content" name="tasks and decisions - keymaps decisions Backspace when decisionList exists before paragraph should remove paragraph with decisionItem and preserve content" time="0.021">
    </testcase>
    <testcase classname="tasks and decisions - keymaps decisions Backspace when cursor is at the begining of a decisionItem should merge content of current item with previous item" name="tasks and decisions - keymaps decisions Backspace when cursor is at the begining of a decisionItem should merge content of current item with previous item" time="0.027">
    </testcase>
    <testcase classname="tasks and decisions - keymaps decisions Backspace when cursor is at the begining of the first decisionItem should convert item to paragraph" name="tasks and decisions - keymaps decisions Backspace when cursor is at the begining of the first decisionItem should convert item to paragraph" time="0.017">
    </testcase>
    <testcase classname="tasks and decisions - keymaps decisions Backspace when cursor is at the begining of the first decisionItem should convert item to paragraph and remove the list if it is empty" name="tasks and decisions - keymaps decisions Backspace when cursor is at the begining of the first decisionItem should convert item to paragraph and remove the list if it is empty" time="0.014">
    </testcase>
    <testcase classname="tasks and decisions - keymaps decisions Backspace when cursor is at the begining of the first decisionItem should delete selection and keep decisionItem" name="tasks and decisions - keymaps decisions Backspace when cursor is at the begining of the first decisionItem should delete selection and keep decisionItem" time="0.015">
    </testcase>
    <testcase classname="tasks and decisions - keymaps decisions Enter when decisionList is empty should remove decisionList and replace with paragraph" name="tasks and decisions - keymaps decisions Enter when decisionList is empty should remove decisionList and replace with paragraph" time="0.012">
    </testcase>
    <testcase classname="tasks and decisions - keymaps decisions Enter when cursor is at the end of empty decisionItem should remove decisionItem and insert a paragraph" name="tasks and decisions - keymaps decisions Enter when cursor is at the end of empty decisionItem should remove decisionItem and insert a paragraph" time="0.016">
    </testcase>
    <testcase classname="tasks and decisions - keymaps decisions Enter when cursor is at the end of non-empty decisionItem should insert another decisionItem" name="tasks and decisions - keymaps decisions Enter when cursor is at the end of non-empty decisionItem should insert another decisionItem" time="0.016">
    </testcase>
    <testcase classname="tasks and decisions - keymaps tasks Backspace when taskList exists before paragraph should merge paragraph with taskItem and preserve content" name="tasks and decisions - keymaps tasks Backspace when taskList exists before paragraph should merge paragraph with taskItem and preserve content" time="0.035">
    </testcase>
    <testcase classname="tasks and decisions - keymaps tasks Backspace when taskList exists before paragraph should remove paragraph with taskItem and preserve content" name="tasks and decisions - keymaps tasks Backspace when taskList exists before paragraph should remove paragraph with taskItem and preserve content" time="0.01">
    </testcase>
    <testcase classname="tasks and decisions - keymaps tasks Backspace when cursor is at the begining of a taskItem should merge content of current item with previous item" name="tasks and decisions - keymaps tasks Backspace when cursor is at the begining of a taskItem should merge content of current item with previous item" time="0.026">
    </testcase>
    <testcase classname="tasks and decisions - keymaps tasks Backspace when cursor is at the begining of the first taskItem should convert item to paragraph" name="tasks and decisions - keymaps tasks Backspace when cursor is at the begining of the first taskItem should convert item to paragraph" time="0.018">
    </testcase>
    <testcase classname="tasks and decisions - keymaps tasks Backspace when cursor is at the begining of the first taskItem should convert item to paragraph and remove the list if it is empty" name="tasks and decisions - keymaps tasks Backspace when cursor is at the begining of the first taskItem should convert item to paragraph and remove the list if it is empty" time="0.07">
    </testcase>
    <testcase classname="tasks and decisions - keymaps tasks Backspace when cursor is at the begining of the first taskItem should delete selection and keep taskItem" name="tasks and decisions - keymaps tasks Backspace when cursor is at the begining of the first taskItem should delete selection and keep taskItem" time="0.015">
    </testcase>
    <testcase classname="tasks and decisions - keymaps tasks Enter when taskList is empty should remove taskList and replace with paragraph" name="tasks and decisions - keymaps tasks Enter when taskList is empty should remove taskList and replace with paragraph" time="0.013">
    </testcase>
    <testcase classname="tasks and decisions - keymaps tasks Enter when cursor is at the end of empty taskItem should remove decisionItem and insert a paragraph" name="tasks and decisions - keymaps tasks Enter when cursor is at the end of empty taskItem should remove decisionItem and insert a paragraph" time="0.019">
    </testcase>
    <testcase classname="tasks and decisions - keymaps tasks Enter when cursor is at the end of non-empty taskItem should insert another taskItem" name="tasks and decisions - keymaps tasks Enter when cursor is at the end of non-empty taskItem should insert another taskItem" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="table keymap" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:24" time="9.08" tests="17">
    <testcase classname="table keymap Tab keypress when the whole row is selected it should select the first cell of the next row" name="table keymap Tab keypress when the whole row is selected it should select the first cell of the next row" time="0.279">
    </testcase>
    <testcase classname="table keymap Tab keypress when the whole column is selected it should select the last cell of the next column" name="table keymap Tab keypress when the whole column is selected it should select the last cell of the next column" time="0.377">
    </testcase>
    <testcase classname="table keymap Tab keypress when the cursor is at the first cell of the first row it should select next cell of the current row" name="table keymap Tab keypress when the cursor is at the first cell of the first row it should select next cell of the current row" time="0.01">
    </testcase>
    <testcase classname="table keymap Tab keypress when the cursor is at the last cell of the first row it should select first cell of the next row" name="table keymap Tab keypress when the cursor is at the last cell of the first row it should select first cell of the next row" time="0.006">
    </testcase>
    <testcase classname="table keymap Tab keypress when the cursor is at the last cell of the last row it should create a new row and select the first cell of the new row" name="table keymap Tab keypress when the cursor is at the last cell of the last row it should create a new row and select the first cell of the new row" time="0.009">
    </testcase>
    <testcase classname="table keymap Shift-Tab keypress when the cursor is at the last cell of the first row it should select previous cell of the current row" name="table keymap Shift-Tab keypress when the cursor is at the last cell of the first row it should select previous cell of the current row" time="0.005">
    </testcase>
    <testcase classname="table keymap Shift-Tab keypress when the cursor is at the first cell of the second row it should select the last cell of the first row" name="table keymap Shift-Tab keypress when the cursor is at the first cell of the second row it should select the last cell of the first row" time="0.006">
    </testcase>
    <testcase classname="table keymap Shift-Tab keypress when the cursor is at the first cell of the first row it should create a new row and select the first cell of the new row" name="table keymap Shift-Tab keypress when the cursor is at the first cell of the first row it should create a new row and select the first cell of the new row" time="0.006">
    </testcase>
    <testcase classname="table keymap Shift-Tab keypress Shift-Alt-T keypress it should insert 3x3 table" name="table keymap Shift-Tab keypress Shift-Alt-T keypress it should insert 3x3 table" time="0.006">
    </testcase>
    <testcase classname="table keymap Backspace keypress when cursor is immediately after the table it should move cursor to the last cell" name="table keymap Backspace keypress when cursor is immediately after the table it should move cursor to the last cell" time="0.061">
    </testcase>
    <testcase classname="table keymap Backspace keypress when table is selected it should empty table cells" name="table keymap Backspace keypress when table is selected it should empty table cells" time="0.321">
    </testcase>
    <testcase classname="table keymap Backspace keypress when row 1 is selected it should empty cells in the row 1" name="table keymap Backspace keypress when row 1 is selected it should empty cells in the row 1" time="0.346">
    </testcase>
    <testcase classname="table keymap Backspace keypress when column 1 is selected it should empty cells in the column 1" name="table keymap Backspace keypress when column 1 is selected it should empty cells in the column 1" time="0.453">
    </testcase>
    <testcase classname="table keymap Backspace keypress when row 2 is selected it should empty cells in the row 2" name="table keymap Backspace keypress when row 2 is selected it should empty cells in the row 2" time="0.378">
    </testcase>
    <testcase classname="table keymap Backspace keypress when column 2 is selected it should empty cells in the column 2" name="table keymap Backspace keypress when column 2 is selected it should empty cells in the column 2" time="0.301">
    </testcase>
    <testcase classname="table keymap Backspace keypress when row 3 is selected it should empty cells in the row 3" name="table keymap Backspace keypress when row 3 is selected it should empty cells in the row 3" time="0.26">
    </testcase>
    <testcase classname="table keymap Backspace keypress when column 3 is selected it should empty cells in the column 3" name="table keymap Backspace keypress when column 3 is selected it should empty cells in the column 3" time="0.436">
    </testcase>
  </testsuite>
  <testsuite name="AppCardViewV2" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:33" time="0.783" tests="22">
    <testcase classname="AppCardViewV2 should not render the old design by default" name="AppCardViewV2 should not render the old design by default" time="0.016">
    </testcase>
    <testcase classname="AppCardViewV2 should not render the old design when newDesign=false" name="AppCardViewV2 should not render the old design when newDesign=false" time="0.003">
    </testcase>
    <testcase classname="AppCardViewV2 should render the new design when newDesign=true" name="AppCardViewV2 should render the new design when newDesign=true" time="0.006">
    </testcase>
    <testcase classname="AppCardViewV2 should not convert context when context is missing" name="AppCardViewV2 should not convert context when context is missing" time="0.002">
    </testcase>
    <testcase classname="AppCardViewV2 should convert context with title when context is present" name="AppCardViewV2 should convert context with title when context is present" time="0.002">
    </testcase>
    <testcase classname="AppCardViewV2 should convert context with icon when context is present" name="AppCardViewV2 should convert context with icon when context is present" time="0.001">
    </testcase>
    <testcase classname="AppCardViewV2 should not convert link when link is missing " name="AppCardViewV2 should not convert link when link is missing " time="0.001">
    </testcase>
    <testcase classname="AppCardViewV2 should convert link when link is present" name="AppCardViewV2 should convert link when link is present" time="0.002">
    </testcase>
    <testcase classname="AppCardViewV2 should convert title when title is present" name="AppCardViewV2 should convert title when title is present" time="0.001">
    </testcase>
    <testcase classname="AppCardViewV2 should not convert description when description is missing" name="AppCardViewV2 should not convert description when description is missing" time="0.001">
    </testcase>
    <testcase classname="AppCardViewV2 should convert description when description is present" name="AppCardViewV2 should convert description when description is present" time="0.002">
    </testcase>
    <testcase classname="AppCardViewV2 should not convert preview when preview is missing" name="AppCardViewV2 should not convert preview when preview is missing" time="0.001">
    </testcase>
    <testcase classname="AppCardViewV2 should convert preview when preview is present" name="AppCardViewV2 should convert preview when preview is present" time="0.004">
    </testcase>
    <testcase classname="AppCardViewV2 should not convert missing user when icon is not present in the title" name="AppCardViewV2 should not convert missing user when icon is not present in the title" time="0.001">
    </testcase>
    <testcase classname="AppCardViewV2 should convert user when an icon is present in the title" name="AppCardViewV2 should convert user when an icon is present in the title" time="0.001">
    </testcase>
    <testcase classname="AppCardViewV2 should not convert and concat users when details is missing" name="AppCardViewV2 should not convert and concat users when details is missing" time="0">
    </testcase>
    <testcase classname="AppCardViewV2 should convert and concat users when details is present" name="AppCardViewV2 should convert and concat users when details is present" time="0.001">
    </testcase>
    <testcase classname="AppCardViewV2 should not convert details when details is missing" name="AppCardViewV2 should not convert details when details is missing" time="0.001">
    </testcase>
    <testcase classname="AppCardViewV2 should convert details when details is present" name="AppCardViewV2 should convert details when details is present" time="0.001">
    </testcase>
    <testcase classname="AppCardViewV2 should not convert actions when actions is missing" name="AppCardViewV2 should not convert actions when actions is missing" time="0.002">
    </testcase>
    <testcase classname="AppCardViewV2 should convert actions when actions is present" name="AppCardViewV2 should convert actions when actions is present" time="0.002">
    </testcase>
    <testcase classname="AppCardViewV2 should call onActionClick with the action" name="AppCardViewV2 should call onActionClick with the action" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Emoji" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:33" time="1.073" tests="4">
    <testcase classname="Emoji should render &quot;fallback&quot; if there is no emojiProvider prop" name="Emoji should render &quot;fallback&quot; if there is no emojiProvider prop" time="0.017">
    </testcase>
    <testcase classname="Emoji should still render resourced emoji if allowTextFallback=true" name="Emoji should still render resourced emoji if allowTextFallback=true" time="0.017">
    </testcase>
    <testcase classname="Emoji should render &quot;fallback&quot; if there is no emojiProvider prop and no fallback" name="Emoji should render &quot;fallback&quot; if there is no emojiProvider prop and no fallback" time="0.004">
    </testcase>
    <testcase classname="Emoji should render a EmojiWrapper component if emojiProvider supplied" name="Emoji should render a EmojiWrapper component if emojiProvider supplied" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/icon" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:30" time="4.941" tests="9">
    <testcase classname="@atlaskit/icon exports are properly defined for atomic ones" name="@atlaskit/icon exports are properly defined for atomic ones" time="0.408">
    </testcase>
    <testcase classname="@atlaskit/icon exports bundle has size export" name="@atlaskit/icon exports bundle has size export" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/icon exports bundle exports the Icon component" name="@atlaskit/icon exports bundle exports the Icon component" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/icon component structure should have role=&quot;img&quot;" name="@atlaskit/icon component structure should have role=&quot;img&quot;" time="0.068">
    </testcase>
    <testcase classname="@atlaskit/icon component structure should be possible to create the components" name="@atlaskit/icon component structure should be possible to create the components" time="0.388">
    </testcase>
    <testcase classname="@atlaskit/icon props label property should accept a label" name="@atlaskit/icon props label property should accept a label" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/icon gradients multiple gradients in a single icon should use unique ids" name="@atlaskit/icon gradients multiple gradients in a single icon should use unique ids" time="0.05">
    </testcase>
    <testcase classname="@atlaskit/icon gradients ids should be referenced correctly in fill properties" name="@atlaskit/icon gradients ids should be referenced correctly in fill properties" time="0.006">
    </testcase>
    <testcase classname="@atlaskit/icon gradients should have unique ids across icon instances" name="@atlaskit/icon gradients should have unique ids across icon instances" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="Api" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:34" time="1.453" tests="18">
    <testcase classname="Api createUpload should reject if mediaClient rejects the request" name="Api createUpload should reject if mediaClient rejects the request" time="0.419">
    </testcase>
    <testcase classname="Api createUpload should return uploadId if mediaClient successfully completes the request" name="Api createUpload should return uploadId if mediaClient successfully completes the request" time="0.011">
    </testcase>
    <testcase classname="Api createUpload should return uploadId if mediaClient returns a non-empty array only at second attempt" name="Api createUpload should return uploadId if mediaClient returns a non-empty array only at second attempt" time="0.005">
    </testcase>
    <testcase classname="Api createUpload should return uploadId if mediaClient successfully completes the request on the fifth attempt" name="Api createUpload should return uploadId if mediaClient successfully completes the request on the fifth attempt" time="0.004">
    </testcase>
    <testcase classname="Api appendChunksToUpload should resolve if the client resolves the call" name="Api appendChunksToUpload should resolve if the client resolves the call" time="0.003">
    </testcase>
    <testcase classname="Api appendChunksToUpload should reject if the client rejects the call" name="Api appendChunksToUpload should reject if the client rejects the call" time="0.002">
    </testcase>
    <testcase classname="Api createFileFromUpload should resolve if the client resolves the call, collection not included" name="Api createFileFromUpload should resolve if the client resolves the call, collection not included" time="0.002">
    </testcase>
    <testcase classname="Api createFileFromUpload should resolve if the client resolves the call, collection included" name="Api createFileFromUpload should resolve if the client resolves the call, collection included" time="0.003">
    </testcase>
    <testcase classname="Api createFileFromUpload should reject if the client rejects the call" name="Api createFileFromUpload should reject if the client rejects the call" time="0.002">
    </testcase>
    <testcase classname="Api pollFile should resolve if the client resolves the call with &quot;succeeded&quot; processing status, collection not included" name="Api pollFile should resolve if the client resolves the call with &quot;succeeded&quot; processing status, collection not included" time="0.003">
    </testcase>
    <testcase classname="Api pollFile should resolve if the client resolves the call with &quot;succeeded&quot; processing status, collection included" name="Api pollFile should resolve if the client resolves the call with &quot;succeeded&quot; processing status, collection included" time="0.004">
    </testcase>
    <testcase classname="Api pollFile should resolve if the client resolves the call with &quot;failed&quot; processing status, collection not included" name="Api pollFile should resolve if the client resolves the call with &quot;failed&quot; processing status, collection not included" time="0.003">
    </testcase>
    <testcase classname="Api pollFile should resolve if the client resolves the call with &quot;failed&quot; processing status, collection included" name="Api pollFile should resolve if the client resolves the call with &quot;failed&quot; processing status, collection included" time="0.004">
    </testcase>
    <testcase classname="Api pollFile should resolve with metadata if the client firstly responds with processing status &quot;pending&quot; and then &quot;succeeded&quot;" name="Api pollFile should resolve with metadata if the client firstly responds with processing status &quot;pending&quot; and then &quot;succeeded&quot;" time="0.112">
    </testcase>
    <testcase classname="Api pollFile should resolve metadata if the client responds with processing status &quot;succeeded&quot; only from the 10th attempt" name="Api pollFile should resolve metadata if the client responds with processing status &quot;succeeded&quot; only from the 10th attempt" time="0.003">
    </testcase>
    <testcase classname="Api pollFile should reject if the client always rejects the call" name="Api pollFile should reject if the client always rejects the call" time="0.002">
    </testcase>
    <testcase classname="Api copyFileToCollection() should invoke mediaClient.call() with correct request object" name="Api copyFileToCollection() should invoke mediaClient.call() with correct request object" time="0.001">
    </testcase>
    <testcase classname="Api copyFileToCollection() should reject if mediaClient.call() rejects" name="Api copyFileToCollection() should reject if mediaClient.call() rejects" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema confluence-inline-comment mark" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:34" time="1.449" tests="1">
    <testcase classname="@atlaskit/editor-common/schema confluence-inline-comment mark serializes to &lt;span data-reference=&quot;hash-ref-goes-here&quot;&gt;" name="@atlaskit/editor-common/schema confluence-inline-comment mark serializes to &lt;span data-reference=&quot;hash-ref-goes-here&quot;&gt;" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/size-detector" errors="0" failures="0" skipped="1" timestamp="2018-01-09T09:37:36" time="0.616" tests="5">
    <testcase classname="@atlaskit/size-detector should pass width and height to child function" name="@atlaskit/size-detector should pass width and height to child function" time="0.022">
    </testcase>
    <testcase classname="@atlaskit/size-detector should use requestAnimationFrame to queue resize measurements" name="@atlaskit/size-detector should use requestAnimationFrame to queue resize measurements" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/size-detector should call cancelAnimationFrame when unmounted" name="@atlaskit/size-detector should call cancelAnimationFrame when unmounted" time="0.016">
    </testcase>
    <testcase classname="@atlaskit/size-detector should pass updated size measurements to the child function on resize" name="@atlaskit/size-detector should pass updated size measurements to the child function on resize" time="0.009">
    </testcase>
    <testcase classname="@atlaskit/size-detector should call the child function with updated width and height on resize" name="@atlaskit/size-detector should call the child function with updated width and height on resize" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema bodiedExtension node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:35" time="1.612" tests="4">
    <testcase classname="@atlaskit/editor-common/schema bodiedExtension node parse html converts to extension PM node" name="@atlaskit/editor-common/schema bodiedExtension node parse html converts to extension PM node" time="0.046">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema bodiedExtension node parse html gets attributes from html" name="@atlaskit/editor-common/schema bodiedExtension node parse html gets attributes from html" time="0.014">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema bodiedExtension node encode html converts html data attributes to node attributes" name="@atlaskit/editor-common/schema bodiedExtension node encode html converts html data attributes to node attributes" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema bodiedExtension node encode html encodes and decodes to the same node" name="@atlaskit/editor-common/schema bodiedExtension node encode html encodes and decodes to the same node" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="dataURItoFile, fileToDataURI Util" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:36" time="1.455" tests="2">
    <testcase classname="dataURItoFile, fileToDataURI Util should convert dataURI to File" name="dataURItoFile, fileToDataURI Util should convert dataURI to File" time="0.001">
    </testcase>
    <testcase classname="dataURItoFile, fileToDataURI Util should convert File to dataURI" name="dataURItoFile, fileToDataURI Util should convert File to dataURI" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="MediaLocalUpload" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:37" time="0.444" tests="2">
    <testcase classname="MediaLocalUpload should emit uploads-start event given upload service emits files-added event" name="MediaLocalUpload should emit uploads-start event given upload service emits files-added event" time="0.004">
    </testcase>
    <testcase classname="MediaLocalUpload should emit upload-preview-update event given upload service emits file-preview-update event" name="MediaLocalUpload should emit upload-preview-update event given upload service emits file-preview-update event" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="LinkProvider" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:38" time="0.729" tests="2">
    <testcase classname="LinkProvider should complete given link service resolves a link item" name="LinkProvider should complete given link service resolves a link item" time="0.004">
    </testcase>
    <testcase classname="LinkProvider should error given link service rejects with an error" name="LinkProvider should error given link service rejects with an error" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="createChangeset" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:37" time="3.698" tests="4">
    <testcase classname="createChangeset dependencies of different versions should re-ask when a dependency needs an update" name="createChangeset dependencies of different versions should re-ask when a dependency needs an update" time="0.117">
    </testcase>
    <testcase classname="createChangeset dependencies of different versions should have correct prompt list" name="createChangeset dependencies of different versions should have correct prompt list" time="0.025">
    </testcase>
    <testcase classname="createChangeset dependencies of different versions should only ask b once if it does not need an update" name="createChangeset dependencies of different versions should only ask b once if it does not need an update" time="0.021">
    </testcase>
    <testcase classname="createChangeset project with 0.x packages should not allow &quot;none&quot; for caret or tilde deps on 0.x ranges" name="createChangeset project with 0.x packages should not allow &quot;none&quot; for caret or tilde deps on 0.x ranges" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="inputrules" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:38" time="2.163" tests="21">
    <testcase classname="inputrules heading rule should convert &quot;# &quot; to heading 1" name="inputrules heading rule should convert &quot;# &quot; to heading 1" time="0.013">
    </testcase>
    <testcase classname="inputrules heading rule should convert &quot;# &quot; after shift+enter to heading 1" name="inputrules heading rule should convert &quot;# &quot; after shift+enter to heading 1" time="0.017">
    </testcase>
    <testcase classname="inputrules heading rule should not convert &quot;# &quot; to heading 1 when inside a code_block" name="inputrules heading rule should not convert &quot;# &quot; to heading 1 when inside a code_block" time="0.007">
    </testcase>
    <testcase classname="inputrules heading rule should convert &quot;## &quot; to heading 2" name="inputrules heading rule should convert &quot;## &quot; to heading 2" time="0.007">
    </testcase>
    <testcase classname="inputrules heading rule should not convert &quot;## &quot; to heading 1 when inside a code_block" name="inputrules heading rule should not convert &quot;## &quot; to heading 1 when inside a code_block" time="0.005">
    </testcase>
    <testcase classname="inputrules heading rule should convert &quot;### &quot; to heading 3" name="inputrules heading rule should convert &quot;### &quot; to heading 3" time="0.005">
    </testcase>
    <testcase classname="inputrules heading rule should not convert &quot;### &quot; to heading 3 when inside a code_block" name="inputrules heading rule should not convert &quot;### &quot; to heading 3 when inside a code_block" time="0.002">
    </testcase>
    <testcase classname="inputrules blockquote rule should convert &quot;&gt; &quot; to a blockquote" name="inputrules blockquote rule should convert &quot;&gt; &quot; to a blockquote" time="0.008">
    </testcase>
    <testcase classname="inputrules blockquote rule should convert &quot;&gt; &quot; to a blockquote after shift+enter" name="inputrules blockquote rule should convert &quot;&gt; &quot; to a blockquote after shift+enter" time="0.005">
    </testcase>
    <testcase classname="inputrules blockquote rule should convert &quot;&gt; &quot; to a blockquote after multiple shift+enter" name="inputrules blockquote rule should convert &quot;&gt; &quot; to a blockquote after multiple shift+enter" time="0.008">
    </testcase>
    <testcase classname="inputrules blockquote rule should convert &quot;&gt; &quot; after shift+enter to blockquote for only current line" name="inputrules blockquote rule should convert &quot;&gt; &quot; after shift+enter to blockquote for only current line" time="0.007">
    </testcase>
    <testcase classname="inputrules blockquote rule should not convert &quot;&gt; &quot; inside code mark to blockquote" name="inputrules blockquote rule should not convert &quot;&gt; &quot; inside code mark to blockquote" time="0.007">
    </testcase>
    <testcase classname="inputrules blockquote rule should not convert &quot;&gt; &quot; inside link to blockquote" name="inputrules blockquote rule should not convert &quot;&gt; &quot; inside link to blockquote" time="0.011">
    </testcase>
    <testcase classname="inputrules blockquote rule should not convert &quot;&gt; &quot; to a blockquote when inside a code_block" name="inputrules blockquote rule should not convert &quot;&gt; &quot; to a blockquote when inside a code_block" time="0.009">
    </testcase>
    <testcase classname="inputrules codeblock rule when node is convertable to code block when three backticks are entered followed by space should convert &quot;``` &quot; to a code block" name="inputrules codeblock rule when node is convertable to code block when three backticks are entered followed by space should convert &quot;``` &quot; to a code block" time="0.013">
    </testcase>
    <testcase classname="inputrules codeblock rule when node is convertable to code block when three backticks are entered followed by space should convert &quot;``` &quot; after shift+enter to a code block" name="inputrules codeblock rule when node is convertable to code block when three backticks are entered followed by space should convert &quot;``` &quot; after shift+enter to a code block" time="0.009">
    </testcase>
    <testcase classname="inputrules codeblock rule when node is convertable to code block when three backticks are entered followed by space should convert &quot;```java &quot; to a code block with language java" name="inputrules codeblock rule when node is convertable to code block when three backticks are entered followed by space should convert &quot;```java &quot; to a code block with language java" time="0.008">
    </testcase>
    <testcase classname="inputrules codeblock rule when node is convertable to code block when three backticks are entered followed by space should convert &quot;``` &quot; in middle of paragraph to a code block" name="inputrules codeblock rule when node is convertable to code block when three backticks are entered followed by space should convert &quot;``` &quot; in middle of paragraph to a code block" time="0.008">
    </testcase>
    <testcase classname="inputrules codeblock rule when node is convertable to code block when three backticks are entered followed by space should convert &quot;``` &quot; in middle of paragraph to a code block and set language correctly" name="inputrules codeblock rule when node is convertable to code block when three backticks are entered followed by space should convert &quot;``` &quot; in middle of paragraph to a code block and set language correctly" time="0.007">
    </testcase>
    <testcase classname="inputrules codeblock rule when node is convertable to code block when there are more than 3 backticks should convert &quot;`````js&quot; to a code block with attr &quot;language: js&quot;" name="inputrules codeblock rule when node is convertable to code block when there are more than 3 backticks should convert &quot;`````js&quot; to a code block with attr &quot;language: js&quot;" time="0.01">
    </testcase>
    <testcase classname="inputrules codeblock rule when node is convertable to code block when there are more than 3 backticks should convert &quot;code `````js&quot; to a code block with attr &quot;language: js&quot; in middle of paragraph" name="inputrules codeblock rule when node is convertable to code block when there are more than 3 backticks should convert &quot;code `````js&quot; to a code block with attr &quot;language: js&quot; in middle of paragraph" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/Task" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:40" time="1.65" tests="6">
    <testcase classname="@atlaskit/editor-core/ui/Task should render resourced task item" name="@atlaskit/editor-core/ui/Task should render resourced task item" time="0.086">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/Task should pass TaskDecisionProvider into resourced task item" name="@atlaskit/editor-core/ui/Task should pass TaskDecisionProvider into resourced task item" time="0.016">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/Task should pass ContextIdentifierProvider into resourced task item" name="@atlaskit/editor-core/ui/Task should pass ContextIdentifierProvider into resourced task item" time="0.017">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/Task should change state of task if onChange is triggered and all providers are passed in" name="@atlaskit/editor-core/ui/Task should change state of task if onChange is triggered and all providers are passed in" time="0.025">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/Task should not change state of task if no taskDecisionProvider" name="@atlaskit/editor-core/ui/Task should not change state of task if no taskDecisionProvider" time="0.018">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/Task should not change state of task if no contextIdentifierProvider" name="@atlaskit/editor-core/ui/Task should not change state of task if no contextIdentifierProvider" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="codeBlock - keymaps" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:41" time="2.22" tests="6">
    <testcase classname="codeBlock - keymaps Enter keypress when enter key is pressed 2 times it should not exit code block" name="codeBlock - keymaps Enter keypress when enter key is pressed 2 times it should not exit code block" time="0.023">
    </testcase>
    <testcase classname="codeBlock - keymaps Enter keypress when enter key is pressed 3 times it should exit code block" name="codeBlock - keymaps Enter keypress when enter key is pressed 3 times it should exit code block" time="0.01">
    </testcase>
    <testcase classname="codeBlock - keymaps Backspace should remove the code block if the cursor is at the beginning of the code block - 1" name="codeBlock - keymaps Backspace should remove the code block if the cursor is at the beginning of the code block - 1" time="0.003">
    </testcase>
    <testcase classname="codeBlock - keymaps Backspace should remove the code block if the cursor is at the beginning of the code block - 2" name="codeBlock - keymaps Backspace should remove the code block if the cursor is at the beginning of the code block - 2" time="0.004">
    </testcase>
    <testcase classname="codeBlock - keymaps Backspace should remove the code block if the cursor is at the beginning of the code block - 2" name="codeBlock - keymaps Backspace should remove the code block if the cursor is at the beginning of the code block - 2" time="0.003">
    </testcase>
    <testcase classname="codeBlock - keymaps Backspace should not remove the code block if selection is not empty " name="codeBlock - keymaps Backspace should not remove the code block if selection is not empty " time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/ToolbarHyperlink" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:42" time="2.247" tests="7">
    <testcase classname="@atlaskit/editor-core/ui/ToolbarHyperlink should return null if EditorWidth is less then BreakPoint4" name="@atlaskit/editor-core/ui/ToolbarHyperlink should return null if EditorWidth is less then BreakPoint4" time="0.014">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarHyperlink should have spacing of toolbar button set to default" name="@atlaskit/editor-core/ui/ToolbarHyperlink should have spacing of toolbar button set to default" time="0.053">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarHyperlink should trigger showLinkPanel of plugin when toolbar hyperlink button is clicked" name="@atlaskit/editor-core/ui/ToolbarHyperlink should trigger showLinkPanel of plugin when toolbar hyperlink button is clicked" time="0.03">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarHyperlink should state variable showToolbarPanel should be true when toolbar hyperlink button is clicked without a selection" name="@atlaskit/editor-core/ui/ToolbarHyperlink should state variable showToolbarPanel should be true when toolbar hyperlink button is clicked without a selection" time="0.038">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarHyperlink should state variable showToolbarPanel should be false when toolbar hyperlink button is clicked with a selection" name="@atlaskit/editor-core/ui/ToolbarHyperlink should state variable showToolbarPanel should be false when toolbar hyperlink button is clicked with a selection" time="0.028">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarHyperlink should render disabled ToolbarButton if disabled property is true" name="@atlaskit/editor-core/ui/ToolbarHyperlink should render disabled ToolbarButton if disabled property is true" time="0.023">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarHyperlink analytics should trigger analyticsService.trackEvent" name="@atlaskit/editor-core/ui/ToolbarHyperlink analytics should trigger analyticsService.trackEvent" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="Conversation" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:44" time="2.666" tests="4">
    <testcase classname="Conversation comments should render comments if any" name="Conversation comments should render comments if any" time="0.003">
    </testcase>
    <testcase classname="Conversation editor should render if meta is not set" name="Conversation editor should render if meta is not set" time="0.001">
    </testcase>
    <testcase classname="Conversation editor should not render if meta is set" name="Conversation editor should not render if meta is set" time="0.002">
    </testcase>
    <testcase classname="Conversation editor should render if isExpanded is true" name="Conversation editor should render if isExpanded is true" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:47" time="2.485" tests="16">
    <testcase classname="Renderer - React/Nodes mergeTextNodes should wrap adjacent text nodes in a textWrapper" name="Renderer - React/Nodes mergeTextNodes should wrap adjacent text nodes in a textWrapper" time="0.003">
    </testcase>
    <testcase classname="Renderer - React/Nodes isEmojiDoc should return true for a single emoji" name="Renderer - React/Nodes isEmojiDoc should return true for a single emoji" time="0.381">
    </testcase>
    <testcase classname="Renderer - React/Nodes isEmojiDoc should return true for up to three emojis" name="Renderer - React/Nodes isEmojiDoc should return true for up to three emojis" time="0.035">
    </testcase>
    <testcase classname="Renderer - React/Nodes isEmojiDoc should return false for more than three emojis" name="Renderer - React/Nodes isEmojiDoc should return false for more than three emojis" time="0.095">
    </testcase>
    <testcase classname="Renderer - React/Nodes isEmojiDoc should return false if no emojis" name="Renderer - React/Nodes isEmojiDoc should return false if no emojis" time="0.027">
    </testcase>
    <testcase classname="Renderer - React/Nodes isEmojiDoc should ignore surrounding whitespace when determining whether the paragraph is any emoji block" name="Renderer - React/Nodes isEmojiDoc should ignore surrounding whitespace when determining whether the paragraph is any emoji block" time="0.034">
    </testcase>
    <testcase classname="Renderer - React/Nodes isEmojiDoc should return false if the block contains non-whitespace text" name="Renderer - React/Nodes isEmojiDoc should return false if the block contains non-whitespace text" time="0.098">
    </testcase>
    <testcase classname="Renderer - React/Nodes isEmojiDoc should return false if there is a non-text or non-emoji node" name="Renderer - React/Nodes isEmojiDoc should return false if there is a non-text or non-emoji node" time="0.021">
    </testcase>
    <testcase classname="Renderer - React/Nodes isEmojiDoc should return false if there are multiple paragraphs in the doc" name="Renderer - React/Nodes isEmojiDoc should return false if there are multiple paragraphs in the doc" time="0.023">
    </testcase>
    <testcase classname="Renderer - React/Nodes isEmojiDoc should return false if parent block is not of type paragraph" name="Renderer - React/Nodes isEmojiDoc should return false if parent block is not of type paragraph" time="0.048">
    </testcase>
    <testcase classname="Renderer - React/Nodes isEmojiDoc should return true at nested level if fitToHeight prop is set to 40" name="Renderer - React/Nodes isEmojiDoc should return true at nested level if fitToHeight prop is set to 40" time="0.031">
    </testcase>
    <testcase classname="Renderer - React/Nodes isEmojiDoc should return false at nested level if no fitToHeight prop" name="Renderer - React/Nodes isEmojiDoc should return false at nested level if no fitToHeight prop" time="0.057">
    </testcase>
    <testcase classname="Renderer - React/Nodes isTextWrapper should return true if type equals &quot;textWrapper&quot;" name="Renderer - React/Nodes isTextWrapper should return true if type equals &quot;textWrapper&quot;" time="0.001">
    </testcase>
    <testcase classname="Renderer - React/Nodes isTextWrapper should return false if type does not equal &quot;textWrapper&quot;" name="Renderer - React/Nodes isTextWrapper should return false if type does not equal &quot;textWrapper&quot;" time="0">
    </testcase>
    <testcase classname="Renderer - React/Nodes isText should return true if type equals &quot;text&quot;" name="Renderer - React/Nodes isText should return true if type equals &quot;text&quot;" time="0">
    </testcase>
    <testcase classname="Renderer - React/Nodes isText should return false if type does not equal &quot;text&quot;" name="Renderer - React/Nodes isText should return false if type does not equal &quot;text&quot;" time="0">
    </testcase>
  </testsuite>
  <testsuite name="isTokenExpirationError" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:45" time="4.608" tests="22">
    <testcase classname="isTokenExpirationError should return false for an undefined error object" name="isTokenExpirationError should return false for an undefined error object" time="0">
    </testcase>
    <testcase classname="isTokenExpirationError should return false for an empty error object" name="isTokenExpirationError should return false for an empty error object" time="0.001">
    </testcase>
    <testcase classname="isTokenExpirationError should return false for another error" name="isTokenExpirationError should return false for another error" time="0">
    </testcase>
    <testcase classname="isTokenExpirationError should return true for the token expiration error" name="isTokenExpirationError should return true for the token expiration error" time="0">
    </testcase>
    <testcase classname="isTokenExpirationError should return true for the token authentication error" name="isTokenExpirationError should return true for the token authentication error" time="0">
    </testcase>
    <testcase classname="addAuthToHeaders function should add headers with credentials to the existing headers" name="addAuthToHeaders function should add headers with credentials to the existing headers" time="0.001">
    </testcase>
    <testcase classname="addAuthToHeaders function should add headers with credentials if &quot;headers&quot; is undefined in the original request" name="addAuthToHeaders function should add headers with credentials if &quot;headers&quot; is undefined in the original request" time="0.001">
    </testcase>
    <testcase classname="addAuthToHeaders function should replace headers with credentials if authorization headers were specified in the original request" name="addAuthToHeaders function should replace headers with credentials if authorization headers were specified in the original request" time="0">
    </testcase>
    <testcase classname="addAuthToQueryParameters function should add parameters with credentials to the existing parameters" name="addAuthToQueryParameters function should add parameters with credentials to the existing parameters" time="0">
    </testcase>
    <testcase classname="addAuthToQueryParameters function should add parameters with credentials if &quot;parameters&quot; is undefined in the original request" name="addAuthToQueryParameters function should add parameters with credentials if &quot;parameters&quot; is undefined in the original request" time="0.001">
    </testcase>
    <testcase classname="addAuthToQueryParameters function should replace parameters with credentials if authorization parameters were specified in the original request" name="addAuthToQueryParameters function should replace parameters with credentials if authorization parameters were specified in the original request" time="0">
    </testcase>
    <testcase classname="MediaClient storedToken should be undefined by default" name="MediaClient storedToken should be undefined by default" time="0">
    </testcase>
    <testcase classname="MediaClient storedToken should be equal to the provided token after token refresh" name="MediaClient storedToken should be equal to the provided token after token refresh" time="0.001">
    </testcase>
    <testcase classname="MediaClient refreshToken should call tokenProvider to get token" name="MediaClient refreshToken should call tokenProvider to get token" time="0.005">
    </testcase>
    <testcase classname="MediaClient call should reject if token can not be retrieved" name="MediaClient call should reject if token can not be retrieved" time="0.302">
    </testcase>
    <testcase classname="MediaClient call should attach credentials to the request" name="MediaClient call should attach credentials to the request" time="0.006">
    </testcase>
    <testcase classname="MediaClient call should format url and pass provided parameters to Media API" name="MediaClient call should format url and pass provided parameters to Media API" time="0.005">
    </testcase>
    <testcase classname="MediaClient call should add Content-Type header if the request contains data" name="MediaClient call should add Content-Type header if the request contains data" time="0.007">
    </testcase>
    <testcase classname="MediaClient call should not add Content-Type header if the request contains no data" name="MediaClient call should not add Content-Type header if the request contains no data" time="0.002">
    </testcase>
    <testcase classname="MediaClient call should retry if the error is for the expired token" name="MediaClient call should retry if the error is for the expired token" time="0.003">
    </testcase>
    <testcase classname="MediaClient call should not retry if the error is not for the expired token" name="MediaClient call should not retry if the error is not for the expired token" time="0.001">
    </testcase>
    <testcase classname="MediaClient call should not retrieve token for consecutive calls if API requests return successfully" name="MediaClient call should not retrieve token for consecutive calls if API requests return successfully" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema hardBreak node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:49" time="1.373" tests="2">
    <testcase classname="@atlaskit/editor-common/schema hardBreak node serializes to &lt;br&gt;" name="@atlaskit/editor-common/schema hardBreak node serializes to &lt;br&gt;" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema hardBreak node matches &lt;br&gt;" name="@atlaskit/editor-common/schema hardBreak node matches &lt;br&gt;" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema subsup mark" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:50" time="1.095" tests="4">
    <testcase classname="@atlaskit/editor-common/schema subsup mark matches &lt;sub&gt;text&lt;/sub&gt;" name="@atlaskit/editor-common/schema subsup mark matches &lt;sub&gt;text&lt;/sub&gt;" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema subsup mark matches &lt;sup&gt;text&lt;/sup&gt;" name="@atlaskit/editor-common/schema subsup mark matches &lt;sup&gt;text&lt;/sup&gt;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema subsup mark serializes to &lt;sub&gt;" name="@atlaskit/editor-common/schema subsup mark serializes to &lt;sub&gt;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema subsup mark serializes to &lt;sup&gt;" name="@atlaskit/editor-common/schema subsup mark serializes to &lt;sup&gt;" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AnalyticsDelegate" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:51" time="0.499" tests="2">
    <testcase classname="AnalyticsDelegate should ignore events if no delegateAnalyticsEvent callback" name="AnalyticsDelegate should ignore events if no delegateAnalyticsEvent callback" time="0.008">
    </testcase>
    <testcase classname="AnalyticsDelegate should pass through public/private events" name="AnalyticsDelegate should pass through public/private events" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/ToolbarHelp" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:51" time="1.694" tests="5">
    <testcase classname="@atlaskit/editor-core/ui/ToolbarHelp should trigger analyticsService.trackEvent when help icon is clicked" name="@atlaskit/editor-core/ui/ToolbarHelp should trigger analyticsService.trackEvent when help icon is clicked" time="0.057">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarHelp should always have ToolbarButton to open help dialog rendered" name="@atlaskit/editor-core/ui/ToolbarHelp should always have ToolbarButton to open help dialog rendered" time="0.022">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarHelp should not have HelpDialog by default" name="@atlaskit/editor-core/ui/ToolbarHelp should not have HelpDialog by default" time="0.018">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarHelp should have visible HelpDialog if showHelp property is true" name="@atlaskit/editor-core/ui/ToolbarHelp should have visible HelpDialog if showHelp property is true" time="0.27">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarHelp should have hidden HelpDialog if closeHelp becomes true" name="@atlaskit/editor-core/ui/ToolbarHelp should have hidden HelpDialog if closeHelp becomes true" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="TableFloatingToolbar" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:37" time="16.98" tests="13">
    <testcase classname="TableFloatingToolbar when cellElement is undefined should not render toolbar" name="TableFloatingToolbar when cellElement is undefined should not render toolbar" time="0.082">
    </testcase>
    <testcase classname="TableFloatingToolbar when cellElement is defined should render toolbar" name="TableFloatingToolbar when cellElement is defined should render toolbar" time="0.021">
    </testcase>
    <testcase classname="TableFloatingToolbar when selecting a column inside table should render toolbar" name="TableFloatingToolbar when selecting a column inside table should render toolbar" time="0.56">
    </testcase>
    <testcase classname="TableFloatingToolbar when selecting a row inside table should render toolbar" name="TableFloatingToolbar when selecting a row inside table should render toolbar" time="0.222">
    </testcase>
    <testcase classname="TableFloatingToolbar when editor is not focused should not render toolbar" name="TableFloatingToolbar when editor is not focused should not render toolbar" time="0.278">
    </testcase>
    <testcase classname="TableFloatingToolbar TrashIcon should be rendered in the toolbar" name="TableFloatingToolbar TrashIcon should be rendered in the toolbar" time="0.029">
    </testcase>
    <testcase classname="TableFloatingToolbar TrashIcon should call pluginState.remove() on click" name="TableFloatingToolbar TrashIcon should call pluginState.remove() on click" time="0.012">
    </testcase>
    <testcase classname="TableFloatingToolbar Advance menu icon should be rendered in the toolbar" name="TableFloatingToolbar Advance menu icon should be rendered in the toolbar" time="0.036">
    </testcase>
    <testcase classname="TableFloatingToolbar Advance menu icon should open DropdownMenu on click" name="TableFloatingToolbar Advance menu icon should open DropdownMenu on click" time="0.607">
    </testcase>
    <testcase classname="TableFloatingToolbar Advance menu DropdownMenu should make isOpen false when a menu item is clicked" name="TableFloatingToolbar Advance menu DropdownMenu should make isOpen false when a menu item is clicked" time="0.442">
    </testcase>
    <testcase classname="TableFloatingToolbar Advance menu DropdownMenu should call &quot;cut&quot; command when &quot;cut&quot; item is clicked" name="TableFloatingToolbar Advance menu DropdownMenu should call &quot;cut&quot; command when &quot;cut&quot; item is clicked" time="0.517">
    </testcase>
    <testcase classname="TableFloatingToolbar Advance menu DropdownMenu should call &quot;copy&quot; command when &quot;copy&quot; item is clicked" name="TableFloatingToolbar Advance menu DropdownMenu should call &quot;copy&quot; command when &quot;copy&quot; item is clicked" time="0.539">
    </testcase>
    <testcase classname="TableFloatingToolbar Advance menu DropdownMenu should call &quot;paste&quot; command when &quot;paste&quot; item is clicked" name="TableFloatingToolbar Advance menu DropdownMenu should call &quot;paste&quot; command when &quot;paste&quot; item is clicked" time="0.42">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/checkbox" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:53" time="1.22" tests="13">
    <testcase classname="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should be unchecked by default" name="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should be unchecked by default" time="0.052">
    </testcase>
    <testcase classname="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should have correct checked styles" name="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should have correct checked styles" time="0.023">
    </testcase>
    <testcase classname="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should be correctly styled disabled" name="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should be correctly styled disabled" time="0.022">
    </testcase>
    <testcase classname="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should be correctly styled when hovered" name="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should be correctly styled when hovered" time="0.032">
    </testcase>
    <testcase classname="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should be correctly styled when hovered and checked" name="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should be correctly styled when hovered and checked" time="0.021">
    </testcase>
    <testcase classname="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should be base state if mouseenter then mouseleave" name="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should be base state if mouseenter then mouseleave" time="0.032">
    </testcase>
    <testcase classname="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should be active if mousedown and checked" name="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should be active if mousedown and checked" time="0.018">
    </testcase>
    <testcase classname="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should be active if mousedown and unchecked" name="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should be active if mousedown and unchecked" time="0.02">
    </testcase>
    <testcase classname="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should not be active if mousedown and disabled" name="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should not be active if mousedown and disabled" time="0.019">
    </testcase>
    <testcase classname="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should call onchange on change" name="@atlaskit/checkbox &lt;CheckboxStateless /&gt; should call onchange on change" time="0.084">
    </testcase>
    <testcase classname="@atlaskit/checkbox &lt;Checkbox /&gt; should render initiallyChecked" name="@atlaskit/checkbox &lt;Checkbox /&gt; should render initiallyChecked" time="0.126">
    </testcase>
    <testcase classname="@atlaskit/checkbox &lt;Checkbox /&gt; should render initiallyChecked={false}" name="@atlaskit/checkbox &lt;Checkbox /&gt; should render initiallyChecked={false}" time="0.054">
    </testcase>
    <testcase classname="@atlaskit/checkbox &lt;CheckboxGroup /&gt; sanity check for CheckboxGroup" name="@atlaskit/checkbox &lt;CheckboxGroup /&gt; sanity check for CheckboxGroup" time="0.142">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema codeBlock node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:55" time="2.51" tests="163">
    <testcase classname="@atlaskit/editor-common/schema codeBlock node should have code property to be true" name="@atlaskit/editor-common/schema codeBlock node should have code property to be true" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is not set converts to block code node" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is not set converts to block code node" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is not set has language attribute as null" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is not set has language attribute as null" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set converts to block code node" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set converts to block code node" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;ABAP&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;ABAP&quot; from data-language attribute" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;ActionScript&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;ActionScript&quot; from data-language attribute" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Ada&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Ada&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;AppleScript&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;AppleScript&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Arduino&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Arduino&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Autoit&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Autoit&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;C&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;C&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;C++&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;C++&quot; from data-language attribute" time="0">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Clojure&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Clojure&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;CoffeeScript&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;CoffeeScript&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;ColdFusion&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;ColdFusion&quot; from data-language attribute" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;CSharp&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;CSharp&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;CSS&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;CSS&quot; from data-language attribute" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;CUDA&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;CUDA&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;D&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;D&quot; from data-language attribute" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Dart&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Dart&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Delphi&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Delphi&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Diff&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Diff&quot; from data-language attribute" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Elixir&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Elixir&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Erlang&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Erlang&quot; from data-language attribute" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Fortran&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Fortran&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;FoxPro&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;FoxPro&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Go&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Go&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Groovy&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Groovy&quot; from data-language attribute" time="0">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Haskell&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Haskell&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Haxe&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Haxe&quot; from data-language attribute" time="0">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Html&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Html&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Java&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Java&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;JavaFX&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;JavaFX&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;JavaScript&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;JavaScript&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;JSON&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;JSON&quot; from data-language attribute" time="0">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Julia&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Julia&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Kotlin&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Kotlin&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;LiveScript&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;LiveScript&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Lua&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Lua&quot; from data-language attribute" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Mathematica&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Mathematica&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;MATLAB&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;MATLAB&quot; from data-language attribute" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Objective-C&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Objective-C&quot; from data-language attribute" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Objective-J&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Objective-J&quot; from data-language attribute" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;ObjectPascal&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;ObjectPascal&quot; from data-language attribute" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;OCaml&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;OCaml&quot; from data-language attribute" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Octave&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Octave&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Perl&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Perl&quot; from data-language attribute" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;PHP&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;PHP&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;PlainText&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;PlainText&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;PowerShell&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;PowerShell&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Prolog&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Prolog&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Puppet&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Puppet&quot; from data-language attribute" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Python&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Python&quot; from data-language attribute" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;QML&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;QML&quot; from data-language attribute" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;R&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;R&quot; from data-language attribute" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Racket&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Racket&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;reStructuredText&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;reStructuredText&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Ruby&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Ruby&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Rust&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Rust&quot; from data-language attribute" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Sass&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Sass&quot; from data-language attribute" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Scala&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Scala&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Scheme&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Scheme&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Shell&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Shell&quot; from data-language attribute" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Smalltalk&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Smalltalk&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;SQL&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;SQL&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;StandardML&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;StandardML&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Swift&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Swift&quot; from data-language attribute" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Tcl&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Tcl&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;TeX&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;TeX&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;TypeScript&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;TypeScript&quot; from data-language attribute" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Vala&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Vala&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;VbNet&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;VbNet&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Verilog&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;Verilog&quot; from data-language attribute" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;VHDL&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;VHDL&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;VisualBasic&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;VisualBasic&quot; from data-language attribute" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;XML&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;XML&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;XQuery&quot; from data-language attribute" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML when language is set extracts language &quot;XQuery&quot; from data-language attribute" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML preserves all newlines and whitespace" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from editor encoded HTML preserves all newlines and whitespace" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from Bitbucket when language is not set converts to block code node" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from Bitbucket when language is not set converts to block code node" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from Bitbucket when language is not set has language attribute as null" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from Bitbucket when language is not set has language attribute as null" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html parse from Bitbucket when other class similar to language is set has language attribute as null" name="@atlaskit/editor-common/schema codeBlock node parse from html parse from Bitbucket when other class similar to language is set has language attribute as null" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set converts to block code node" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set converts to block code node" time="0.086">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-ABAP&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-ABAP&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-ActionScript&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-ActionScript&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Ada&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Ada&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-AppleScript&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-AppleScript&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Arduino&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Arduino&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Autoit&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Autoit&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-C&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-C&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-C++&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-C++&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Clojure&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Clojure&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-CoffeeScript&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-CoffeeScript&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-ColdFusion&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-ColdFusion&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-CSharp&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-CSharp&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-CSS&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-CSS&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-CUDA&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-CUDA&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-D&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-D&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Dart&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Dart&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Delphi&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Delphi&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Diff&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Diff&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Elixir&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Elixir&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Erlang&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Erlang&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Fortran&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Fortran&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-FoxPro&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-FoxPro&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Go&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Go&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Groovy&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Groovy&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Haskell&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Haskell&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Haxe&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Haxe&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Html&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Html&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Java&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Java&quot;" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-JavaFX&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-JavaFX&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-JavaScript&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-JavaScript&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-JSON&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-JSON&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Julia&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Julia&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Kotlin&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Kotlin&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-LiveScript&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-LiveScript&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Lua&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Lua&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Mathematica&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Mathematica&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-MATLAB&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-MATLAB&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Objective-C&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Objective-C&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Objective-J&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Objective-J&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-ObjectPascal&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-ObjectPascal&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-OCaml&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-OCaml&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Octave&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Octave&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Perl&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Perl&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-PHP&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-PHP&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-PlainText&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-PlainText&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-PowerShell&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-PowerShell&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Prolog&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Prolog&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Puppet&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Puppet&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Python&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Python&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-QML&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-QML&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-R&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-R&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Racket&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Racket&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-reStructuredText&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-reStructuredText&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Ruby&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Ruby&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Rust&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Rust&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Sass&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Sass&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Scala&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Scala&quot;" time="0">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Scheme&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Scheme&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Shell&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Shell&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Smalltalk&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Smalltalk&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-SQL&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-SQL&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-StandardML&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-StandardML&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Swift&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Swift&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Tcl&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Tcl&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-TeX&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-TeX&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-TypeScript&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-TypeScript&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Vala&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Vala&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-VbNet&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-VbNet&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Verilog&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-Verilog&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-VHDL&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-VHDL&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-VisualBasic&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-VisualBasic&quot;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-XML&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-XML&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-XQuery&quot;" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set extracts language attribute from class &quot;language-XQuery&quot;" time="0">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set removes last new line" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set removes last new line" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node parse from html when language is set preserves newlines in the middle and whitespace" name="@atlaskit/editor-common/schema codeBlock node parse from html when language is set preserves newlines in the middle and whitespace" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node convert to HTML when language is not set converts to pre tag" name="@atlaskit/editor-common/schema codeBlock node convert to HTML when language is not set converts to pre tag" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node convert to HTML when language is not set does not set data-language attributes" name="@atlaskit/editor-common/schema codeBlock node convert to HTML when language is not set does not set data-language attributes" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node convert to HTML when language is set to null does not set data-language attributes" name="@atlaskit/editor-common/schema codeBlock node convert to HTML when language is set to null does not set data-language attributes" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node convert to HTML when language is set to undefined does not set data-language attributes" name="@atlaskit/editor-common/schema codeBlock node convert to HTML when language is set to undefined does not set data-language attributes" time="0">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node convert to HTML when language is set to a value converts to pre tag" name="@atlaskit/editor-common/schema codeBlock node convert to HTML when language is set to a value converts to pre tag" time="0">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema codeBlock node convert to HTML when language is set to a value sets data-language attributes" name="@atlaskit/editor-common/schema codeBlock node convert to HTML when language is set to a value sets data-language attributes" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="text-color" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:54" time="3.105" tests="16">
    <testcase classname="text-color should allow a change handler to be attached" name="text-color should allow a change handler to be attached" time="0.011">
    </testcase>
    <testcase classname="text-color should be able to replace textColor on a character" name="text-color should be able to replace textColor on a character" time="0.025">
    </testcase>
    <testcase classname="text-color should expose whether textColor has any color on an empty selection" name="text-color should expose whether textColor has any color on an empty selection" time="0.007">
    </testcase>
    <testcase classname="text-color should expose whether textColor has any color on a text selection" name="text-color should expose whether textColor has any color on a text selection" time="0.003">
    </testcase>
    <testcase classname="text-color exposes textColor as disabled when the mark cannot be applied" name="text-color exposes textColor as disabled when the mark cannot be applied" time="0.002">
    </testcase>
    <testcase classname="text-color exposes textColor as disabled when inside hyperlink" name="text-color exposes textColor as disabled when inside hyperlink" time="0.004">
    </testcase>
    <testcase classname="text-color exposes textColor as not disabled when the mark can be applied" name="text-color exposes textColor as not disabled when the mark can be applied" time="0.006">
    </testcase>
    <testcase classname="text-color should expose no color when selection has multiple color marks" name="text-color should expose no color when selection has multiple color marks" time="0.003">
    </testcase>
    <testcase classname="text-color should expose no color when selection has mixed content" name="text-color should expose no color when selection has mixed content" time="0.002">
    </testcase>
    <testcase classname="text-color should expose default color when selection has no color marks" name="text-color should expose default color when selection has no color marks" time="0.003">
    </testcase>
    <testcase classname="text-color should expose default color when selection has other marks" name="text-color should expose default color when selection has other marks" time="0.006">
    </testcase>
    <testcase classname="text-color should expose color when the cursor is inside a textColor mark" name="text-color should expose color when the cursor is inside a textColor mark" time="0.003">
    </testcase>
    <testcase classname="text-color should expose color when the cursor is at the ending of a textColor mark" name="text-color should expose color when the cursor is at the ending of a textColor mark" time="0.004">
    </testcase>
    <testcase classname="text-color should expose default color when the cursor is at the begnining of a textColor mark" name="text-color should expose default color when the cursor is at the begnining of a textColor mark" time="0.005">
    </testcase>
    <testcase classname="text-color should expose color when the cursor is at begnining of doc with textColor mark" name="text-color should expose color when the cursor is at begnining of doc with textColor mark" time="0.002">
    </testcase>
    <testcase classname="text-color should expose color when selection has other marks with textColor mark" name="text-color should expose color when selection has other marks with textColor mark" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="JSONTransformer: encode" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:52" time="6.345" tests="6">
    <testcase classname="JSONTransformer: encode should serialize common nodes/marks as ProseMirror does" name="JSONTransformer: encode should serialize common nodes/marks as ProseMirror does" time="0.102">
    </testcase>
    <testcase classname="JSONTransformer: encode should strip optional attrs from media node" name="JSONTransformer: encode should strip optional attrs from media node" time="0.008">
    </testcase>
    <testcase classname="JSONTransformer: encode should strip unused optional attrs from mention node" name="JSONTransformer: encode should strip unused optional attrs from mention node" time="0.004">
    </testcase>
    <testcase classname="JSONTransformer: encode should not strip accessLevel from mention node" name="JSONTransformer: encode should not strip accessLevel from mention node" time="0.003">
    </testcase>
    <testcase classname="JSONTransformer: encode should strip uniqueId from codeBlock node" name="JSONTransformer: encode should strip uniqueId from codeBlock node" time="0.004">
    </testcase>
    <testcase classname="JSONTransformer: encode should strip language=null from codeBlock node" name="JSONTransformer: encode should strip language=null from codeBlock node" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/HelpDialog" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:59" time="1.58" tests="8">
    <testcase classname="@atlaskit/editor-core/ui/HelpDialog should call toggleHelp when open help button is clicked" name="@atlaskit/editor-core/ui/HelpDialog should call toggleHelp when open help button is clicked" time="0.078">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HelpDialog should call analytics event when open help button is clicked" name="@atlaskit/editor-core/ui/HelpDialog should call analytics event when open help button is clicked" time="0.022">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HelpDialog should call toggleHelp when wrapping div is clicked" name="@atlaskit/editor-core/ui/HelpDialog should call toggleHelp when wrapping div is clicked" time="0.015">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HelpDialog should return correct description of codemap when getComponentFromKeymap is called" name="@atlaskit/editor-core/ui/HelpDialog should return correct description of codemap when getComponentFromKeymap is called" time="0.015">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HelpDialog formatting should be an array for verious formattings supported" name="@atlaskit/editor-core/ui/HelpDialog formatting should be an array for verious formattings supported" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HelpDialog formatting should have value defined for quote" name="@atlaskit/editor-core/ui/HelpDialog formatting should have value defined for quote" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HelpDialog formatting should have a value of type keymap in keymap property" name="@atlaskit/editor-core/ui/HelpDialog formatting should have a value of type keymap in keymap property" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HelpDialog formatting should have correct value for auto-formatting" name="@atlaskit/editor-core/ui/HelpDialog formatting should have correct value for auto-formatting" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/ToolbarDecision" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:58" time="2.469" tests="1">
    <testcase classname="@atlaskit/editor-core/ui/ToolbarDecision should be disabled if isDisabled property is true" name="@atlaskit/editor-core/ui/ToolbarDecision should be disabled if isDisabled property is true" time="0.073">
    </testcase>
  </testsuite>
  <testsuite name="mentions" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:37:57" time="3.936" tests="45">
    <testcase classname="mentions keymap ArrowUp should be ignored if there is no mentionProvider" name="mentions keymap ArrowUp should be ignored if there is no mentionProvider" time="0.025">
    </testcase>
    <testcase classname="mentions keymap ArrowUp should be ignored if there is no active query" name="mentions keymap ArrowUp should be ignored if there is no active query" time="0.016">
    </testcase>
    <testcase classname="mentions keymap ArrowUp should call &quot;onSelectPrevious&quot; which should return false by default" name="mentions keymap ArrowUp should call &quot;onSelectPrevious&quot; which should return false by default" time="0.011">
    </testcase>
    <testcase classname="mentions keymap ArrowDown should be ignored if there is no mentionProvider" name="mentions keymap ArrowDown should be ignored if there is no mentionProvider" time="0.003">
    </testcase>
    <testcase classname="mentions keymap ArrowDown should be ignored if there is no active query" name="mentions keymap ArrowDown should be ignored if there is no active query" time="0.007">
    </testcase>
    <testcase classname="mentions keymap ArrowDown should call &quot;onSelectNext&quot; which should return false by default" name="mentions keymap ArrowDown should call &quot;onSelectNext&quot; which should return false by default" time="0.395">
    </testcase>
    <testcase classname="mentions keymap Enter should be ignored if there is no mentionProvider" name="mentions keymap Enter should be ignored if there is no mentionProvider" time="0.009">
    </testcase>
    <testcase classname="mentions keymap Enter should be ignored if there is no active query" name="mentions keymap Enter should be ignored if there is no active query" time="0.007">
    </testcase>
    <testcase classname="mentions keymap Enter should call &quot;onSelectCurrent&quot; which should return false by default" name="mentions keymap Enter should call &quot;onSelectCurrent&quot; which should return false by default" time="0.017">
    </testcase>
    <testcase classname="mentions keymap Shift-Enter should be ignored if there is no mentionProvider" name="mentions keymap Shift-Enter should be ignored if there is no mentionProvider" time="0.007">
    </testcase>
    <testcase classname="mentions keymap Shift-Enter should be ignored if there is no active query" name="mentions keymap Shift-Enter should be ignored if there is no active query" time="0.004">
    </testcase>
    <testcase classname="mentions keymap Shift-Enter should call &quot;onSelectCurrent&quot;" name="mentions keymap Shift-Enter should call &quot;onSelectCurrent&quot;" time="0.006">
    </testcase>
    <testcase classname="mentions keymap Space should be ignored if there is no mentionProvider" name="mentions keymap Space should be ignored if there is no mentionProvider" time="0.006">
    </testcase>
    <testcase classname="mentions keymap Space should be ignored if there is no active query" name="mentions keymap Space should be ignored if there is no active query" time="0.005">
    </testcase>
    <testcase classname="mentions keymap Space should call &quot;trySelectCurrent&quot;" name="mentions keymap Space should call &quot;trySelectCurrent&quot;" time="0.013">
    </testcase>
    <testcase classname="mentions keymap Escape should be ignored if there is no mentionProvider" name="mentions keymap Escape should be ignored if there is no mentionProvider" time="0.005">
    </testcase>
    <testcase classname="mentions keymap Escape should be ignored if there is no active query" name="mentions keymap Escape should be ignored if there is no active query" time="0.008">
    </testcase>
    <testcase classname="mentions keymap Escape should call &quot;dismiss&quot; which should return true by default" name="mentions keymap Escape should call &quot;dismiss&quot; which should return true by default" time="0.008">
    </testcase>
    <testcase classname="mentions insertMention should replace mention-query-mark with mention-node" name="mentions insertMention should replace mention-query-mark with mention-node" time="0.057">
    </testcase>
    <testcase classname="mentions insertMention should insert a space after the mention-node" name="mentions insertMention should insert a space after the mention-node" time="0.019">
    </testcase>
    <testcase classname="mentions insertMention should not insert a space after the mention-node if next character is already a space" name="mentions insertMention should not insert a space after the mention-node if next character is already a space" time="0.037">
    </testcase>
    <testcase classname="mentions insertMention should render the mention-node using a nickname if present" name="mentions insertMention should render the mention-node using a nickname if present" time="0.021">
    </testcase>
    <testcase classname="mentions insertMention should allow inserting multiple @-mentions next to eachother" name="mentions insertMention should allow inserting multiple @-mentions next to eachother" time="0.034">
    </testcase>
    <testcase classname="mentions insertMention should allow inserting @-mention on new line after hard break" name="mentions insertMention should allow inserting @-mention on new line after hard break" time="0.015">
    </testcase>
    <testcase classname="mentions insertMention should not break list into two when inserting mention inside list item" name="mentions insertMention should not break list into two when inserting mention inside list item" time="0.016">
    </testcase>
    <testcase classname="mentions insertMention should insert only 1 mention at a time inside blockqoute" name="mentions insertMention should insert only 1 mention at a time inside blockqoute" time="0.018">
    </testcase>
    <testcase classname="mentions insertMention should insert mention at the position of the provided inactive mark" name="mentions insertMention should insert mention at the position of the provided inactive mark" time="0.021">
    </testcase>
    <testcase classname="mentions remove should remove active mark when all text of mark is removed" name="mentions remove should remove active mark when all text of mark is removed" time="0.011">
    </testcase>
    <testcase classname="mentions remove should call changeHandlers when mention is removed" name="mentions remove should call changeHandlers when mention is removed" time="0.008">
    </testcase>
    <testcase classname="mentions onMentionResult should not replace active mark " name="mentions onMentionResult should not replace active mark " time="0.014">
    </testcase>
    <testcase classname="mentions onMentionResult should not modify current selection when resolving" name="mentions onMentionResult should not modify current selection when resolving" time="0.009">
    </testcase>
    <testcase classname="mentions dismiss should remove active mark and keep text" name="mentions dismiss should remove active mark and keep text" time="0.008">
    </testcase>
    <testcase classname="mentions dismiss should remove stored mentions  mark" name="mentions dismiss should remove stored mentions  mark" time="0.012">
    </testcase>
    <testcase classname="mentions isEnabled returns true when the mention mark can be applied" name="mentions isEnabled returns true when the mention mark can be applied" time="0.004">
    </testcase>
    <testcase classname="mentions isEnabled returns false when the mention mark cannot be applied" name="mentions isEnabled returns false when the mention mark cannot be applied" time="0.012">
    </testcase>
    <testcase classname="mentions trySelectCurrent should select current if there is only one result" name="mentions trySelectCurrent should select current if there is only one result" time="0.018">
    </testcase>
    <testcase classname="mentions trySelectCurrent should not select exact match if non unique" name="mentions trySelectCurrent should not select exact match if non unique" time="0.006">
    </testcase>
    <testcase classname="mentions trySelectCurrent should do nothing if the user is still searching (no exact match)" name="mentions trySelectCurrent should do nothing if the user is still searching (no exact match)" time="0.008">
    </testcase>
    <testcase classname="mentions trySelectCurrent should try inserting exact match for previous result if previous query has no result" name="mentions trySelectCurrent should try inserting exact match for previous result if previous query has no result" time="0.021">
    </testcase>
    <testcase classname="mentions trySelectCurrent should try inserting exact match for previous result if no query in flight and no current result" name="mentions trySelectCurrent should try inserting exact match for previous result if no query in flight and no current result" time="0.007">
    </testcase>
    <testcase classname="mentions trySelectCurrent should dismiss if there is no result and none coming" name="mentions trySelectCurrent should dismiss if there is no result and none coming" time="0.008">
    </testcase>
    <testcase classname="mentions Insert mention using previous exact match should insert mention if one previous query has exact match result" name="mentions Insert mention using previous exact match should insert mention if one previous query has exact match result" time="0.022">
    </testcase>
    <testcase classname="mentions focused when editor is focused it is true" name="mentions focused when editor is focused it is true" time="0.004">
    </testcase>
    <testcase classname="mentions focused when editor is not focused it is false" name="mentions focused when editor is not focused it is false" time="0.004">
    </testcase>
    <testcase classname="mentions lastQuery when state is cleared should store the previous query" name="mentions lastQuery when state is cleared should store the previous query" time="0.065">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema mention-query mark" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:01" time="1.177" tests="1">
    <testcase classname="@atlaskit/editor-common/schema mention-query mark serializes to &lt;span data-mention-query=&quot;true&quot;&gt;" name="@atlaskit/editor-common/schema mention-query mark serializes to &lt;span data-mention-query=&quot;true&quot;&gt;" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="JIRATransformer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:00" time="2.56" tests="7">
    <testcase classname="JIRATransformer blockquote parses HTML: simple content" name="JIRATransformer blockquote parses HTML: simple content" time="0.008">
    </testcase>
    <testcase classname="JIRATransformer blockquote encodes HTML: simple content" name="JIRATransformer blockquote encodes HTML: simple content" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer blockquote round-trips HTML: simple content" name="JIRATransformer blockquote round-trips HTML: simple content" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer blockquote parses HTML: empty node" name="JIRATransformer blockquote parses HTML: empty node" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer blockquote parses HTML: no content" name="JIRATransformer blockquote parses HTML: no content" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer blockquote encodes HTML: no content" name="JIRATransformer blockquote encodes HTML: no content" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer blockquote round-trips HTML: no content" name="JIRATransformer blockquote round-trips HTML: no content" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="createChangeset" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:02" time="0.736" tests="6">
    <testcase classname="createChangeset in a simple project should prompt for changed packages, bump type and summary" name="createChangeset in a simple project should prompt for changed packages, bump type and summary" time="0.012">
    </testcase>
    <testcase classname="createChangeset in a simple project should create expected changeset object" name="createChangeset in a simple project should create expected changeset object" time="0.002">
    </testcase>
    <testcase classname="createChangeset in a project with dependencies should prompt for changed packages, bump type and summary" name="createChangeset in a project with dependencies should prompt for changed packages, bump type and summary" time="0.007">
    </testcase>
    <testcase classname="createChangeset in a project with dependencies should create expected changeset object" name="createChangeset in a project with dependencies should create expected changeset object" time="0.002">
    </testcase>
    <testcase classname="createChangeset in a project with transitive dependencies should prompt for changed packages, bump type and summary" name="createChangeset in a project with transitive dependencies should prompt for changed packages, bump type and summary" time="0.007">
    </testcase>
    <testcase classname="createChangeset in a project with transitive dependencies should create expected changeset object" name="createChangeset in a project with transitive dependencies should create expected changeset object" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="inputrules" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:02" time="1.902" tests="12">
    <testcase classname="inputrules bullet list rule should convert &quot;* &quot; to a bullet list item" name="inputrules bullet list rule should convert &quot;* &quot; to a bullet list item" time="0.014">
    </testcase>
    <testcase classname="inputrules bullet list rule should convert &quot;* &quot; after shift+enter to a bullet list item" name="inputrules bullet list rule should convert &quot;* &quot; after shift+enter to a bullet list item" time="0.006">
    </testcase>
    <testcase classname="inputrules bullet list rule should convert &quot;* &quot; after multiple shift+enter to a bullet list item" name="inputrules bullet list rule should convert &quot;* &quot; after multiple shift+enter to a bullet list item" time="0.006">
    </testcase>
    <testcase classname="inputrules bullet list rule should convert &quot;* &quot; after shift+enter to a bullet list for only current line" name="inputrules bullet list rule should convert &quot;* &quot; after shift+enter to a bullet list for only current line" time="0.004">
    </testcase>
    <testcase classname="inputrules bullet list rule should convert &quot;- &quot; to a bullet list item" name="inputrules bullet list rule should convert &quot;- &quot; to a bullet list item" time="0.004">
    </testcase>
    <testcase classname="inputrules bullet list rule should be not be possible to convert a code_clock to a list item" name="inputrules bullet list rule should be not be possible to convert a code_clock to a list item" time="0.003">
    </testcase>
    <testcase classname="inputrules ordered list rule should convert &quot;[number]. &quot; to a ordered list item" name="inputrules ordered list rule should convert &quot;[number]. &quot; to a ordered list item" time="0.005">
    </testcase>
    <testcase classname="inputrules ordered list rule should convert &quot;[number]. &quot; after shift+enter to a ordered list item" name="inputrules ordered list rule should convert &quot;[number]. &quot; after shift+enter to a ordered list item" time="0.005">
    </testcase>
    <testcase classname="inputrules ordered list rule should convert &quot;[number]. &quot; after multiple shift+enter to a ordered list item" name="inputrules ordered list rule should convert &quot;[number]. &quot; after multiple shift+enter to a ordered list item" time="0.005">
    </testcase>
    <testcase classname="inputrules ordered list rule should convert &quot;[number]) &quot; to a ordered list item" name="inputrules ordered list rule should convert &quot;[number]) &quot; to a ordered list item" time="0.003">
    </testcase>
    <testcase classname="inputrules ordered list rule should always begin a new list on 1" name="inputrules ordered list rule should always begin a new list on 1" time="0.004">
    </testcase>
    <testcase classname="inputrules ordered list rule should not be possible to convert code block to bullet list item" name="inputrules ordered list rule should not be possible to convert code block to bullet list item" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="JIRATransformer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:03" time="1.863" tests="11">
    <testcase classname="JIRATransformer textColor parses HTML: colour from palette" name="JIRATransformer textColor parses HTML: colour from palette" time="0.012">
    </testcase>
    <testcase classname="JIRATransformer textColor encodes HTML: colour from palette" name="JIRATransformer textColor encodes HTML: colour from palette" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer textColor round-trips HTML: colour from palette" name="JIRATransformer textColor round-trips HTML: colour from palette" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer textColor parses HTML: unknown colour" name="JIRATransformer textColor parses HTML: unknown colour" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer textColor encodes HTML: unknown colour" name="JIRATransformer textColor encodes HTML: unknown colour" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer textColor round-trips HTML: unknown colour" name="JIRATransformer textColor round-trips HTML: unknown colour" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer textColor parses HTML: default colour" name="JIRATransformer textColor parses HTML: default colour" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer textColor parses HTML: 3 digits hex colour" name="JIRATransformer textColor parses HTML: 3 digits hex colour" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer textColor parses HTML: named colour" name="JIRATransformer textColor parses HTML: named colour" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer textColor parses HTML: colour with extra whitespace" name="JIRATransformer textColor parses HTML: colour with extra whitespace" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer textColor parses HTML: invalid colour" name="JIRATransformer textColor parses HTML: invalid colour" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/Extension" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:04" time="1.425" tests="4">
    <testcase classname="Renderer - React/Nodes/Extension should be able to fall back to default content" name="Renderer - React/Nodes/Extension should be able to fall back to default content" time="0.013">
    </testcase>
    <testcase classname="Renderer - React/Nodes/Extension should be able to render React.Element from extensionHandler" name="Renderer - React/Nodes/Extension should be able to render React.Element from extensionHandler" time="0.006">
    </testcase>
    <testcase classname="Renderer - React/Nodes/Extension should be able to render Atlassian Document from extensionHandler" name="Renderer - React/Nodes/Extension should be able to render Atlassian Document from extensionHandler" time="0.029">
    </testcase>
    <testcase classname="Renderer - React/Nodes/Extension should render the default content if extensionHandler throws an exception" name="Renderer - React/Nodes/Extension should render the default content if extensionHandler throws an exception" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/HyperlinkEditRecentSearch" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:03" time="2.906" tests="9">
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEditRecentSearch should show the recent search input when inserting a new link" name="@atlaskit/editor-core/ui/HyperlinkEditRecentSearch should show the recent search input when inserting a new link" time="0.204">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEditRecentSearch should not show the recent search input when editing an existing link" name="@atlaskit/editor-core/ui/HyperlinkEditRecentSearch should not show the recent search input when editing an existing link" time="0.123">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEditRecentSearch should show recent items by default" name="@atlaskit/editor-core/ui/HyperlinkEditRecentSearch should show recent items by default" time="0.206">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEditRecentSearch should search recent items when typing into the input field" name="@atlaskit/editor-core/ui/HyperlinkEditRecentSearch should search recent items when typing into the input field" time="0.121">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEditRecentSearch should allow clicking on a link form the search results to insert it" name="@atlaskit/editor-core/ui/HyperlinkEditRecentSearch should allow clicking on a link form the search results to insert it" time="0.09">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEditRecentSearch should allow inserting an arbitrary link" name="@atlaskit/editor-core/ui/HyperlinkEditRecentSearch should allow inserting an arbitrary link" time="0.132">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEditRecentSearch should allow inserting a link from search results by pressing return" name="@atlaskit/editor-core/ui/HyperlinkEditRecentSearch should allow inserting a link from search results by pressing return" time="0.104">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEditRecentSearch should allow selecting a link from search results with the keyboard and inserting it by pressing return" name="@atlaskit/editor-core/ui/HyperlinkEditRecentSearch should allow selecting a link from search results with the keyboard and inserting it by pressing return" time="0.1">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEditRecentSearch should allow inserting a link from a text selection" name="@atlaskit/editor-core/ui/HyperlinkEditRecentSearch should allow inserting a link from a text selection" time="0.098">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema taskList node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:05" time="1.161" tests="3">
    <testcase classname="@atlaskit/editor-common/schema taskList node serializes to &lt;ol&gt; with proper data-attributes" name="@atlaskit/editor-common/schema taskList node serializes to &lt;ol&gt; with proper data-attributes" time="0.011">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema taskList node matches &lt;ol data-task-list-local-id&gt;" name="@atlaskit/editor-common/schema taskList node matches &lt;ol data-task-list-local-id&gt;" time="0.01">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema taskList node does not match &lt;ol&gt;" name="@atlaskit/editor-common/schema taskList node does not match &lt;ol&gt;" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="TagGroup" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:07" time="0.789" tests="4">
    <testcase classname="TagGroup should export a base component" name="TagGroup should export a base component" time="0.004">
    </testcase>
    <testcase classname="TagGroup should render supplied tags" name="TagGroup should render supplied tags" time="0.054">
    </testcase>
    <testcase classname="TagGroup should justify to the start when alignment not set" name="TagGroup should justify to the start when alignment not set" time="0.017">
    </testcase>
    <testcase classname="TagGroup should justify to the end when alignment is set to end" name="TagGroup should justify to the end when alignment is set to end" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="ToolbarTextFormatting" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:06" time="2.496" tests="7">
    <testcase classname="ToolbarTextFormatting should render disabled ToolbarButtons if disabled property is true" name="ToolbarTextFormatting should render disabled ToolbarButtons if disabled property is true" time="0.082">
    </testcase>
    <testcase classname="ToolbarTextFormatting should have spacing of toolbar button set to none if editorWidth is less then BreakPoint10" name="ToolbarTextFormatting should have spacing of toolbar button set to none if editorWidth is less then BreakPoint10" time="0.045">
    </testcase>
    <testcase classname="ToolbarTextFormatting should have spacing of toolbar button set to default if editorWidth is greater then BreakPoint10" name="ToolbarTextFormatting should have spacing of toolbar button set to default if editorWidth is greater then BreakPoint10" time="0.049">
    </testcase>
    <testcase classname="ToolbarTextFormatting should have underline as last option if editorWidth is greater then breakpoint7" name="ToolbarTextFormatting should have underline as last option if editorWidth is greater then breakpoint7" time="0.052">
    </testcase>
    <testcase classname="ToolbarTextFormatting should not underline as last option if editorWidth is less then breakpoint7" name="ToolbarTextFormatting should not underline as last option if editorWidth is less then breakpoint7" time="0.024">
    </testcase>
    <testcase classname="ToolbarTextFormatting analytics should trigger analyticsService.trackEvent when bold button is clicked" name="ToolbarTextFormatting analytics should trigger analyticsService.trackEvent when bold button is clicked" time="0.061">
    </testcase>
    <testcase classname="ToolbarTextFormatting analytics should trigger analyticsService.trackEvent when italic button is clicked" name="ToolbarTextFormatting analytics should trigger analyticsService.trackEvent when italic button is clicked" time="0.06">
    </testcase>
  </testsuite>
  <testsuite name="editorShowError action creator" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:08" time="0.665" tests="1">
    <testcase classname="editorShowError action creator should create error data with message and handler if both are passed" name="editorShowError action creator should create error data with message and handler if both are passed" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/ChromeExpanded" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:06" time="3.112" tests="14">
    <testcase classname="@atlaskit/editor-core/ui/ChromeExpanded props should render enabled save button by default" name="@atlaskit/editor-core/ui/ChromeExpanded props should render enabled save button by default" time="0.104">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ChromeExpanded props should render enabled save button if saveDisabled=false" name="@atlaskit/editor-core/ui/ChromeExpanded props should render enabled save button if saveDisabled=false" time="0.025">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ChromeExpanded props should render Spinner if showSpinner=true and saveDisabled=true" name="@atlaskit/editor-core/ui/ChromeExpanded props should render Spinner if showSpinner=true and saveDisabled=true" time="0.054">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ChromeExpanded props should add maxHeight to content section if it&apos;s passed" name="@atlaskit/editor-core/ui/ChromeExpanded props should add maxHeight to content section if it&apos;s passed" time="0.02">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ChromeExpanded props should not set height if props.height is undefined" name="@atlaskit/editor-core/ui/ChromeExpanded props should not set height if props.height is undefined" time="0.022">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ChromeExpanded props should not set borders if only props.height is set" name="@atlaskit/editor-core/ui/ChromeExpanded props should not set borders if only props.height is set" time="0.024">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ChromeExpanded props should render disabled save button if saveDisabled=true" name="@atlaskit/editor-core/ui/ChromeExpanded props should render disabled save button if saveDisabled=true" time="0.062">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ChromeExpanded props should disable UI elements when disabled=true" name="@atlaskit/editor-core/ui/ChromeExpanded props should disable UI elements when disabled=true" time="0.051">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ChromeExpanded props analytics should trigger analyticsService.trackEvent when save button is clicked" name="@atlaskit/editor-core/ui/ChromeExpanded props analytics should trigger analyticsService.trackEvent when save button is clicked" time="0.035">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ChromeExpanded props analytics should trigger analyticsService.trackEvent when cancel button is clicked" name="@atlaskit/editor-core/ui/ChromeExpanded props analytics should trigger analyticsService.trackEvent when cancel button is clicked" time="0.027">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ChromeExpanded helpDialog should set state variable showHelp true if help dialog is present and Cmd-/ is entered" name="@atlaskit/editor-core/ui/ChromeExpanded helpDialog should set state variable showHelp true if help dialog is present and Cmd-/ is entered" time="0.197">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ChromeExpanded helpDialog should set state variable showHelp true when open help dialog button is clicked" name="@atlaskit/editor-core/ui/ChromeExpanded helpDialog should set state variable showHelp true when open help dialog button is clicked" time="0.241">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ChromeExpanded helpDialog should track analytics when helpDialog is opened using key event Cmd-/" name="@atlaskit/editor-core/ui/ChromeExpanded helpDialog should track analytics when helpDialog is opened using key event Cmd-/" time="0.135">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ChromeExpanded helpDialog should reset state variable showHelp if help dialog is present and Escape is entered" name="@atlaskit/editor-core/ui/ChromeExpanded helpDialog should reset state variable showHelp if help dialog is present and Escape is entered" time="0.167">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/editor/ui/PlaceholderCursor" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:09" time="2.104" tests="1">
    <testcase classname="@atlaskit/editor-core/editor/ui/PlaceholderCursor helpDialog.pmPlugins should return array of size 1" name="@atlaskit/editor-core/editor/ui/PlaceholderCursor helpDialog.pmPlugins should return array of size 1" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="CardList" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:09" time="2.77" tests="17">
    <testcase classname="CardList should create a MediaItemProvider for each MediaItem in the collection" name="CardList should create a MediaItemProvider for each MediaItem in the collection" time="0.727">
    </testcase>
    <testcase classname="CardList should pass a provider to MediaCard" name="CardList should pass a provider to MediaCard" time="0.105">
    </testcase>
    <testcase classname="CardList should be loading=true when mounted" name="CardList should be loading=true when mounted" time="0.006">
    </testcase>
    <testcase classname="CardList should be loading=false when we start loading the next page" name="CardList should be loading=false when we start loading the next page" time="0.002">
    </testcase>
    <testcase classname="CardList should not animate items the first time" name="CardList should not animate items the first time" time="0.003">
    </testcase>
    <testcase classname="CardList should animate items when they are new" name="CardList should animate items when they are new" time="0.008">
    </testcase>
    <testcase classname="CardList should reset previous state when props change" name="CardList should reset previous state when props change" time="0.003">
    </testcase>
    <testcase classname="CardList should fire onCardClick handler with updated MediaItemDetails when a Card in the list is clicked" name="CardList should fire onCardClick handler with updated MediaItemDetails when a Card in the list is clicked" time="0.007">
    </testcase>
    <testcase classname="CardList .render() should render the loading view when the list is loading" name="CardList .render() should render the loading view when the list is loading" time="0.002">
    </testcase>
    <testcase classname="CardList .render() should render the empty view when the list is not loading and the error is an axios response with a status of 404" name="CardList .render() should render the empty view when the list is not loading and the error is an axios response with a status of 404" time="0.001">
    </testcase>
    <testcase classname="CardList .render() should render the error view when the the list is not loading and the error is not an axios response with a status of 404" name="CardList .render() should render the error view when the the list is not loading and the error is not an axios response with a status of 404" time="0.002">
    </testcase>
    <testcase classname="CardList .render() should render the loading view when the the list is not loading, there is no error and the collection has not been retrieved" name="CardList .render() should render the loading view when the the list is not loading, there is no error and the collection has not been retrieved" time="0.001">
    </testcase>
    <testcase classname="CardList .render() should render wrapped in an &lt;InfiniteScroll&gt; when useInfiniteScroll=true" name="CardList .render() should render wrapped in an &lt;InfiniteScroll&gt; when useInfiniteScroll=true" time="0.002">
    </testcase>
    <testcase classname="CardList .render() should not render wrapped in an &lt;InfiniteScroll&gt; when useInfiniteScroll=false" name="CardList .render() should not render wrapped in an &lt;InfiniteScroll&gt; when useInfiniteScroll=false" time="0.002">
    </testcase>
    <testcase classname="CardList .render() should render wrapped in an &lt;LazilyRender&gt; by default" name="CardList .render() should render wrapped in an &lt;LazilyRender&gt; by default" time="0.22">
    </testcase>
    <testcase classname="CardList .render() should not render wrapped in an &lt;LazyLoad&gt; when shouldLazyLoadCards=false" name="CardList .render() should not render wrapped in an &lt;LazyLoad&gt; when shouldLazyLoadCards=false" time="0.07">
    </testcase>
    <testcase classname="CardList .render() should not wrap existing items into LazyContent" name="CardList .render() should not wrap existing items into LazyContent" time="0.336">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/Macro/InlineExtension" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:10" time="1.558" tests="2">
    <testcase classname="@atlaskit/editor-core/ui/Macro/InlineExtension should render Placeholder if inlineExtension has placeholder image param" name="@atlaskit/editor-core/ui/Macro/InlineExtension should render Placeholder if inlineExtension has placeholder image param" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/Macro/InlineExtension should render PlaceholderFallback if inlineExtension doesn&apos;t have placeholder image param" name="@atlaskit/editor-core/ui/Macro/InlineExtension should render PlaceholderFallback if inlineExtension doesn&apos;t have placeholder image param" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:11" time="1.863" tests="10">
    <testcase classname="@atlaskit/editor-core create-editor #sortByRank should correctly sort object with rank property" name="@atlaskit/editor-core create-editor #sortByRank should correctly sort object with rank property" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-core create-editor #fixExcludes should remove all unused marks from exclude" name="@atlaskit/editor-core create-editor #fixExcludes should remove all unused marks from exclude" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-core create-editor #createPMPlugins should not add plugin if its factory returns falsy value" name="@atlaskit/editor-core create-editor #createPMPlugins should not add plugin if its factory returns falsy value" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editor-core #processDefaultDocument should return undefined if no default document provided" name="@atlaskit/editor-core #processDefaultDocument should return undefined if no default document provided" time="0.009">
    </testcase>
    <testcase classname="@atlaskit/editor-core #processDefaultDocument should return undefined if provided document isn&apos;t a vaild JSON" name="@atlaskit/editor-core #processDefaultDocument should return undefined if provided document isn&apos;t a vaild JSON" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editor-core #processDefaultDocument should return undefined if provided document is an array" name="@atlaskit/editor-core #processDefaultDocument should return undefined if provided document is an array" time="0.009">
    </testcase>
    <testcase classname="@atlaskit/editor-core #processDefaultDocument should return undefined if Node.fomJSON wasn&apos;t able to create a Node" name="@atlaskit/editor-core #processDefaultDocument should return undefined if Node.fomJSON wasn&apos;t able to create a Node" time="0.01">
    </testcase>
    <testcase classname="@atlaskit/editor-core #processDefaultDocument should return PM Node if a default document is an instance of Node" name="@atlaskit/editor-core #processDefaultDocument should return PM Node if a default document is an instance of Node" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/editor-core #processDefaultDocument should return PM Node" name="@atlaskit/editor-core #processDefaultDocument should return PM Node" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/editor-core onChange should call onChange only when document changes" name="@atlaskit/editor-core onChange should call onChange only when document changes" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="save on enter" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:11" time="1.952" tests="5">
    <testcase classname="save on enter should trigger onSubmit when user presses Enter" name="save on enter should trigger onSubmit when user presses Enter" time="0.007">
    </testcase>
    <testcase classname="save on enter should trigger onSubmit when user presses Enter in decisionItem" name="save on enter should trigger onSubmit when user presses Enter in decisionItem" time="0.023">
    </testcase>
    <testcase classname="save on enter should trigger onSubmit when user presses Enter inside taskItem" name="save on enter should trigger onSubmit when user presses Enter inside taskItem" time="0.036">
    </testcase>
    <testcase classname="save on enter should not trigger onSubmit when user presses Enter in empty decisionItem" name="save on enter should not trigger onSubmit when user presses Enter in empty decisionItem" time="0.019">
    </testcase>
    <testcase classname="save on enter should not trigger onSubmit when user presses Enter inside empty taskItem" name="save on enter should not trigger onSubmit when user presses Enter inside empty taskItem" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="keymaps" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:13" time="1.57" tests="5">
    <testcase classname="keymaps when not on a mac tooltip returns tooltip" name="keymaps when not on a mac tooltip returns tooltip" time="0.013">
    </testcase>
    <testcase classname="keymaps when not on a mac findKeymapByDescription keymap is found returns matched keymap" name="keymaps when not on a mac findKeymapByDescription keymap is found returns matched keymap" time="0.001">
    </testcase>
    <testcase classname="keymaps when not on a mac findKeymapByDescription key map is not found returns undefined" name="keymaps when not on a mac findKeymapByDescription key map is not found returns undefined" time="0.001">
    </testcase>
    <testcase classname="keymaps when not on a mac findShortcutByDescription shortcut is found returns matched shortcut" name="keymaps when not on a mac findShortcutByDescription shortcut is found returns matched shortcut" time="0">
    </testcase>
    <testcase classname="keymaps when not on a mac findShortcutByDescription shortcut is not found returns undefined" name="keymaps when not on a mac findShortcutByDescription shortcut is not found returns undefined" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - ADFEncoder" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:12" time="3.858" tests="2">
    <testcase classname="Renderer - ADFEncoder should pass the default schema to the transformer provider" name="Renderer - ADFEncoder should pass the default schema to the transformer provider" time="0.004">
    </testcase>
    <testcase classname="Renderer - ADFEncoder should use the provided transformer to parse a given value" name="Renderer - ADFEncoder should use the provided transformer to parse a given value" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="WorkerHasher" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:15" time="0.906" tests="3">
    <testcase classname="WorkerHasher should start 3 workers if 3 workers are specified in the constructor" name="WorkerHasher should start 3 workers if 3 workers are specified in the constructor" time="0.038">
    </testcase>
    <testcase classname="WorkerHasher should start 5 workers if 5 workers are specified in the constructor" name="WorkerHasher should start 5 workers if 5 workers are specified in the constructor" time="0.022">
    </testcase>
    <testcase classname="WorkerHasher should call postMessage on a worker when hash is requested" name="WorkerHasher should call postMessage on a worker when hash is requested" time="0.054">
    </testcase>
  </testsuite>
  <testsuite name="inline-dialog" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:16" time="2.51" tests="17">
    <testcase classname="inline-dialog default should have the expected default props" name="inline-dialog default should have the expected default props" time="0.016">
    </testcase>
    <testcase classname="inline-dialog default should pass the expected default props to Layer" name="inline-dialog default should pass the expected default props to Layer" time="0.008">
    </testcase>
    <testcase classname="inline-dialog default should render any children passed to it" name="inline-dialog default should render any children passed to it" time="0.009">
    </testcase>
    <testcase classname="inline-dialog isOpen prop should render the content container if isOpen is set" name="inline-dialog isOpen prop should render the content container if isOpen is set" time="0.528">
    </testcase>
    <testcase classname="inline-dialog isOpen prop should not render the content container if isOpen is not set" name="inline-dialog isOpen prop should not render the content container if isOpen is not set" time="0.008">
    </testcase>
    <testcase classname="inline-dialog content prop should render content if isOpen is set" name="inline-dialog content prop should render content if isOpen is set" time="0.203">
    </testcase>
    <testcase classname="inline-dialog content prop should not render content if isOpen is not set" name="inline-dialog content prop should not render content if isOpen is not set" time="0.005">
    </testcase>
    <testcase classname="inline-dialog content prop should reflect content prop onto Layer if isOpen is set" name="inline-dialog content prop should reflect content prop onto Layer if isOpen is set" time="0.006">
    </testcase>
    <testcase classname="inline-dialog position prop should be reflected onto the Layer component" name="inline-dialog position prop should be reflected onto the Layer component" time="0.002">
    </testcase>
    <testcase classname="inline-dialog shouldFlip prop should be reflected onto the Layer component for a boolean value" name="inline-dialog shouldFlip prop should be reflected onto the Layer component for a boolean value" time="0.006">
    </testcase>
    <testcase classname="inline-dialog shouldFlip prop should be reflected onto the Layer component for an array of strings" name="inline-dialog shouldFlip prop should be reflected onto the Layer component for an array of strings" time="0.009">
    </testcase>
    <testcase classname="inline-dialog onContentClick should be triggered when the content is clicked" name="inline-dialog onContentClick should be triggered when the content is clicked" time="0.318">
    </testcase>
    <testcase classname="inline-dialog onContentFocus should be triggered when an element in the content is focused" name="inline-dialog onContentFocus should be triggered when an element in the content is focused" time="0.184">
    </testcase>
    <testcase classname="inline-dialog onContentBlur should be triggered when an element in the content is blurred" name="inline-dialog onContentBlur should be triggered when an element in the content is blurred" time="0.279">
    </testcase>
    <testcase classname="inline-dialog handleClickOutside should not trigger the onClose prop if event is defaultPrevented" name="inline-dialog handleClickOutside should not trigger the onClose prop if event is defaultPrevented" time="0.151">
    </testcase>
    <testcase classname="inline-dialog handleClickOutside should trigger the onClose prop" name="inline-dialog handleClickOutside should trigger the onClose prop" time="0.135">
    </testcase>
    <testcase classname="inline-dialog handleClickOutside should NOT trigger the onClose prop when isOpen is false" name="inline-dialog handleClickOutside should NOT trigger the onClose prop when isOpen is false" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/ToolbarEmojiPicker" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:16" time="6.024" tests="18">
    <testcase classname="@atlaskit/editor-core/ui/ToolbarEmojiPicker should have Popup component defined in it" name="@atlaskit/editor-core/ui/ToolbarEmojiPicker should have Popup component defined in it" time="0.184">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarEmojiPicker should return null if EditorWidth is less then BreakPoint4" name="@atlaskit/editor-core/ui/ToolbarEmojiPicker should return null if EditorWidth is less then BreakPoint4" time="0.011">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarEmojiPicker should be enabled by default" name="@atlaskit/editor-core/ui/ToolbarEmojiPicker should be enabled by default" time="1.219">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarEmojiPicker should disable the ToolbarEmojiPicker when in a code block" name="@atlaskit/editor-core/ui/ToolbarEmojiPicker should disable the ToolbarEmojiPicker when in a code block" time="0.062">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarEmojiPicker should disable the ToolbarEmojiPicker when in an active mention query mark" name="@atlaskit/editor-core/ui/ToolbarEmojiPicker should disable the ToolbarEmojiPicker when in an active mention query mark" time="0.08">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarEmojiPicker should be disabled if isDisabled property is true" name="@atlaskit/editor-core/ui/ToolbarEmojiPicker should be disabled if isDisabled property is true" time="0.223">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarEmojiPicker should have spacing of toolbar button set to default" name="@atlaskit/editor-core/ui/ToolbarEmojiPicker should have spacing of toolbar button set to default" time="0.03">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarEmojiPicker should have state variable isOpen set to true when toolbar emoji button is clicked" name="@atlaskit/editor-core/ui/ToolbarEmojiPicker should have state variable isOpen set to true when toolbar emoji button is clicked" time="0.096">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarEmojiPicker should have state variable isOpen set to false when toolbar emoji button is clicked twice" name="@atlaskit/editor-core/ui/ToolbarEmojiPicker should have state variable isOpen set to false when toolbar emoji button is clicked twice" time="0.12">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarEmojiPicker should render the picker if the button has been clicked once" name="@atlaskit/editor-core/ui/ToolbarEmojiPicker should render the picker if the button has been clicked once" time="0.112">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarEmojiPicker should not render the picker if the button has not been clicked" name="@atlaskit/editor-core/ui/ToolbarEmojiPicker should not render the picker if the button has not been clicked" time="0.019">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarEmojiPicker should have an onSelection handler in the rendered picker" name="@atlaskit/editor-core/ui/ToolbarEmojiPicker should have an onSelection handler in the rendered picker" time="0.068">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarEmojiPicker should insert an emoji into editor if the picker registers a selection" name="@atlaskit/editor-core/ui/ToolbarEmojiPicker should insert an emoji into editor if the picker registers a selection" time="0.124">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarEmojiPicker should close the picker if an external node is clicked" name="@atlaskit/editor-core/ui/ToolbarEmojiPicker should close the picker if an external node is clicked" time="0.149">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarEmojiPicker should add an ESC keydown event listener on mount" name="@atlaskit/editor-core/ui/ToolbarEmojiPicker should add an ESC keydown event listener on mount" time="0.011">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarEmojiPicker should remove an ESC keydown event listener on unmount" name="@atlaskit/editor-core/ui/ToolbarEmojiPicker should remove an ESC keydown event listener on unmount" time="0.01">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarEmojiPicker should close the picker on handleEscape" name="@atlaskit/editor-core/ui/ToolbarEmojiPicker should close the picker on handleEscape" time="0.01">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarEmojiPicker analytics should trigger analyticsService.trackEvent when emoji is inserted via picker" name="@atlaskit/editor-core/ui/ToolbarEmojiPicker analytics should trigger analyticsService.trackEvent when emoji is inserted via picker" time="0.08">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/HyperlinkEdit" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:14" time="10.008" tests="13">
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEdit should produce null HTML when another block on editor is focused" name="@atlaskit/editor-core/ui/HyperlinkEdit should produce null HTML when another block on editor is focused" time="0.028">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEdit should not produce null HTML when a link on editor is focused" name="@atlaskit/editor-core/ui/HyperlinkEdit should not produce null HTML when a link on editor is focused" time="0.234">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEdit should produce null HTML when editor is blur" name="@atlaskit/editor-core/ui/HyperlinkEdit should produce null HTML when editor is blur" time="0.01">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEdit should set autoFocus of PanelTextInput to true when link href is not defined" name="@atlaskit/editor-core/ui/HyperlinkEdit should set autoFocus of PanelTextInput to true when link href is not defined" time="0.05">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEdit should set state variable autoFocusInput to false when link href is defined" name="@atlaskit/editor-core/ui/HyperlinkEdit should set state variable autoFocusInput to false when link href is defined" time="0.031">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEdit should set state variable autoFocusInput to false when link href is defined" name="@atlaskit/editor-core/ui/HyperlinkEdit should set state variable autoFocusInput to false when link href is defined" time="0.011">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEdit should show title input when title and href are same" name="@atlaskit/editor-core/ui/HyperlinkEdit should show title input when title and href are same" time="0.086">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEdit should show href input when title is defined" name="@atlaskit/editor-core/ui/HyperlinkEdit should show href input when title is defined" time="0.17">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEdit should clear data of previous link" name="@atlaskit/editor-core/ui/HyperlinkEdit should clear data of previous link" time="0.252">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEdit should update href on blur" name="@atlaskit/editor-core/ui/HyperlinkEdit should update href on blur" time="0.056">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEdit should update title on blur" name="@atlaskit/editor-core/ui/HyperlinkEdit should update title on blur" time="0.071">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEdit should not update title or href on blur if there is no change" name="@atlaskit/editor-core/ui/HyperlinkEdit should not update title or href on blur if there is no change" time="0.047">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/HyperlinkEdit should add placeholder cursor when input HyperlinkEdit is focused" name="@atlaskit/editor-core/ui/HyperlinkEdit should add placeholder cursor when input HyperlinkEdit is focused" time="0.045">
    </testcase>
  </testsuite>
  <testsuite name="placeholdercursor" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:19" time="5.298" tests="10">
    <testcase classname="placeholdercursor addPlaceholderCursor should add placeholder cursor" name="placeholdercursor addPlaceholderCursor should add placeholder cursor" time="0.006">
    </testcase>
    <testcase classname="placeholdercursor removePlaceholderCursor should remove placeholder cursor" name="placeholdercursor removePlaceholderCursor should remove placeholder cursor" time="0.004">
    </testcase>
    <testcase classname="placeholdercursor drawPlaceholderCursor should return null if selection is not of type PlaceholderCursor" name="placeholdercursor drawPlaceholderCursor should return null if selection is not of type PlaceholderCursor" time="0.004">
    </testcase>
    <testcase classname="placeholdercursor drawPlaceholderCursor should return DecorationSet if selection is of type PlaceholderCursor" name="placeholdercursor drawPlaceholderCursor should return DecorationSet if selection is of type PlaceholderCursor" time="0.004">
    </testcase>
    <testcase classname="placeholdercursor PlaceholderBookmark should have instance method map defined" name="placeholdercursor PlaceholderBookmark should have instance method map defined" time="0.002">
    </testcase>
    <testcase classname="placeholdercursor PlaceholderBookmark should have instance method resolve defined" name="placeholdercursor PlaceholderBookmark should have instance method resolve defined" time="0">
    </testcase>
    <testcase classname="placeholdercursor PlaceholderCursor should extend Selection" name="placeholdercursor PlaceholderCursor should extend Selection" time="0.001">
    </testcase>
    <testcase classname="placeholdercursor PlaceholderCursor should return instance of PlaceholderBookmark when getBookmark is called" name="placeholdercursor PlaceholderCursor should return instance of PlaceholderBookmark when getBookmark is called" time="0.001">
    </testcase>
    <testcase classname="placeholdercursor PlaceholderCursor should return true when eq() is called with PlaceholderCursor having same head" name="placeholdercursor PlaceholderCursor should return true when eq() is called with PlaceholderCursor having same head" time="0.001">
    </testcase>
    <testcase classname="placeholdercursor PlaceholderCursor should return empty Slice when content() is called" name="placeholdercursor PlaceholderCursor should return empty Slice when content() is called" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="text-formatting input rules" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:23" time="4.43" tests="57">
    <testcase classname="text-formatting input rules strong rule should convert &quot;**text**&quot; to strong" name="text-formatting input rules strong rule should convert &quot;**text**&quot; to strong" time="0.053">
    </testcase>
    <testcase classname="text-formatting input rules strong rule should convert text to strong for link also" name="text-formatting input rules strong rule should convert text to strong for link also" time="0.013">
    </testcase>
    <testcase classname="text-formatting input rules strong rule should not convert &quot;** text**&quot; to strong" name="text-formatting input rules strong rule should not convert &quot;** text**&quot; to strong" time="0.018">
    </testcase>
    <testcase classname="text-formatting input rules strong rule should convert &quot;__text__&quot; to strong" name="text-formatting input rules strong rule should convert &quot;__text__&quot; to strong" time="0.032">
    </testcase>
    <testcase classname="text-formatting input rules strong rule should not convert &quot;**text**&quot; to strong inside a code_block" name="text-formatting input rules strong rule should not convert &quot;**text**&quot; to strong inside a code_block" time="0.016">
    </testcase>
    <testcase classname="text-formatting input rules strong rule should not convert the surrounding text to strong" name="text-formatting input rules strong rule should not convert the surrounding text to strong" time="0.006">
    </testcase>
    <testcase classname="text-formatting input rules strong rule should not be inclusive right after autoformatting conversion" name="text-formatting input rules strong rule should not be inclusive right after autoformatting conversion" time="0.006">
    </testcase>
    <testcase classname="text-formatting input rules strong rule should not convert &quot;`**text**&quot; to strong" name="text-formatting input rules strong rule should not convert &quot;`**text**&quot; to strong" time="0.009">
    </testcase>
    <testcase classname="text-formatting input rules strong rule should not convert &quot;`__text__&quot; to strong" name="text-formatting input rules strong rule should not convert &quot;`__text__&quot; to strong" time="0.014">
    </testcase>
    <testcase classname="text-formatting input rules strong rule should not convert &quot;`some**variables**&quot; to strong" name="text-formatting input rules strong rule should not convert &quot;`some**variables**&quot; to strong" time="0.011">
    </testcase>
    <testcase classname="text-formatting input rules strong rule should not convert &quot;`some__variables__&quot; to strong" name="text-formatting input rules strong rule should not convert &quot;`some__variables__&quot; to strong" time="0.055">
    </testcase>
    <testcase classname="text-formatting input rules strong rule should convert &quot;some**variables**&quot; to strong" name="text-formatting input rules strong rule should convert &quot;some**variables**&quot; to strong" time="0.046">
    </testcase>
    <testcase classname="text-formatting input rules strong rule should not convert &quot;some__variables__&quot; to strong" name="text-formatting input rules strong rule should not convert &quot;some__variables__&quot; to strong" time="0.03">
    </testcase>
    <testcase classname="text-formatting input rules strong rule should convert &quot;hello __text__&quot; to strong" name="text-formatting input rules strong rule should convert &quot;hello __text__&quot; to strong" time="0.02">
    </testcase>
    <testcase classname="text-formatting input rules strong rule should convert &quot;**^hello**&quot; to strong" name="text-formatting input rules strong rule should convert &quot;**^hello**&quot; to strong" time="0.032">
    </testcase>
    <testcase classname="text-formatting input rules strong rule should convert &quot;__^hello__&quot; to strong" name="text-formatting input rules strong rule should convert &quot;__^hello__&quot; to strong" time="0.022">
    </testcase>
    <testcase classname="text-formatting input rules strong rule should not convert &quot;**text** to strong when node does not support text formatting" name="text-formatting input rules strong rule should not convert &quot;**text** to strong when node does not support text formatting" time="0.016">
    </testcase>
    <testcase classname="text-formatting input rules em rule should convert &quot;*text*&quot; to em" name="text-formatting input rules em rule should convert &quot;*text*&quot; to em" time="0.016">
    </testcase>
    <testcase classname="text-formatting input rules em rule should not convert &quot;* text*&quot; to em" name="text-formatting input rules em rule should not convert &quot;* text*&quot; to em" time="0.032">
    </testcase>
    <testcase classname="text-formatting input rules em rule should convert &quot;_text_&quot; to em" name="text-formatting input rules em rule should convert &quot;_text_&quot; to em" time="0.012">
    </testcase>
    <testcase classname="text-formatting input rules em rule should not be inclusive right after autoformatting conversion" name="text-formatting input rules em rule should not be inclusive right after autoformatting conversion" time="0.022">
    </testcase>
    <testcase classname="text-formatting input rules em rule should keep current marks when converting from markdown" name="text-formatting input rules em rule should keep current marks when converting from markdown" time="0.014">
    </testcase>
    <testcase classname="text-formatting input rules em rule should not convert &quot;*text*&quot; to em inside a code_block" name="text-formatting input rules em rule should not convert &quot;*text*&quot; to em inside a code_block" time="0.008">
    </testcase>
    <testcase classname="text-formatting input rules em rule should not convert &quot;`*text*&quot; to em" name="text-formatting input rules em rule should not convert &quot;`*text*&quot; to em" time="0.025">
    </testcase>
    <testcase classname="text-formatting input rules em rule should not convert &quot;`some*variables*&quot; to em" name="text-formatting input rules em rule should not convert &quot;`some*variables*&quot; to em" time="0.014">
    </testcase>
    <testcase classname="text-formatting input rules em rule should not convert &quot;`_text_&quot; to em" name="text-formatting input rules em rule should not convert &quot;`_text_&quot; to em" time="0.008">
    </testcase>
    <testcase classname="text-formatting input rules em rule should not convert &quot;`some_variables_&quot; to em" name="text-formatting input rules em rule should not convert &quot;`some_variables_&quot; to em" time="0.041">
    </testcase>
    <testcase classname="text-formatting input rules em rule should convert &quot;some*variables*&quot; to em" name="text-formatting input rules em rule should convert &quot;some*variables*&quot; to em" time="0.016">
    </testcase>
    <testcase classname="text-formatting input rules em rule should not convert &quot;some_variables_&quot; to em" name="text-formatting input rules em rule should not convert &quot;some_variables_&quot; to em" time="0.037">
    </testcase>
    <testcase classname="text-formatting input rules em rule should convert &quot;hello _text_&quot; to em" name="text-formatting input rules em rule should convert &quot;hello _text_&quot; to em" time="0.017">
    </testcase>
    <testcase classname="text-formatting input rules em rule should convert &quot;_^hello_&quot; to em" name="text-formatting input rules em rule should convert &quot;_^hello_&quot; to em" time="0.018">
    </testcase>
    <testcase classname="text-formatting input rules em rule should convert &quot;*^hello*&quot; to em" name="text-formatting input rules em rule should convert &quot;*^hello*&quot; to em" time="0.014">
    </testcase>
    <testcase classname="text-formatting input rules em rule should not convert &quot;_text_ to em when node does not support text formatting" name="text-formatting input rules em rule should not convert &quot;_text_ to em when node does not support text formatting" time="0.005">
    </testcase>
    <testcase classname="text-formatting input rules strike rule should convert &quot;~~text~~&quot; to strike" name="text-formatting input rules strike rule should convert &quot;~~text~~&quot; to strike" time="0.008">
    </testcase>
    <testcase classname="text-formatting input rules strike rule should not convert &quot;~~text~~&quot; to strike" name="text-formatting input rules strike rule should not convert &quot;~~text~~&quot; to strike" time="0.016">
    </testcase>
    <testcase classname="text-formatting input rules strike rule should not convert &quot;~~text~~&quot; to strike inside a code_block" name="text-formatting input rules strike rule should not convert &quot;~~text~~&quot; to strike inside a code_block" time="0.007">
    </testcase>
    <testcase classname="text-formatting input rules strike rule should not be inclusive right after autoformatting conversion" name="text-formatting input rules strike rule should not be inclusive right after autoformatting conversion" time="0.017">
    </testcase>
    <testcase classname="text-formatting input rules strike rule should not convert &quot;`~~text~~&quot; to strike" name="text-formatting input rules strike rule should not convert &quot;`~~text~~&quot; to strike" time="0.013">
    </testcase>
    <testcase classname="text-formatting input rules strike rule should not convert &quot;`some~~texts~~&quot; to strike" name="text-formatting input rules strike rule should not convert &quot;`some~~texts~~&quot; to strike" time="0.039">
    </testcase>
    <testcase classname="text-formatting input rules strike rule should convert &quot;some~~texts~~&quot; to strike" name="text-formatting input rules strike rule should convert &quot;some~~texts~~&quot; to strike" time="0.014">
    </testcase>
    <testcase classname="text-formatting input rules strike rule should convert &quot;~~^hello~~&quot; to strike" name="text-formatting input rules strike rule should convert &quot;~~^hello~~&quot; to strike" time="0.013">
    </testcase>
    <testcase classname="text-formatting input rules strike rule should not convert &quot;~~text~~ to strike when node does not support text formatting" name="text-formatting input rules strike rule should not convert &quot;~~text~~ to strike when node does not support text formatting" time="0.013">
    </testcase>
    <testcase classname="text-formatting input rules code rule should convert &quot;`t`&quot; to code text" name="text-formatting input rules code rule should convert &quot;`t`&quot; to code text" time="0.007">
    </testcase>
    <testcase classname="text-formatting input rules code rule should convert &quot;`text`&quot; to code text" name="text-formatting input rules code rule should convert &quot;`text`&quot; to code text" time="0.011">
    </testcase>
    <testcase classname="text-formatting input rules code rule should not convert &quot;` text`&quot; to code text" name="text-formatting input rules code rule should not convert &quot;` text`&quot; to code text" time="0.018">
    </testcase>
    <testcase classname="text-formatting input rules code rule should convert &quot;some`texts`&quot; to code" name="text-formatting input rules code rule should convert &quot;some`texts`&quot; to code" time="0.019">
    </testcase>
    <testcase classname="text-formatting input rules code rule should convert mention to plaint text" name="text-formatting input rules code rule should convert mention to plaint text" time="0.018">
    </testcase>
    <testcase classname="text-formatting input rules code rule should cleanup other formatting" name="text-formatting input rules code rule should cleanup other formatting" time="0.012">
    </testcase>
    <testcase classname="text-formatting input rules code rule should not convert &quot;`text`&quot; to code text inside a code_block" name="text-formatting input rules code rule should not convert &quot;`text`&quot; to code text inside a code_block" time="0.018">
    </testcase>
    <testcase classname="text-formatting input rules code rule should not be inclusive right after autoformatting conversion" name="text-formatting input rules code rule should not be inclusive right after autoformatting conversion" time="0.018">
    </testcase>
    <testcase classname="text-formatting input rules code rule should convert &quot;`^hello`&quot; to code" name="text-formatting input rules code rule should convert &quot;`^hello`&quot; to code" time="0.018">
    </testcase>
    <testcase classname="text-formatting input rules code rule should not convert &quot;`text`&quot; to code when node does not support text formatting" name="text-formatting input rules code rule should not convert &quot;`text`&quot; to code when node does not support text formatting" time="0.013">
    </testcase>
    <testcase classname="text-formatting input rules nested rules should work without code-mark in the schema" name="text-formatting input rules nested rules should work without code-mark in the schema" time="0.017">
    </testcase>
    <testcase classname="text-formatting input rules nested rules should convert &quot;*`text`*&quot; to italic code text" name="text-formatting input rules nested rules should convert &quot;*`text`*&quot; to italic code text" time="0.018">
    </testcase>
    <testcase classname="text-formatting input rules nested rules should convert &quot;___text___&quot; to italic strong" name="text-formatting input rules nested rules should convert &quot;___text___&quot; to italic strong" time="0.019">
    </testcase>
    <testcase classname="text-formatting input rules nested rules should not convert &quot; __world__&quot; to strong if I insert a space afterwards" name="text-formatting input rules nested rules should not convert &quot; __world__&quot; to strong if I insert a space afterwards" time="0.011">
    </testcase>
    <testcase classname="text-formatting input rules nested rules should convert &quot;~~**text**~~&quot; to strike strong" name="text-formatting input rules nested rules should convert &quot;~~**text**~~&quot; to strike strong" time="0.554">
    </testcase>
  </testsuite>
  <testsuite name="JIRATransformer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:25" time="4.167" tests="27">
    <testcase classname="JIRATransformer lists parses HTML: bullet list" name="JIRATransformer lists parses HTML: bullet list" time="0.03">
    </testcase>
    <testcase classname="JIRATransformer lists encodes HTML: bullet list" name="JIRATransformer lists encodes HTML: bullet list" time="0.01">
    </testcase>
    <testcase classname="JIRATransformer lists round-trips HTML: bullet list" name="JIRATransformer lists round-trips HTML: bullet list" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer lists parses HTML: ordered list" name="JIRATransformer lists parses HTML: ordered list" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer lists encodes HTML: ordered list" name="JIRATransformer lists encodes HTML: ordered list" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer lists round-trips HTML: ordered list" name="JIRATransformer lists round-trips HTML: ordered list" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer lists parses HTML: bullet list with strong" name="JIRATransformer lists parses HTML: bullet list with strong" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer lists encodes HTML: bullet list with strong" name="JIRATransformer lists encodes HTML: bullet list with strong" time="0.006">
    </testcase>
    <testcase classname="JIRATransformer lists round-trips HTML: bullet list with strong" name="JIRATransformer lists round-trips HTML: bullet list with strong" time="0.008">
    </testcase>
    <testcase classname="JIRATransformer lists parses HTML: ordered list with strong" name="JIRATransformer lists parses HTML: ordered list with strong" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer lists encodes HTML: ordered list with strong" name="JIRATransformer lists encodes HTML: ordered list with strong" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer lists round-trips HTML: ordered list with strong" name="JIRATransformer lists round-trips HTML: ordered list with strong" time="0.005">
    </testcase>
    <testcase classname="JIRATransformer lists parses HTML: nested unordered list with no text content" name="JIRATransformer lists parses HTML: nested unordered list with no text content" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer lists encodes HTML: nested unordered list with no text content" name="JIRATransformer lists encodes HTML: nested unordered list with no text content" time="0.011">
    </testcase>
    <testcase classname="JIRATransformer lists round-trips HTML: nested unordered list with no text content" name="JIRATransformer lists round-trips HTML: nested unordered list with no text content" time="0.008">
    </testcase>
    <testcase classname="JIRATransformer lists parses HTML: nested ordered list with no text content" name="JIRATransformer lists parses HTML: nested ordered list with no text content" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer lists encodes HTML: nested ordered list with no text content" name="JIRATransformer lists encodes HTML: nested ordered list with no text content" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer lists round-trips HTML: nested ordered list with no text content" name="JIRATransformer lists round-trips HTML: nested ordered list with no text content" time="0.007">
    </testcase>
    <testcase classname="JIRATransformer lists parses HTML: nested ordered list" name="JIRATransformer lists parses HTML: nested ordered list" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer lists encodes HTML: nested ordered list" name="JIRATransformer lists encodes HTML: nested ordered list" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer lists round-trips HTML: nested ordered list" name="JIRATransformer lists round-trips HTML: nested ordered list" time="0.006">
    </testcase>
    <testcase classname="JIRATransformer lists parses HTML: nested bullet list" name="JIRATransformer lists parses HTML: nested bullet list" time="0.006">
    </testcase>
    <testcase classname="JIRATransformer lists encodes HTML: nested bullet list" name="JIRATransformer lists encodes HTML: nested bullet list" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer lists round-trips HTML: nested bullet list" name="JIRATransformer lists round-trips HTML: nested bullet list" time="0.008">
    </testcase>
    <testcase classname="JIRATransformer lists parses HTML: nested mixed list" name="JIRATransformer lists parses HTML: nested mixed list" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer lists encodes HTML: nested mixed list" name="JIRATransformer lists encodes HTML: nested mixed list" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer lists round-trips HTML: nested mixed list" name="JIRATransformer lists round-trips HTML: nested mixed list" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="FieldTextAreaStateless" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:30" time="1.329" tests="20">
    <testcase classname="FieldTextAreaStateless defaults" name="FieldTextAreaStateless defaults" time="0.014">
    </testcase>
    <testcase classname="FieldTextAreaStateless properties compact prop should reflect its value to the FieldBase" name="FieldTextAreaStateless properties compact prop should reflect its value to the FieldBase" time="0.002">
    </testcase>
    <testcase classname="FieldTextAreaStateless properties disabled prop should reflect its value to the FieldBase" name="FieldTextAreaStateless properties disabled prop should reflect its value to the FieldBase" time="0.002">
    </testcase>
    <testcase classname="FieldTextAreaStateless properties isReadOnly prop set to true should sets its value on the input" name="FieldTextAreaStateless properties isReadOnly prop set to true should sets its value on the input" time="0.082">
    </testcase>
    <testcase classname="FieldTextAreaStateless properties isReadOnly prop set to true should reflect its value to the FieldBase" name="FieldTextAreaStateless properties isReadOnly prop set to true should reflect its value to the FieldBase" time="0.026">
    </testcase>
    <testcase classname="FieldTextAreaStateless properties isReadOnly prop set to false should sets its value on the input" name="FieldTextAreaStateless properties isReadOnly prop set to false should sets its value on the input" time="0.031">
    </testcase>
    <testcase classname="FieldTextAreaStateless properties isReadOnly prop set to false should reflect its value to the FieldBase" name="FieldTextAreaStateless properties isReadOnly prop set to false should reflect its value to the FieldBase" time="0.017">
    </testcase>
    <testcase classname="FieldTextAreaStateless properties required prop should reflect its value to the FieldBase" name="FieldTextAreaStateless properties required prop should reflect its value to the FieldBase" time="0.002">
    </testcase>
    <testcase classname="FieldTextAreaStateless properties isInvalid prop should reflect its value to the FieldBase" name="FieldTextAreaStateless properties isInvalid prop should reflect its value to the FieldBase" time="0.001">
    </testcase>
    <testcase classname="FieldTextAreaStateless properties spellCheck prop should render an input with a spellCheck prop" name="FieldTextAreaStateless properties spellCheck prop should render an input with a spellCheck prop" time="0.002">
    </testcase>
    <testcase classname="FieldTextAreaStateless properties invalidMessage prop should reflect its value to the FieldBase" name="FieldTextAreaStateless properties invalidMessage prop should reflect its value to the FieldBase" time="0.001">
    </testcase>
    <testcase classname="FieldTextAreaStateless properties {&quot;disabled&quot;:true} TextArea should have attribute defined" name="FieldTextAreaStateless properties {&quot;disabled&quot;:true} TextArea should have attribute defined" time="0.001">
    </testcase>
    <testcase classname="FieldTextAreaStateless properties {&quot;name&quot;:&quot;test&quot;} TextArea should have attribute defined" name="FieldTextAreaStateless properties {&quot;name&quot;:&quot;test&quot;} TextArea should have attribute defined" time="0.007">
    </testcase>
    <testcase classname="FieldTextAreaStateless properties {&quot;placeholder&quot;:&quot;test placeholder&quot;} TextArea should have attribute defined" name="FieldTextAreaStateless properties {&quot;placeholder&quot;:&quot;test placeholder&quot;} TextArea should have attribute defined" time="0.001">
    </testcase>
    <testcase classname="FieldTextAreaStateless properties {&quot;maxLength&quot;:5} TextArea should have attribute defined" name="FieldTextAreaStateless properties {&quot;maxLength&quot;:5} TextArea should have attribute defined" time="0.003">
    </testcase>
    <testcase classname="FieldTextAreaStateless properties {&quot;required&quot;:true} TextArea should have attribute defined" name="FieldTextAreaStateless properties {&quot;required&quot;:true} TextArea should have attribute defined" time="0.188">
    </testcase>
    <testcase classname="FieldTextAreaStateless properties TextArea should have value=&quot;something&quot;" name="FieldTextAreaStateless properties TextArea should have value=&quot;something&quot;" time="0.002">
    </testcase>
    <testcase classname="FieldTextAreaStateless properties onChange should be called when input value changes" name="FieldTextAreaStateless properties onChange should be called when input value changes" time="0.038">
    </testcase>
    <testcase classname="FieldTextAreaStateless FieldTextArea should call onChange when input value changes" name="FieldTextAreaStateless FieldTextArea should call onChange when input value changes" time="0.063">
    </testcase>
    <testcase classname="FieldTextAreaStateless FieldTextArea input focus should get focus when focus() is called" name="FieldTextAreaStateless FieldTextArea input focus should get focus when focus() is called" time="0.033">
    </testcase>
  </testsuite>
  <testsuite name="ToolbarMention" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:31" time="3.994" tests="4">
    <testcase classname="ToolbarMention should create a mentionQuery by clicking on the ToolbarMention icon" name="ToolbarMention should create a mentionQuery by clicking on the ToolbarMention icon" time="0.123">
    </testcase>
    <testcase classname="ToolbarMention should return null if EditorWidth is less then BreakPoint5" name="ToolbarMention should return null if EditorWidth is less then BreakPoint5" time="0.007">
    </testcase>
    <testcase classname="ToolbarMention should have spacing of ToolbarButton set to default if editorWidth is present" name="ToolbarMention should have spacing of ToolbarButton set to default if editorWidth is present" time="0.031">
    </testcase>
    <testcase classname="ToolbarMention analytics should trigger analyticsService.trackEvent when mention icon is clicked" name="ToolbarMention analytics should trigger analyticsService.trackEvent when mention icon is clicked" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="JSON schema" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:26" time="10.021" tests="1">
    <testcase classname="JSON schema should be backwards compatible" name="JSON schema should be backwards compatible" time="1.533">
    </testcase>
  </testsuite>
  <testsuite name="Renderer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:28" time="8.7" tests="5">
    <testcase classname="Renderer renderDocument should call getValidDocument" name="Renderer renderDocument should call getValidDocument" time="3.039">
    </testcase>
    <testcase classname="Renderer renderDocument should call schema.nodeFromJSON" name="Renderer renderDocument should call schema.nodeFromJSON" time="0.003">
    </testcase>
    <testcase classname="Renderer renderDocument should call serializer.serializeFragment" name="Renderer renderDocument should call serializer.serializeFragment" time="0.003">
    </testcase>
    <testcase classname="Renderer renderDocument should return result and stat fields" name="Renderer renderDocument should return result and stat fields" time="0">
    </testcase>
    <testcase classname="Renderer renderDocument should return null if document is invalid" name="Renderer renderDocument should return null if document is invalid" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="editRemoteImage action creator" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:36" time="1.997" tests="1">
    <testcase classname="editRemoteImage action creator should create action with item and collection name" name="editRemoteImage action creator should create action with item and collection name" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="ascii emojis - input rules" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:37" time="2.435" tests="20">
    <testcase classname="ascii emojis - input rules when an emoticon is preceded by a space character and starting with a colon character should replace a matching emoticon when followed by a space" name="ascii emojis - input rules when an emoticon is preceded by a space character and starting with a colon character should replace a matching emoticon when followed by a space" time="0.024">
    </testcase>
    <testcase classname="ascii emojis - input rules when an emoticon is preceded by a space character and starting with a colon character should not replace a matching emoticon if not followed by a space" name="ascii emojis - input rules when an emoticon is preceded by a space character and starting with a colon character should not replace a matching emoticon if not followed by a space" time="0.005">
    </testcase>
    <testcase classname="ascii emojis - input rules when an emoticon is preceded by a space character and not starting with a colon character should replace a matching emoticon" name="ascii emojis - input rules when an emoticon is preceded by a space character and not starting with a colon character should replace a matching emoticon" time="0.004">
    </testcase>
    <testcase classname="ascii emojis - input rules when an emoticon is preceded by a space character and not starting with a colon character should replace a matching emoticon even when containing a colon" name="ascii emojis - input rules when an emoticon is preceded by a space character and not starting with a colon character should replace a matching emoticon even when containing a colon" time="0.005">
    </testcase>
    <testcase classname="ascii emojis - input rules when an emoticon is preceded by a space character in unsupported content should not replace a matching emoticon in an unsupported node" name="ascii emojis - input rules when an emoticon is preceded by a space character in unsupported content should not replace a matching emoticon in an unsupported node" time="0.007">
    </testcase>
    <testcase classname="ascii emojis - input rules when an emoticon is preceded by a space character in unsupported content should not replace an emoticon in an unsupported mark" name="ascii emojis - input rules when an emoticon is preceded by a space character in unsupported content should not replace an emoticon in an unsupported mark" time="0.004">
    </testcase>
    <testcase classname="ascii emojis - input rules when preceded by a tab character should replace a matching emoticon" name="ascii emojis - input rules when preceded by a tab character should replace a matching emoticon" time="0.003">
    </testcase>
    <testcase classname="ascii emojis - input rules when starting at the beginning of a line and starting with a colon character should replace a matching emoticon if followed by a space" name="ascii emojis - input rules when starting at the beginning of a line and starting with a colon character should replace a matching emoticon if followed by a space" time="0.002">
    </testcase>
    <testcase classname="ascii emojis - input rules when starting at the beginning of a line and starting with a colon character should not replace a matching emoticon if not followed by a space" name="ascii emojis - input rules when starting at the beginning of a line and starting with a colon character should not replace a matching emoticon if not followed by a space" time="0.002">
    </testcase>
    <testcase classname="ascii emojis - input rules when starting at the beginning of a line and not starting with a colon character should replace a matching emoticon" name="ascii emojis - input rules when starting at the beginning of a line and not starting with a colon character should replace a matching emoticon" time="0.004">
    </testcase>
    <testcase classname="ascii emojis - input rules when preceded by a hard break should replace a matching emoticon" name="ascii emojis - input rules when preceded by a hard break should replace a matching emoticon" time="0.004">
    </testcase>
    <testcase classname="ascii emojis - input rules when preceded by another emoji should replace a matching emoticon starting with a colon" name="ascii emojis - input rules when preceded by another emoji should replace a matching emoticon starting with a colon" time="0.004">
    </testcase>
    <testcase classname="ascii emojis - input rules when preceded by another emoji should replace a matching emoticon not starting with a colon" name="ascii emojis - input rules when preceded by another emoji should replace a matching emoticon not starting with a colon" time="0.002">
    </testcase>
    <testcase classname="ascii emojis - input rules when preceded by an opening round bracket should replace a matching emoticon starting with a colon" name="ascii emojis - input rules when preceded by an opening round bracket should replace a matching emoticon starting with a colon" time="0.008">
    </testcase>
    <testcase classname="ascii emojis - input rules when preceded by an opening round bracket should replace the thumbsup emoticon" name="ascii emojis - input rules when preceded by an opening round bracket should replace the thumbsup emoticon" time="0.005">
    </testcase>
    <testcase classname="ascii emojis - input rules when preceded by an opening round bracket should replace a matching emoticon ending with a closing rounded bracket" name="ascii emojis - input rules when preceded by an opening round bracket should replace a matching emoticon ending with a closing rounded bracket" time="0.004">
    </testcase>
    <testcase classname="ascii emojis - input rules when preceded by non-whitespace character should not replace a matching emoticon starting with a colon" name="ascii emojis - input rules when preceded by non-whitespace character should not replace a matching emoticon starting with a colon" time="0.011">
    </testcase>
    <testcase classname="ascii emojis - input rules when preceded by non-whitespace character should not replace a matching emoticon not starting with a colon" name="ascii emojis - input rules when preceded by non-whitespace character should not replace a matching emoticon not starting with a colon" time="0.004">
    </testcase>
    <testcase classname="ascii emojis - input rules when there is already an emojiQuery mark it should replace a matching emoticon starting with a colon" name="ascii emojis - input rules when there is already an emojiQuery mark it should replace a matching emoticon starting with a colon" time="0.006">
    </testcase>
    <testcase classname="ascii emojis - input rules recording emoji usage it should record usage when an emoticon is matched" name="ascii emojis - input rules recording emoji usage it should record usage when an emoticon is matched" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="importFiles middleware" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:36" time="4.202" tests="13">
    <testcase classname="importFiles middleware should call next dispatch if action is START_IMPORT" name="importFiles middleware should call next dispatch if action is START_IMPORT" time="0.02">
    </testcase>
    <testcase classname="importFiles middleware should call next dispatch even if action is not START_IMPORT" name="importFiles middleware should call next dispatch even if action is not START_IMPORT" time="0.004">
    </testcase>
    <testcase classname="importFiles middleware when START_IMPORT action supplied should emit uploads-start event back to container for all selected items" name="importFiles middleware when START_IMPORT action supplied should emit uploads-start event back to container for all selected items" time="0.003">
    </testcase>
    <testcase classname="importFiles middleware when START_IMPORT action supplied should close popup" name="importFiles middleware when START_IMPORT action supplied should close popup" time="0.001">
    </testcase>
    <testcase classname="importFiles middleware when START_IMPORT action supplied each selected and recent file should dispatch GET_PREVIEW action" name="importFiles middleware when START_IMPORT action supplied each selected and recent file should dispatch GET_PREVIEW action" time="0.001">
    </testcase>
    <testcase classname="importFiles middleware when START_IMPORT action supplied each selected and locally uploaded file should dispatch FINALIZE_UPLOAD action" name="importFiles middleware when START_IMPORT action supplied each selected and locally uploaded file should dispatch FINALIZE_UPLOAD action" time="0.005">
    </testcase>
    <testcase classname="importFiles middleware when START_IMPORT action supplied each selected and locally uploaded file should bobble up some events" name="importFiles middleware when START_IMPORT action supplied each selected and locally uploaded file should bobble up some events" time="0.004">
    </testcase>
    <testcase classname="importFiles middleware when START_IMPORT action supplied each selected and locally uploaded file should not bobble up other events" name="importFiles middleware when START_IMPORT action supplied each selected and locally uploaded file should not bobble up other events" time="0.002">
    </testcase>
    <testcase classname="importFiles middleware when START_IMPORT action supplied each selected and locally uploaded file should dispatch SET_EVENT_PROXY action" name="importFiles middleware when START_IMPORT action supplied each selected and locally uploaded file should dispatch SET_EVENT_PROXY action" time="0.003">
    </testcase>
    <testcase classname="importFiles middleware when START_IMPORT action supplied each selected and remote file should initiate the import with a websocket message" name="importFiles middleware when START_IMPORT action supplied each selected and remote file should initiate the import with a websocket message" time="0.002">
    </testcase>
    <testcase classname="importFiles middleware isRemoteService should return true for service name &quot;dropbox&quot;" name="importFiles middleware isRemoteService should return true for service name &quot;dropbox&quot;" time="0.001">
    </testcase>
    <testcase classname="importFiles middleware isRemoteService should return true for service name &quot;google&quot;" name="importFiles middleware isRemoteService should return true for service name &quot;google&quot;" time="0">
    </testcase>
    <testcase classname="importFiles middleware isRemoteService should return false for service name other than &quot;dropbox&quot; or &quot;google&quot;" name="importFiles middleware isRemoteService should return false for service name other than &quot;dropbox&quot; or &quot;google&quot;" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/datetime-picker" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:38" time="2.821" tests="10">
    <testcase classname="@atlaskit/datetime-picker DatePicker renders a DatePickerStateless" name="@atlaskit/datetime-picker DatePicker renders a DatePickerStateless" time="0.012">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DatePicker calls onChange when the input is blurred and the content is valid" name="@atlaskit/datetime-picker DatePicker calls onChange when the input is blurred and the content is valid" time="0.177">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DatePicker does not call onChange when the input is blurred and the content is invalid" name="@atlaskit/datetime-picker DatePicker does not call onChange when the input is blurred and the content is invalid" time="0.069">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DatePicker updates the displayValue when the input value is changed" name="@atlaskit/datetime-picker DatePicker updates the displayValue when the input value is changed" time="0.065">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DatePicker opens the dialog when triggered by the field" name="@atlaskit/datetime-picker DatePicker opens the dialog when triggered by the field" time="0.009">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DatePicker closes the dialog when triggered by the dialog" name="@atlaskit/datetime-picker DatePicker closes the dialog when triggered by the dialog" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DatePicker closes the dialog when the icon is clicked and the dialog is open" name="@atlaskit/datetime-picker DatePicker closes the dialog when the icon is clicked and the dialog is open" time="0.035">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DatePicker opens the dialog when the icon is clicked and the dialog is closed" name="@atlaskit/datetime-picker DatePicker opens the dialog when the icon is clicked and the dialog is closed" time="0.016">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DatePicker closes the dialog when it loses focus" name="@atlaskit/datetime-picker DatePicker closes the dialog when it loses focus" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DatePicker calls onChange when a calendar date is selected, closes the dialog, and updates the values" name="@atlaskit/datetime-picker DatePicker calls onChange when a calendar date is selected, closes the dialog, and updates the values" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:41" time="2.829" tests="2">
    <testcase classname="@atlaskit/editor-core Plugins -&gt; Media should not have mediaSingle node by default" name="@atlaskit/editor-core Plugins -&gt; Media should not have mediaSingle node by default" time="0.011">
    </testcase>
    <testcase classname="@atlaskit/editor-core Plugins -&gt; Media should have mediaSingle node when allowMediaSingle is true" name="@atlaskit/editor-core Plugins -&gt; Media should have mediaSingle node when allowMediaSingle is true" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="ToolbarMedia" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:41" time="2.759" tests="2">
    <testcase classname="ToolbarMedia should have spacing of toolbar button set to default if EditorWidth is provided" name="ToolbarMedia should have spacing of toolbar button set to default if EditorWidth is provided" time="0.094">
    </testcase>
    <testcase classname="ToolbarMedia should return null if EditorWidth is less then BreakPoint6" name="ToolbarMedia should return null if EditorWidth is less then BreakPoint6" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="inputrules" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:40" time="4.441" tests="2">
    <testcase classname="inputrules image rule should convert `![text](url)` to image" name="inputrules image rule should convert `![text](url)` to image" time="0.096">
    </testcase>
    <testcase classname="inputrules image rule should not convert `![text](url)` to image inside a code_block" name="inputrules image rule should not convert `![text](url)` to image inside a code_block" time="0.066">
    </testcase>
  </testsuite>
  <testsuite name="Spinner" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:44" time="2.801" tests="18">
    <testcase classname="Spinner should be possible to create a component" name="Spinner should be possible to create a component" time="0.082">
    </testcase>
    <testcase classname="Spinner should be active by default" name="Spinner should be active by default" time="0.03">
    </testcase>
    <testcase classname="Spinner should not use the inverted color scheme by default" name="Spinner should not use the inverted color scheme by default" time="0.056">
    </testcase>
    <testcase classname="Spinner should start in the DELAY phase by default" name="Spinner should start in the DELAY phase by default" time="0.053">
    </testcase>
    <testcase classname="Spinner should leave the DELAY state after some time" name="Spinner should leave the DELAY state after some time" time="0.413">
    </testcase>
    <testcase classname="Spinner delay prop should be reflected to the DELAY phase animation" name="Spinner delay prop should be reflected to the DELAY phase animation" time="0.029">
    </testcase>
    <testcase classname="Spinner isCompleting prop should add a spinner container when not set" name="Spinner isCompleting prop should add a spinner container when not set" time="0.044">
    </testcase>
    <testcase classname="Spinner isCompleting prop should remove the spinner container when set to true" name="Spinner isCompleting prop should remove the spinner container when set to true" time="0.009">
    </testcase>
    <testcase classname="Spinner onComplete prop should be called after isCompleting prop is set" name="Spinner onComplete prop should be called after isCompleting prop is set" time="0.08">
    </testcase>
    <testcase classname="Spinner onComplete prop should not be called if isCompleting is not set" name="Spinner onComplete prop should not be called if isCompleting is not set" time="0.054">
    </testcase>
    <testcase classname="Spinner size prop should render tee-shirt sizes with the proper heights/widths" name="Spinner size prop should render tee-shirt sizes with the proper heights/widths" time="0.113">
    </testcase>
    <testcase classname="Spinner size prop should render the spinner with a custom size" name="Spinner size prop should render the spinner with a custom size" time="0.024">
    </testcase>
    <testcase classname="Spinner size prop should render the spinner with the default size if an unsupported value is provided" name="Spinner size prop should render the spinner with the default size if an unsupported value is provided" time="0.03">
    </testcase>
    <testcase classname="Spinner invertColor prop should set the invertColor prop on Svg when set to true" name="Spinner invertColor prop should set the invertColor prop on Svg when set to true" time="0.03">
    </testcase>
    <testcase classname="Spinner invertColor prop should be colors.N500 by default" name="Spinner invertColor prop should be colors.N500 by default" time="0.001">
    </testcase>
    <testcase classname="Spinner invertColor prop should be colors.N0 when set to true" name="Spinner invertColor prop should be colors.N0 when set to true" time="0">
    </testcase>
    <testcase classname="Spinner svg should have expected svg stroke keys" name="Spinner svg should have expected svg stroke keys" time="0.136">
    </testcase>
    <testcase classname="Spinner svg should have strokeDashoffset in px with no space before" name="Spinner svg should have strokeDashoffset in px with no space before" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/datetime-picker" errors="0" failures="0" skipped="1" timestamp="2018-01-09T09:38:46" time="1.761" tests="8">
    <testcase classname="@atlaskit/datetime-picker TimePicker renders a TimePickerStateless" name="@atlaskit/datetime-picker TimePicker renders a TimePickerStateless" time="0.01">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker TimePicker calls onChange when the input is blurred and the content is valid" name="@atlaskit/datetime-picker TimePicker calls onChange when the input is blurred and the content is valid" time="0.145">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker TimePicker does not call onChange when the input is blurred and the content is invalid" name="@atlaskit/datetime-picker TimePicker does not call onChange when the input is blurred and the content is invalid" time="0.095">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker TimePicker updates the displayValue when the input value is changed" name="@atlaskit/datetime-picker TimePicker updates the displayValue when the input value is changed" time="0.126">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker TimePicker opens the dialog when triggered by the field" name="@atlaskit/datetime-picker TimePicker opens the dialog when triggered by the field" time="0.012">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker TimePicker closes the dialog when triggered by the dialog" name="@atlaskit/datetime-picker TimePicker closes the dialog when triggered by the dialog" time="0.006">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker TimePicker closes the dialog when the input loses focus" name="@atlaskit/datetime-picker TimePicker closes the dialog when the input loses focus" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@atlaskit/datetime-picker TimePicker calls onChange when a time is selected from the dropdown, closes the dropdown, and updates the values" name="@atlaskit/datetime-picker TimePicker calls onChange when a time is selected from the dropdown, closes the dropdown, and updates the values" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="media - keymaps" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:48" time="3.479" tests="4">
    <testcase classname="media - keymaps Mod-z keypress does not detect links" name="media - keymaps Mod-z keypress does not detect links" time="0.081">
    </testcase>
    <testcase classname="media - keymaps Backspace keypress calls media plugin state to remove media node" name="media - keymaps Backspace keypress calls media plugin state to remove media node" time="0.019">
    </testcase>
    <testcase classname="media - keymaps Enter keypress splits media group" name="media - keymaps Enter keypress splits media group" time="0.02">
    </testcase>
    <testcase classname="media - keymaps Shift-Enter keypress splits media group" name="media - keymaps Shift-Enter keypress splits media group" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core ui/PanelEdit" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:45" time="8.242" tests="11">
    <testcase classname="@atlaskit/editor-core ui/PanelEdit should return null if state variable toolbarVisible is false" name="@atlaskit/editor-core ui/PanelEdit should return null if state variable toolbarVisible is false" time="0.052">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelEdit should not return null if state variable toolbarVisible is true" name="@atlaskit/editor-core ui/PanelEdit should not return null if state variable toolbarVisible is true" time="0.026">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelEdit should have 5 buttons in it" name="@atlaskit/editor-core ui/PanelEdit should have 5 buttons in it" time="0.019">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelEdit should set toolbarVisible to true when panel is clicked" name="@atlaskit/editor-core ui/PanelEdit should set toolbarVisible to true when panel is clicked" time="0.221">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelEdit should set toolbarVisible to false when panel is blur" name="@atlaskit/editor-core ui/PanelEdit should set toolbarVisible to false when panel is blur" time="0.02">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelEdit should continue toolbarVisible to true when panelType is changed" name="@atlaskit/editor-core ui/PanelEdit should continue toolbarVisible to true when panelType is changed" time="0.137">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelEdit should set toolbarVisible to false when panel is removed" name="@atlaskit/editor-core ui/PanelEdit should set toolbarVisible to false when panel is removed" time="0.026">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelEdit analytics should trigger analyticsService.trackEvent when info button is clicked" name="@atlaskit/editor-core ui/PanelEdit analytics should trigger analyticsService.trackEvent when info button is clicked" time="0.115">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelEdit analytics should trigger analyticsService.trackEvent when note button is clicked" name="@atlaskit/editor-core ui/PanelEdit analytics should trigger analyticsService.trackEvent when note button is clicked" time="0.123">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelEdit analytics should trigger analyticsService.trackEvent when tip button is clicked" name="@atlaskit/editor-core ui/PanelEdit analytics should trigger analyticsService.trackEvent when tip button is clicked" time="0.135">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/PanelEdit analytics should trigger analyticsService.trackEvent when warning button is clicked" name="@atlaskit/editor-core ui/PanelEdit analytics should trigger analyticsService.trackEvent when warning button is clicked" time="0.296">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/src/editor/ui/ToolbarHelp" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:52" time="2.805" tests="2">
    <testcase classname="@atlaskit/editor-core/src/editor/ui/ToolbarHelp should have spacing of toolbar button set to none if editorWidth is less then BreakPoint10" name="@atlaskit/editor-core/src/editor/ui/ToolbarHelp should have spacing of toolbar button set to none if editorWidth is less then BreakPoint10" time="0.056">
    </testcase>
    <testcase classname="@atlaskit/editor-core/src/editor/ui/ToolbarHelp should have spacing of toolbar button set to default if editorWidth is greater then BreakPoint10" name="@atlaskit/editor-core/src/editor/ui/ToolbarHelp should have spacing of toolbar button set to default if editorWidth is greater then BreakPoint10" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="Tag component" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:54" time="2.196" tests="25">
    <testcase classname="Tag component Test Tag with removable link" name="Tag component Test Tag with removable link" time="0.061">
    </testcase>
    <testcase classname="Tag component Tag with href renders when it has focus (AK-3953)" name="Tag component Tag with href renders when it has focus (AK-3953)" time="0.109">
    </testcase>
    <testcase classname="Tag component onBeforeRemoveAction callback contract" name="Tag component onBeforeRemoveAction callback contract" time="0.015">
    </testcase>
    <testcase classname="Tag component onAfterRemoveAction callback contract" name="Tag component onAfterRemoveAction callback contract" time="0.029">
    </testcase>
    <testcase classname="Tag component onAfterRemoveAction should not be called if onBeforeRemoveAction returns false" name="Tag component onAfterRemoveAction should not be called if onBeforeRemoveAction returns false" time="0.014">
    </testcase>
    <testcase classname="Tag component set markedForRemoval via mouse events on remove button" name="Tag component set markedForRemoval via mouse events on remove button" time="0.02">
    </testcase>
    <testcase classname="Tag component remove via keypress on remove button" name="Tag component remove via keypress on remove button" time="0.017">
    </testcase>
    <testcase classname="Tag component Tag allows us to set props" name="Tag component Tag allows us to set props" time="0.015">
    </testcase>
    <testcase classname="Tag component appearance prop should set the isRounded prop of Chrome and Remove to true when set to &quot;rounded&quot;" name="Tag component appearance prop should set the isRounded prop of Chrome and Remove to true when set to &quot;rounded&quot;" time="0.025">
    </testcase>
    <testcase classname="Tag component appearance prop should set the isRounded prop of Chrome and Remove to false when not set to &quot;rounded&quot;" name="Tag component appearance prop should set the isRounded prop of Chrome and Remove to false when not set to &quot;rounded&quot;" time="0.009">
    </testcase>
    <testcase classname="Tag component elemBefore prop should render anything passed to it" name="Tag component elemBefore prop should render anything passed to it" time="0.013">
    </testcase>
    <testcase classname="Tag component elemBefore prop should render the elemBefore before the content" name="Tag component elemBefore prop should render the elemBefore before the content" time="0.008">
    </testcase>
    <testcase classname="Tag component text prop should render text to a Content block" name="Tag component text prop should render text to a Content block" time="0.008">
    </testcase>
    <testcase classname="Tag component href prop should cause an anchor to be rendered" name="Tag component href prop should cause an anchor to be rendered" time="0.005">
    </testcase>
    <testcase classname="Tag component href prop should reflect the href onto the anchor" name="Tag component href prop should reflect the href onto the anchor" time="0.014">
    </testcase>
    <testcase classname="Tag component href prop should set the isLink prop on Chrome" name="Tag component href prop should set the isLink prop on Chrome" time="0.008">
    </testcase>
    <testcase classname="Tag component removeButtonText prop should not render a button if not set" name="Tag component removeButtonText prop should not render a button if not set" time="0.007">
    </testcase>
    <testcase classname="Tag component removeButtonText prop should render a button if set" name="Tag component removeButtonText prop should render a button if set" time="0.009">
    </testcase>
    <testcase classname="Tag component removeButtonText prop should set the removeText prop of button if set" name="Tag component removeButtonText prop should set the removeText prop of button if set" time="0.011">
    </testcase>
    <testcase classname="Tag component onBeforeRemoveAction prop should be called if button is clicked" name="Tag component onBeforeRemoveAction prop should be called if button is clicked" time="0.009">
    </testcase>
    <testcase classname="Tag component onAfterRemoveAction prop should be called after remove animation is completed" name="Tag component onAfterRemoveAction prop should be called after remove animation is completed" time="0.023">
    </testcase>
    <testcase classname="Tag component onAfterRemoveAction prop should not be called if onBeforeRemoveAction returns false" name="Tag component onAfterRemoveAction prop should not be called if onBeforeRemoveAction returns false" time="0.017">
    </testcase>
    <testcase classname="Tag component color prop should render with a color option" name="Tag component color prop should render with a color option" time="0.008">
    </testcase>
    <testcase classname="Tag component color prop should render the standard color option if no color option is provided" name="Tag component color prop should render the standard color option if no color option is provided" time="0.006">
    </testcase>
    <testcase classname="Tag component color prop should render the standard color option if missing color option is provided" name="Tag component color prop should render the standard color option if missing color option is provided" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="ToolbarImage" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:55" time="1.981" tests="3">
    <testcase classname="ToolbarImage when plugin is enabled sets disabled to false" name="ToolbarImage when plugin is enabled sets disabled to false" time="0.066">
    </testcase>
    <testcase classname="ToolbarImage when plugin is not enabled sets disabled to true" name="ToolbarImage when plugin is not enabled sets disabled to true" time="0.027">
    </testcase>
    <testcase classname="ToolbarImage analytics should trigger analyticsService.trackEvent" name="ToolbarImage analytics should trigger analyticsService.trackEvent" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="lists" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:48" time="9.245" tests="54">
    <testcase classname="lists keymap when hit enter should split list item" name="lists keymap when hit enter should split list item" time="0.021">
    </testcase>
    <testcase classname="lists keymap when hit Tab should call indent analytics event" name="lists keymap when hit Tab should call indent analytics event" time="0.005">
    </testcase>
    <testcase classname="lists keymap when hit Shift-Tab should call outdent analytics event" name="lists keymap when hit Shift-Tab should call outdent analytics event" time="0.007">
    </testcase>
    <testcase classname="lists API should allow a change handler to be attached" name="lists API should allow a change handler to be attached" time="0.005">
    </testcase>
    <testcase classname="lists API should emit a change when the selected node becomes an ordered list" name="lists API should emit a change when the selected node becomes an ordered list" time="0.013">
    </testcase>
    <testcase classname="lists API should not emit extra change events when moving within an ordered list" name="lists API should not emit extra change events when moving within an ordered list" time="0.003">
    </testcase>
    <testcase classname="lists API should not emit extra change events when moving within an ordered list to the last character" name="lists API should not emit extra change events when moving within an ordered list to the last character" time="0.003">
    </testcase>
    <testcase classname="lists API should emit change events when the state has changed" name="lists API should emit change events when the state has changed" time="0.026">
    </testcase>
    <testcase classname="lists API should emit change events when the state has changed with entire word selected" name="lists API should emit change events when the state has changed with entire word selected" time="0.008">
    </testcase>
    <testcase classname="lists API should allow toggling between normal text and ordered list" name="lists API should allow toggling between normal text and ordered list" time="0.004">
    </testcase>
    <testcase classname="lists API should allow toggling between normal text and bullet list" name="lists API should allow toggling between normal text and bullet list" time="0.007">
    </testcase>
    <testcase classname="lists API should allow toggling between ordered and bullet list" name="lists API should allow toggling between ordered and bullet list" time="0.017">
    </testcase>
    <testcase classname="lists API should make sure that it is enabled when selecting ordered list" name="lists API should make sure that it is enabled when selecting ordered list" time="0.006">
    </testcase>
    <testcase classname="lists API should be disabled when selecting h1" name="lists API should be disabled when selecting h1" time="0.008">
    </testcase>
    <testcase classname="lists API untoggling a list should allow untoggling part of a list based on selection" name="lists API untoggling a list should allow untoggling part of a list based on selection" time="0.007">
    </testcase>
    <testcase classname="lists API untoggling a list should untoggle empty paragraphs in a list" name="lists API untoggling a list should untoggle empty paragraphs in a list" time="0.007">
    </testcase>
    <testcase classname="lists API untoggling a list should untoggle all list items with different ancestors in selection" name="lists API untoggling a list should untoggle all list items with different ancestors in selection" time="0.006">
    </testcase>
    <testcase classname="lists API converting a list should allow converting part of a list based on selection" name="lists API converting a list should allow converting part of a list based on selection" time="0.015">
    </testcase>
    <testcase classname="lists API converting a list should convert selection inside panel to list" name="lists API converting a list should convert selection inside panel to list" time="0.03">
    </testcase>
    <testcase classname="lists API converting a list should allow converting part of a list based on selection that starts at the end of previous line" name="lists API converting a list should allow converting part of a list based on selection that starts at the end of previous line" time="0.005">
    </testcase>
    <testcase classname="lists API converting a list should convert selection to a list when the selection starts with a paragraph and ends inside a list" name="lists API converting a list should convert selection to a list when the selection starts with a paragraph and ends inside a list" time="0.013">
    </testcase>
    <testcase classname="lists API converting a list should convert selection to a list when the selection contains a list but starts and end with paragraphs" name="lists API converting a list should convert selection to a list when the selection contains a list but starts and end with paragraphs" time="0.006">
    </testcase>
    <testcase classname="lists API converting a list should convert selection to a list when the selection starts inside a list and ends with a paragraph" name="lists API converting a list should convert selection to a list when the selection starts inside a list and ends with a paragraph" time="0.008">
    </testcase>
    <testcase classname="lists API converting a list should convert selection to a list and keep empty paragraphs" name="lists API converting a list should convert selection to a list and keep empty paragraphs" time="0.007">
    </testcase>
    <testcase classname="lists API converting a list should convert selection to list when there is an empty paragraph between non empty two" name="lists API converting a list should convert selection to list when there is an empty paragraph between non empty two" time="0.006">
    </testcase>
    <testcase classname="lists API joining lists should join with previous list if it&apos;s of the same type" name="lists API joining lists should join with previous list if it&apos;s of the same type" time="0.006">
    </testcase>
    <testcase classname="lists API joining lists should join with previous list if it&apos;s of the same type and selection starts at the end of previous line" name="lists API joining lists should join with previous list if it&apos;s of the same type and selection starts at the end of previous line" time="0.023">
    </testcase>
    <testcase classname="lists API joining lists should not join with previous list if it&apos;s not of the same type" name="lists API joining lists should not join with previous list if it&apos;s not of the same type" time="0.006">
    </testcase>
    <testcase classname="lists API joining lists should not join with previous list if it&apos;s not of the same type and selection starts at the end of previous line" name="lists API joining lists should not join with previous list if it&apos;s not of the same type and selection starts at the end of previous line" time="0.008">
    </testcase>
    <testcase classname="lists API joining lists should join with next list if it&apos;s of the same type" name="lists API joining lists should join with next list if it&apos;s of the same type" time="0.008">
    </testcase>
    <testcase classname="lists API joining lists should join with next list if it&apos;s of the same type and selection starts at the end of previous line" name="lists API joining lists should join with next list if it&apos;s of the same type and selection starts at the end of previous line" time="0.006">
    </testcase>
    <testcase classname="lists API joining lists should not join with next list if it isn&apos;t of the same type" name="lists API joining lists should not join with next list if it isn&apos;t of the same type" time="0.006">
    </testcase>
    <testcase classname="lists API joining lists should not join with next list if it isn&apos;t of the same type and selection starts at the end of previous line" name="lists API joining lists should not join with next list if it isn&apos;t of the same type and selection starts at the end of previous line" time="0.025">
    </testcase>
    <testcase classname="lists API joining lists should join with previous and next list if they&apos;re of the same type" name="lists API joining lists should join with previous and next list if they&apos;re of the same type" time="0.019">
    </testcase>
    <testcase classname="lists API joining lists should join with previous and next list if they&apos;re of the same type and selection starts at the end of previous line" name="lists API joining lists should join with previous and next list if they&apos;re of the same type and selection starts at the end of previous line" time="0.005">
    </testcase>
    <testcase classname="lists API joining lists should not join with previous and next list if they&apos;re not of the same type" name="lists API joining lists should not join with previous and next list if they&apos;re not of the same type" time="0.009">
    </testcase>
    <testcase classname="lists API joining lists should not join with previous and next list if they&apos;re not of the same type and selectoin starts at the end of previous line" name="lists API joining lists should not join with previous and next list if they&apos;re not of the same type and selectoin starts at the end of previous line" time="0.011">
    </testcase>
    <testcase classname="lists API Nested Lists should increase the depth of list item when Tab key press" name="lists API Nested Lists should increase the depth of list item when Tab key press" time="0.005">
    </testcase>
    <testcase classname="lists API Nested Lists should nest the list item when Tab key press" name="lists API Nested Lists should nest the list item when Tab key press" time="0.007">
    </testcase>
    <testcase classname="lists API Nested Lists should decrease the depth of list item when Shift-Tab key press" name="lists API Nested Lists should decrease the depth of list item when Shift-Tab key press" time="0.006">
    </testcase>
    <testcase classname="lists API Nested Lists should lift the list item when Shift-Tab key press" name="lists API Nested Lists should lift the list item when Shift-Tab key press" time="0.005">
    </testcase>
    <testcase classname="lists API Nested Lists should lift the list item when Enter key press is done on empty list-item" name="lists API Nested Lists should lift the list item when Enter key press is done on empty list-item" time="0.006">
    </testcase>
    <testcase classname="lists API Enter key-press when Enter key is pressed on empty nested list item should create new list item in parent list" name="lists API Enter key-press when Enter key is pressed on empty nested list item should create new list item in parent list" time="0.006">
    </testcase>
    <testcase classname="lists API Enter key-press when Enter key is pressed on non-empty nested list item should created new nested list item" name="lists API Enter key-press when Enter key is pressed on non-empty nested list item should created new nested list item" time="0.006">
    </testcase>
    <testcase classname="lists API Enter key-press when Enter key is pressed on non-empty top level list item should created new list item at top level" name="lists API Enter key-press when Enter key is pressed on non-empty top level list item should created new list item at top level" time="0.004">
    </testcase>
    <testcase classname="lists API Enter key-press when Enter key is pressed on non-empty top level list item inside panel should created new list item at top level" name="lists API Enter key-press when Enter key is pressed on non-empty top level list item inside panel should created new list item at top level" time="0.012">
    </testcase>
    <testcase classname="lists API Enter key-press when Enter key is pressed on empty top level list item should create new paragraph outside the list" name="lists API Enter key-press when Enter key is pressed on empty top level list item should create new paragraph outside the list" time="0.007">
    </testcase>
    <testcase classname="lists API Enter key-press when Enter key is pressed on empty top level list item inside panel should create new paragraph outside the list" name="lists API Enter key-press when Enter key is pressed on empty top level list item inside panel should create new paragraph outside the list" time="0.011">
    </testcase>
    <testcase classname="lists API Toggle - nested list scenarios - to lift items out of list should be possible to toggle a simple nested list" name="lists API Toggle - nested list scenarios - to lift items out of list should be possible to toggle a simple nested list" time="0.006">
    </testcase>
    <testcase classname="lists API Toggle - nested list scenarios - to lift items out of list should be possible to toggle an empty nested list item" name="lists API Toggle - nested list scenarios - to lift items out of list should be possible to toggle an empty nested list item" time="0.005">
    </testcase>
    <testcase classname="lists API Toggle - nested list scenarios - to lift items out of list should be possible to toggle a selection across different depths in the list" name="lists API Toggle - nested list scenarios - to lift items out of list should be possible to toggle a selection across different depths in the list" time="0.007">
    </testcase>
    <testcase classname="lists API Toggle - nested list scenarios - to lift items out of list should be possible to toggle a selection across lists with different parent lists" name="lists API Toggle - nested list scenarios - to lift items out of list should be possible to toggle a selection across lists with different parent lists" time="0.009">
    </testcase>
    <testcase classname="lists API Toggle - nested list scenarios - to lift items out of list should be create a new list for children of lifted list item" name="lists API Toggle - nested list scenarios - to lift items out of list should be create a new list for children of lifted list item" time="0.006">
    </testcase>
    <testcase classname="lists API Toggle - nested list scenarios - to lift items out of list should only change type to bullet list when toggling orderedList to bulletList" name="lists API Toggle - nested list scenarios - to lift items out of list should only change type to bullet list when toggling orderedList to bulletList" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:56" time="2.854" tests="1">
    <testcase classname="@atlaskit/editor-core &lt;Editor /&gt; should call destroy() on plugin states when it gets unmounted" name="@atlaskit/editor-core &lt;Editor /&gt; should call destroy() on plugin states when it gets unmounted" time="0.183">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:58" time="1.536" tests="3">
    <testcase classname="@atlaskit/editor-core Plugins -&gt; Mentions should be defined" name="@atlaskit/editor-core Plugins -&gt; Mentions should be defined" time="0.009">
    </testcase>
    <testcase classname="@atlaskit/editor-core Plugins -&gt; Mentions should have primaryToolbarComponent" name="@atlaskit/editor-core Plugins -&gt; Mentions should have primaryToolbarComponent" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-core Plugins -&gt; Mentions should have secondaryToolbarComponent" name="@atlaskit/editor-core Plugins -&gt; Mentions should have secondaryToolbarComponent" time="0">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/dynamic-table" errors="0" failures="0" skipped="1" timestamp="2018-01-09T09:39:00" time="1.516" tests="21">
    <testcase classname="@atlaskit/dynamic-table stateless should render TableHead when items length is 0 and not render EmptyViewContainer if emptyView prop is ommitted" name="@atlaskit/dynamic-table stateless should render TableHead when items length is 0 and not render EmptyViewContainer if emptyView prop is ommitted" time="0.101">
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateless should not render any text in the table when rows prop is an empty array" name="@atlaskit/dynamic-table stateless should not render any text in the table when rows prop is an empty array" time="0.011">
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateless should render TableHead when items length is 0 and render EmptyViewContainer if emptyView prop is provided" name="@atlaskit/dynamic-table stateless should render TableHead when items length is 0 and render EmptyViewContainer if emptyView prop is provided" time="0.013">
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateless should not render TableHead if head prop is not provided and should render EmptyViewContainer if emptyView prop is provided" name="@atlaskit/dynamic-table stateless should not render TableHead if head prop is not provided and should render EmptyViewContainer if emptyView prop is provided" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateless should render head, emptyView and caption if provided" name="@atlaskit/dynamic-table stateless should render head, emptyView and caption if provided" time="0.014">
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateless should display paginated data" name="@atlaskit/dynamic-table stateless should display paginated data" time="0.059">
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateless should display sorted data" name="@atlaskit/dynamic-table stateless should display sorted data" time="0.024">
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateless should pass down extra props" name="@atlaskit/dynamic-table stateless should pass down extra props" time="0.041">
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateless loading mode with rows should render a loading container with a large spinner when there is more than 2 rows" name="@atlaskit/dynamic-table stateless loading mode with rows should render a loading container with a large spinner when there is more than 2 rows" time="0.121">
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateless loading mode with rows should render a loading container with a proper loading flag" name="@atlaskit/dynamic-table stateless loading mode with rows should render a loading container with a proper loading flag" time="0.022">
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateless loading mode with rows should override the spinner size on demand" name="@atlaskit/dynamic-table stateless loading mode with rows should override the spinner size on demand" time="0.05">
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateless loading mode with rows should pass a proper target ref" name="@atlaskit/dynamic-table stateless loading mode with rows should pass a proper target ref" time="0.035">
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateless loading mode with rows should not render a loading container for the empty view" name="@atlaskit/dynamic-table stateless loading mode with rows should not render a loading container for the empty view" time="0.037">
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateless loading mode without rows (empty) should render a blank view of a fixed height when the empty view is defined" name="@atlaskit/dynamic-table stateless loading mode without rows (empty) should render a blank view of a fixed height when the empty view is defined" time="0.023">
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateless loading mode without rows (empty) should render a blank view of a fixed height when the empty view is not defined" name="@atlaskit/dynamic-table stateless loading mode without rows (empty) should render a blank view of a fixed height when the empty view is not defined" time="0.031">
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateless loading mode without rows (empty) should render a loading container with proper props" name="@atlaskit/dynamic-table stateless loading mode without rows (empty) should render a loading container with proper props" time="0.015">
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateless loading mode without rows (empty) should keep the loading mode of the table&apos;s loading container disabled" name="@atlaskit/dynamic-table stateless loading mode without rows (empty) should keep the loading mode of the table&apos;s loading container disabled" time="0.016">
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateless should invoke callbacks onSort &amp; onSetPage" name="@atlaskit/dynamic-table stateless should invoke callbacks onSort &amp; onSetPage" time="0.027">
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateless should invoke callbacks onSetPage" name="@atlaskit/dynamic-table stateless should invoke callbacks onSetPage" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateful should display paginated data after navigating to a different page" name="@atlaskit/dynamic-table stateful should display paginated data after navigating to a different page" time="0.064">
    </testcase>
    <testcase classname="@atlaskit/dynamic-table stateful should sort data" name="@atlaskit/dynamic-table stateful should sort data" time="0.098">
    </testcase>
  </testsuite>
  <testsuite name="tasks and decisions - commands" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:59" time="2.44" tests="5">
    <testcase classname="tasks and decisions - commands changeToTaskDecision can convert paragraph node to action/decision" name="tasks and decisions - commands changeToTaskDecision can convert paragraph node to action/decision" time="0.113">
    </testcase>
    <testcase classname="tasks and decisions - commands changeToTaskDecision can convert decision item to action" name="tasks and decisions - commands changeToTaskDecision can convert decision item to action" time="0.033">
    </testcase>
    <testcase classname="tasks and decisions - commands changeToTaskDecision can convert action item to decision" name="tasks and decisions - commands changeToTaskDecision can convert action item to decision" time="0.025">
    </testcase>
    <testcase classname="tasks and decisions - commands changeToTaskDecision can convert blockquote to action/decision" name="tasks and decisions - commands changeToTaskDecision can convert blockquote to action/decision" time="0.01">
    </testcase>
    <testcase classname="tasks and decisions - commands changeToTaskDecision cannot convert media node to action/decision" name="tasks and decisions - commands changeToTaskDecision cannot convert media node to action/decision" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="inputrules" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:38:58" time="3.727" tests="2">
    <testcase classname="inputrules codeblock rule when node is not convertable to code block should not convert &quot;```&quot; to a code block	" name="inputrules codeblock rule when node is not convertable to code block should not convert &quot;```&quot; to a code block	" time="0.01">
    </testcase>
    <testcase classname="inputrules codeblock rule when node is convertable to code block when converted node has no content should not convert &quot;```&quot; to a code block	" name="inputrules codeblock rule when node is convertable to code block when converted node has no content should not convert &quot;```&quot; to a code block	" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="hyperlink - keymap" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:01" time="2.14" tests="9">
    <testcase classname="hyperlink - keymap Enter keypress when possible link text is at the end when it does not contain a link converts possible link text to hyperlink" name="hyperlink - keymap Enter keypress when possible link text is at the end when it does not contain a link converts possible link text to hyperlink" time="0.057">
    </testcase>
    <testcase classname="hyperlink - keymap Enter keypress when possible link text is at the end when it does not contain a link converts possible mailto link text to hyperlink" name="hyperlink - keymap Enter keypress when possible link text is at the end when it does not contain a link converts possible mailto link text to hyperlink" time="0.024">
    </testcase>
    <testcase classname="hyperlink - keymap Enter keypress when possible link text is at the end when it does not contain a link preserves other mark" name="hyperlink - keymap Enter keypress when possible link text is at the end when it does not contain a link preserves other mark" time="0.012">
    </testcase>
    <testcase classname="hyperlink - keymap Enter keypress when possible link text is at the end when it already contains a link does not convert to hyperlink" name="hyperlink - keymap Enter keypress when possible link text is at the end when it already contains a link does not convert to hyperlink" time="0.007">
    </testcase>
    <testcase classname="hyperlink - keymap Enter keypress when there is no possible link text at the end does not create new link" name="hyperlink - keymap Enter keypress when there is no possible link text at the end does not create new link" time="0.003">
    </testcase>
    <testcase classname="hyperlink - keymap Shift-Enter keypress converts possible link text to hyperlink" name="hyperlink - keymap Shift-Enter keypress converts possible link text to hyperlink" time="0.003">
    </testcase>
    <testcase classname="hyperlink - keymap Cmd-k keypress should open floating toolbar for non-message editor" name="hyperlink - keymap Cmd-k keypress should open floating toolbar for non-message editor" time="0.104">
    </testcase>
    <testcase classname="hyperlink - keymap Cmd-k keypress should not work for message editor" name="hyperlink - keymap Cmd-k keypress should not work for message editor" time="0.006">
    </testcase>
    <testcase classname="hyperlink - keymap Cmd-k keypress should not open floating toolbar if incompatible mark is selected" name="hyperlink - keymap Cmd-k keypress should not open floating toolbar if incompatible mark is selected" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="block-type" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:02" time="2.124" tests="37">
    <testcase classname="block-type should be able to change to normal" name="block-type should be able to change to normal" time="0.008">
    </testcase>
    <testcase classname="block-type should be able to change to heading1" name="block-type should be able to change to heading1" time="0.006">
    </testcase>
    <testcase classname="block-type should be able to change to heading2" name="block-type should be able to change to heading2" time="0.002">
    </testcase>
    <testcase classname="block-type should be able to change to heading3" name="block-type should be able to change to heading3" time="0.004">
    </testcase>
    <testcase classname="block-type should be able to change to heading4" name="block-type should be able to change to heading4" time="0.003">
    </testcase>
    <testcase classname="block-type should be able to change to heading5" name="block-type should be able to change to heading5" time="0.006">
    </testcase>
    <testcase classname="block-type should be able to change to block quote" name="block-type should be able to change to block quote" time="0.008">
    </testcase>
    <testcase classname="block-type when rendering a block quote should not be selectable" name="block-type when rendering a block quote should not be selectable" time="0.003">
    </testcase>
    <testcase classname="block-type code block should be able to insert code block" name="block-type code block should be able to insert code block" time="0.008">
    </testcase>
    <testcase classname="block-type should be able to identify normal" name="block-type should be able to identify normal" time="0.002">
    </testcase>
    <testcase classname="block-type should have all of the present blocks type panel, blockQuote, codeBlock in availableWrapperBlockTypes" name="block-type should have all of the present blocks type panel, blockQuote, codeBlock in availableWrapperBlockTypes" time="0.013">
    </testcase>
    <testcase classname="block-type should be able to identify normal even if there are multiple blocks" name="block-type should be able to identify normal even if there are multiple blocks" time="0.005">
    </testcase>
    <testcase classname="block-type should set currentBlockType to Other if there are blocks of multiple types" name="block-type should set currentBlockType to Other if there are blocks of multiple types" time="0.002">
    </testcase>
    <testcase classname="block-type should be able to identify heading1" name="block-type should be able to identify heading1" time="0.002">
    </testcase>
    <testcase classname="block-type should be able to identify heading2" name="block-type should be able to identify heading2" time="0.004">
    </testcase>
    <testcase classname="block-type should be able to identify heading3" name="block-type should be able to identify heading3" time="0.003">
    </testcase>
    <testcase classname="block-type should be able to change to back to paragraph and then change to blockquote" name="block-type should be able to change to back to paragraph and then change to blockquote" time="0.009">
    </testcase>
    <testcase classname="block-type should not be able to change to the same block type" name="block-type should not be able to change to the same block type" time="0.002">
    </testcase>
    <testcase classname="block-type should be able to change block types when selecting two nodes" name="block-type should be able to change block types when selecting two nodes" time="0.005">
    </testcase>
    <testcase classname="block-type should be able to change multiple paragraphs into one blockquote" name="block-type should be able to change multiple paragraphs into one blockquote" time="0.007">
    </testcase>
    <testcase classname="block-type should change state when selecting different block types" name="block-type should change state when selecting different block types" time="0.01">
    </testcase>
    <testcase classname="block-type should get current state immediately once subscribed" name="block-type should get current state immediately once subscribed" time="0.004">
    </testcase>
    <testcase classname="block-type should be able to subscribe the changes" name="block-type should be able to subscribe the changes" time="0.004">
    </testcase>
    <testcase classname="block-type toggleBlockType when origin block type is different with target block type converts to target block type" name="block-type toggleBlockType when origin block type is different with target block type converts to target block type" time="0.002">
    </testcase>
    <testcase classname="block-type toggleBlockType when origin block type is the same as target block type converts to a paragraph" name="block-type toggleBlockType when origin block type is the same as target block type converts to a paragraph" time="0.003">
    </testcase>
    <testcase classname="block-type insertBlockType should be able to insert panel" name="block-type insertBlockType should be able to insert panel" time="0.008">
    </testcase>
    <testcase classname="block-type insertBlockType should wrap current selection in panel if possible" name="block-type insertBlockType should wrap current selection in panel if possible" time="0.008">
    </testcase>
    <testcase classname="block-type insertBlockType should be able to insert panel after current selection if current selection can not be wrapper in panel" name="block-type insertBlockType should be able to insert panel after current selection if current selection can not be wrapper in panel" time="0.007">
    </testcase>
    <testcase classname="block-type insertBlockType should be able to insert blockquote" name="block-type insertBlockType should be able to insert blockquote" time="0.004">
    </testcase>
    <testcase classname="block-type insertBlockType should wrap current selection in blockquote if possible" name="block-type insertBlockType should wrap current selection in blockquote if possible" time="0.004">
    </testcase>
    <testcase classname="block-type insertBlockType should be able to insert blockquote after current selection if current selection can not be wrapper in blockquote" name="block-type insertBlockType should be able to insert blockquote after current selection if current selection can not be wrapper in blockquote" time="0.006">
    </testcase>
    <testcase classname="block-type insertBlockType should be able to insert codeblock" name="block-type insertBlockType should be able to insert codeblock" time="0.004">
    </testcase>
    <testcase classname="block-type insertBlockType should insert code block after selection if selected block has text" name="block-type insertBlockType should insert code block after selection if selected block has text" time="0.006">
    </testcase>
    <testcase classname="block-type blockTypesDisabled should be false if current selection has no wrapper" name="block-type blockTypesDisabled should be false if current selection has no wrapper" time="0.003">
    </testcase>
    <testcase classname="block-type blockTypesDisabled should be false if current selection is wrapped in panel" name="block-type blockTypesDisabled should be false if current selection is wrapped in panel" time="0.028">
    </testcase>
    <testcase classname="block-type blockTypesDisabled should be true if current selection is wrapped in blockquote" name="block-type blockTypesDisabled should be true if current selection is wrapped in blockquote" time="0.005">
    </testcase>
    <testcase classname="block-type blockTypesDisabled should be true if current selection is wrapped in codeblock" name="block-type blockTypesDisabled should be true if current selection is wrapped in codeblock" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="tasks and decisions - input rules" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:02" time="2.555" tests="14">
    <testcase classname="tasks and decisions - input rules decisions should replace &quot;&lt;&gt; &quot; with a decisionList" name="tasks and decisions - input rules decisions should replace &quot;&lt;&gt; &quot; with a decisionList" time="0.038">
    </testcase>
    <testcase classname="tasks and decisions - input rules decisions should replace &quot;&lt;&gt; &quot; with a decisionList inside table header" name="tasks and decisions - input rules decisions should replace &quot;&lt;&gt; &quot; with a decisionList inside table header" time="0.024">
    </testcase>
    <testcase classname="tasks and decisions - input rules decisions should replace &quot;&lt;&gt; &quot; with a decisionList inside table cell" name="tasks and decisions - input rules decisions should replace &quot;&lt;&gt; &quot; with a decisionList inside table cell" time="0.017">
    </testcase>
    <testcase classname="tasks and decisions - input rules decisions should not replace &quot;&lt;&gt; &quot; after shift+enter with a decisionList inside table cell" name="tasks and decisions - input rules decisions should not replace &quot;&lt;&gt; &quot; after shift+enter with a decisionList inside table cell" time="0.008">
    </testcase>
    <testcase classname="tasks and decisions - input rules decisions should preserve existing content on row when converting" name="tasks and decisions - input rules decisions should preserve existing content on row when converting" time="0.016">
    </testcase>
    <testcase classname="tasks and decisions - input rules decisions should split on hardBreak and preserve content when converting" name="tasks and decisions - input rules decisions should split on hardBreak and preserve content when converting" time="0.013">
    </testcase>
    <testcase classname="tasks and decisions - input rules decisions should not create decisionList inside nested blocks" name="tasks and decisions - input rules decisions should not create decisionList inside nested blocks" time="0.006">
    </testcase>
    <testcase classname="tasks and decisions - input rules tasks should replace &quot;[] &quot; with a taskList" name="tasks and decisions - input rules tasks should replace &quot;[] &quot; with a taskList" time="0.033">
    </testcase>
    <testcase classname="tasks and decisions - input rules tasks should preserve existing content on row when converting" name="tasks and decisions - input rules tasks should preserve existing content on row when converting" time="0.018">
    </testcase>
    <testcase classname="tasks and decisions - input rules tasks should split on hardBreak and preserve content when converting" name="tasks and decisions - input rules tasks should split on hardBreak and preserve content when converting" time="0.018">
    </testcase>
    <testcase classname="tasks and decisions - input rules tasks should replace &quot;[] &quot; with a taskList inside table header" name="tasks and decisions - input rules tasks should replace &quot;[] &quot; with a taskList inside table header" time="0.022">
    </testcase>
    <testcase classname="tasks and decisions - input rules tasks should replace &quot;[] &quot; with a taskList inside table cell" name="tasks and decisions - input rules tasks should replace &quot;[] &quot; with a taskList inside table cell" time="0.024">
    </testcase>
    <testcase classname="tasks and decisions - input rules tasks should not replace &quot;[] &quot; after shift+enter with a taskList inside table cell" name="tasks and decisions - input rules tasks should not replace &quot;[] &quot; after shift+enter with a taskList inside table cell" time="0.008">
    </testcase>
    <testcase classname="tasks and decisions - input rules tasks should not create taskList inside nested blocks" name="tasks and decisions - input rules tasks should not create taskList inside nested blocks" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="text-formatting" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:04" time="1.794" tests="42">
    <testcase classname="text-formatting keymap when not on a mac when hits Ctrl-B toggles bold mark" name="text-formatting keymap when not on a mac when hits Ctrl-B toggles bold mark" time="0.022">
    </testcase>
    <testcase classname="text-formatting keymap when not on a mac when hits Ctrl-B toggles italic mark" name="text-formatting keymap when not on a mac when hits Ctrl-B toggles italic mark" time="0.014">
    </testcase>
    <testcase classname="text-formatting keymap when not on a mac when hits Ctrl-B toggles underline mark" name="text-formatting keymap when not on a mac when hits Ctrl-B toggles underline mark" time="0.007">
    </testcase>
    <testcase classname="text-formatting keymap when not on a mac when hits Shift-Ctrl-S toggles strikethrough mark" name="text-formatting keymap when not on a mac when hits Shift-Ctrl-S toggles strikethrough mark" time="0.005">
    </testcase>
    <testcase classname="text-formatting keymap when not on a mac when hits Shift-Ctrl-M toggles code mark" name="text-formatting keymap when not on a mac when hits Shift-Ctrl-M toggles code mark" time="0.007">
    </testcase>
    <testcase classname="text-formatting keymap code rule should convert when &quot;``&quot; is entered followed by a character in it" name="text-formatting keymap code rule should convert when &quot;``&quot; is entered followed by a character in it" time="0.008">
    </testcase>
    <testcase classname="text-formatting should allow a change handler to be attached" name="text-formatting should allow a change handler to be attached" time="0.003">
    </testcase>
    <testcase classname="text-formatting em should be able to toggle em on a character" name="text-formatting em should be able to toggle em on a character" time="0.005">
    </testcase>
    <testcase classname="text-formatting em should expose whether em is active on an empty selection" name="text-formatting em should expose whether em is active on an empty selection" time="0.006">
    </testcase>
    <testcase classname="text-formatting em should expose whether em is active on a text selection" name="text-formatting em should expose whether em is active on a text selection" time="0.003">
    </testcase>
    <testcase classname="text-formatting em exposes em as disabled when the mark cannot be applied" name="text-formatting em exposes em as disabled when the mark cannot be applied" time="0.003">
    </testcase>
    <testcase classname="text-formatting em exposes em as not disabled when the mark can be applied" name="text-formatting em exposes em as not disabled when the mark can be applied" time="0.003">
    </testcase>
    <testcase classname="text-formatting strong should be able to toggle strong on a character" name="text-formatting strong should be able to toggle strong on a character" time="0.005">
    </testcase>
    <testcase classname="text-formatting strong should expose whether strong is active on an empty selection" name="text-formatting strong should expose whether strong is active on an empty selection" time="0.003">
    </testcase>
    <testcase classname="text-formatting strong should expose whether strong is active on a text selection" name="text-formatting strong should expose whether strong is active on a text selection" time="0.013">
    </testcase>
    <testcase classname="text-formatting strong exposes strong as disabled when the mark cannot be applied" name="text-formatting strong exposes strong as disabled when the mark cannot be applied" time="0.001">
    </testcase>
    <testcase classname="text-formatting strong exposes strong as not disabled when the mark can be applied" name="text-formatting strong exposes strong as not disabled when the mark can be applied" time="0.004">
    </testcase>
    <testcase classname="text-formatting underline should be able to toggle underline on a character" name="text-formatting underline should be able to toggle underline on a character" time="0.006">
    </testcase>
    <testcase classname="text-formatting underline should expose whether underline is active on an empty selection" name="text-formatting underline should expose whether underline is active on an empty selection" time="0.003">
    </testcase>
    <testcase classname="text-formatting underline should expose whether underline is active on a text selection" name="text-formatting underline should expose whether underline is active on a text selection" time="0.003">
    </testcase>
    <testcase classname="text-formatting underline exposes underline as disabled when the mark cannot be applied" name="text-formatting underline exposes underline as disabled when the mark cannot be applied" time="0.002">
    </testcase>
    <testcase classname="text-formatting underline exposes underline as not disabled when the mark can be applied" name="text-formatting underline exposes underline as not disabled when the mark can be applied" time="0.002">
    </testcase>
    <testcase classname="text-formatting strike should be able to toggle strike on a character" name="text-formatting strike should be able to toggle strike on a character" time="0.004">
    </testcase>
    <testcase classname="text-formatting strike should expose whether strike is active on an empty selection" name="text-formatting strike should expose whether strike is active on an empty selection" time="0.005">
    </testcase>
    <testcase classname="text-formatting strike should expose whether strike is active on a text selection" name="text-formatting strike should expose whether strike is active on a text selection" time="0.005">
    </testcase>
    <testcase classname="text-formatting strike exposes strike as disabled when the mark cannot be applied" name="text-formatting strike exposes strike as disabled when the mark cannot be applied" time="0.004">
    </testcase>
    <testcase classname="text-formatting strike exposes strike as not disabled when the mark can be applied" name="text-formatting strike exposes strike as not disabled when the mark can be applied" time="0.005">
    </testcase>
    <testcase classname="text-formatting subscript should be able to toggle subscript on a character" name="text-formatting subscript should be able to toggle subscript on a character" time="0.006">
    </testcase>
    <testcase classname="text-formatting subscript should expose whether subcript is active on an empty selection" name="text-formatting subscript should expose whether subcript is active on an empty selection" time="0.004">
    </testcase>
    <testcase classname="text-formatting subscript should expose whether subcript is active on a text selection" name="text-formatting subscript should expose whether subcript is active on a text selection" time="0.005">
    </testcase>
    <testcase classname="text-formatting subscript exposes subcript as disabled when the mark cannot be applied" name="text-formatting subscript exposes subcript as disabled when the mark cannot be applied" time="0.004">
    </testcase>
    <testcase classname="text-formatting subscript exposes subcript as not disabled when the mark can be applied" name="text-formatting subscript exposes subcript as not disabled when the mark can be applied" time="0.003">
    </testcase>
    <testcase classname="text-formatting subscript deactives superscript after toggling subscript for an empty selection" name="text-formatting subscript deactives superscript after toggling subscript for an empty selection" time="0.006">
    </testcase>
    <testcase classname="text-formatting subscript deactives superscript after toggling subscript for selected text" name="text-formatting subscript deactives superscript after toggling subscript for selected text" time="0.004">
    </testcase>
    <testcase classname="text-formatting superscript should be able to toggle superscript on a character" name="text-formatting superscript should be able to toggle superscript on a character" time="0.004">
    </testcase>
    <testcase classname="text-formatting superscript should expose whether superscript is active on an empty selection" name="text-formatting superscript should expose whether superscript is active on an empty selection" time="0.004">
    </testcase>
    <testcase classname="text-formatting superscript should expose whether superscript is active on a text selection" name="text-formatting superscript should expose whether superscript is active on a text selection" time="0.005">
    </testcase>
    <testcase classname="text-formatting superscript exposes superscript as disabled when the mark cannot be applied" name="text-formatting superscript exposes superscript as disabled when the mark cannot be applied" time="0.004">
    </testcase>
    <testcase classname="text-formatting superscript exposes superscript as not disabled when the mark can be applied" name="text-formatting superscript exposes superscript as not disabled when the mark can be applied" time="0.002">
    </testcase>
    <testcase classname="text-formatting superscript deactives subscript after toggling superscript for an empty selection" name="text-formatting superscript deactives subscript after toggling superscript for an empty selection" time="0.005">
    </testcase>
    <testcase classname="text-formatting superscript deactives subscript after toggling superscript for selected text" name="text-formatting superscript deactives subscript after toggling superscript for selected text" time="0.006">
    </testcase>
    <testcase classname="text-formatting superscript deactives strong, em, strike after toggling code for selected text" name="text-formatting superscript deactives strong, em, strike after toggling code for selected text" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="MediaPickerPopup" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:05" time="1.425" tests="7">
    <testcase classname="MediaPickerPopup constructor fires the media picker popup loaded event " name="MediaPickerPopup constructor fires the media picker popup loaded event " time="0.054">
    </testcase>
    <testcase classname="MediaPickerPopup constructor sets uploadParams to the default when none are supplied" name="MediaPickerPopup constructor sets uploadParams to the default when none are supplied" time="0.007">
    </testcase>
    <testcase classname="MediaPickerPopup constructor merges uploadParams with the defaults when they are supplied" name="MediaPickerPopup constructor merges uploadParams with the defaults when they are supplied" time="0.007">
    </testcase>
    <testcase classname="MediaPickerPopup setUploadParams updates collection uploadParam when it is supplied" name="MediaPickerPopup setUploadParams updates collection uploadParam when it is supplied" time="0.007">
    </testcase>
    <testcase classname="MediaPickerPopup setUploadParams updates fetchMetadata uploadParam when it is supplied" name="MediaPickerPopup setUploadParams updates fetchMetadata uploadParam when it is supplied" time="0.005">
    </testcase>
    <testcase classname="MediaPickerPopup setUploadParams updates autoFinalize uploadParam when it is supplied" name="MediaPickerPopup setUploadParams updates autoFinalize uploadParam when it is supplied" time="0.009">
    </testcase>
    <testcase classname="MediaPickerPopup hide fires a closed event when the popup is hidden" name="MediaPickerPopup hide fires a closed event when the popup is hidden" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:05" time="2.302" tests="6">
    <testcase classname="@atlaskit/editor-core CollapsedEditor should not render the editor when isExpanded is false" name="@atlaskit/editor-core CollapsedEditor should not render the editor when isExpanded is false" time="0.028">
    </testcase>
    <testcase classname="@atlaskit/editor-core CollapsedEditor should render the editor when isExpanded is true" name="@atlaskit/editor-core CollapsedEditor should render the editor when isExpanded is true" time="0.133">
    </testcase>
    <testcase classname="@atlaskit/editor-core CollapsedEditor should call onFocus when collapsed editor is clicked" name="@atlaskit/editor-core CollapsedEditor should call onFocus when collapsed editor is clicked" time="0.006">
    </testcase>
    <testcase classname="@atlaskit/editor-core CollapsedEditor should not call onExpand when the editor is initially expanded" name="@atlaskit/editor-core CollapsedEditor should not call onExpand when the editor is initially expanded" time="0.023">
    </testcase>
    <testcase classname="@atlaskit/editor-core CollapsedEditor should call onExpand after the editor is expanded and mounted" name="@atlaskit/editor-core CollapsedEditor should call onExpand after the editor is expanded and mounted" time="0.017">
    </testcase>
    <testcase classname="@atlaskit/editor-core CollapsedEditor should allow setting a ref on the editor component" name="@atlaskit/editor-core CollapsedEditor should allow setting a ref on the editor component" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="media-common" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:06" time="2.051" tests="21">
    <testcase classname="media-common removeMediaNode media node is selected when it is a temporary file removes the media node" name="media-common removeMediaNode media node is selected when it is a temporary file removes the media node" time="0.077">
    </testcase>
    <testcase classname="media-common removeMediaNode media node is selected when it is a temporary file is not able to undo" name="media-common removeMediaNode media node is selected when it is a temporary file is not able to undo" time="0.007">
    </testcase>
    <testcase classname="media-common removeMediaNode media node is selected when it is uploaded removes the media node" name="media-common removeMediaNode media node is selected when it is uploaded removes the media node" time="0.019">
    </testcase>
    <testcase classname="media-common removeMediaNode media node is selected when it is uploaded is able to undo" name="media-common removeMediaNode media node is selected when it is uploaded is able to undo" time="0.026">
    </testcase>
    <testcase classname="media-common removeMediaNode media node is selected when selected node is the first media node when it is not at the beginning of the document selects the media node to the back" name="media-common removeMediaNode media node is selected when selected node is the first media node when it is not at the beginning of the document selects the media node to the back" time="0.022">
    </testcase>
    <testcase classname="media-common removeMediaNode media node is selected when selected node is the first media node when it is at the beginning of the document selects the media node to the back" name="media-common removeMediaNode media node is selected when selected node is the first media node when it is at the beginning of the document selects the media node to the back" time="0.006">
    </testcase>
    <testcase classname="media-common removeMediaNode media node is selected when selected node is the middle media node selects the media node in the front" name="media-common removeMediaNode media node is selected when selected node is the middle media node selects the media node in the front" time="0.009">
    </testcase>
    <testcase classname="media-common removeMediaNode media node is selected when selected node and deleting node is not the same node does not change selection" name="media-common removeMediaNode media node is selected when selected node and deleting node is not the same node does not change selection" time="0.01">
    </testcase>
    <testcase classname="media-common removeMediaNode media node is selected when selected node and deleting node is not the same node removes the node" name="media-common removeMediaNode media node is selected when selected node and deleting node is not the same node removes the node" time="0.007">
    </testcase>
    <testcase classname="media-common removeMediaNode media node is selected when selected node is the last media node selects the media node in the front" name="media-common removeMediaNode media node is selected when selected node is the last media node selects the media node in the front" time="0.005">
    </testcase>
    <testcase classname="media-common removeMediaNode media node is selected when selected node is the only media node when it is not at the beginning of the document puts cursor to the beginging of the paragraph that replaced the media group" name="media-common removeMediaNode media node is selected when selected node is the only media node when it is not at the beginning of the document puts cursor to the beginging of the paragraph that replaced the media group" time="0.003">
    </testcase>
    <testcase classname="media-common removeMediaNode media node is selected when selected node is the only media node when it is at the beginning of the document puts cursor to the beginging of the document" name="media-common removeMediaNode media node is selected when selected node is the only media node when it is at the beginning of the document puts cursor to the beginging of the document" time="0.005">
    </testcase>
    <testcase classname="media-common splitMediaGroup when selection is a media node returns true" name="media-common splitMediaGroup when selection is a media node returns true" time="0.003">
    </testcase>
    <testcase classname="media-common splitMediaGroup when selection is a media node when media node is the first one in media group removes the selected media node and insert a new p" name="media-common splitMediaGroup when selection is a media node when media node is the first one in media group removes the selected media node and insert a new p" time="0.013">
    </testcase>
    <testcase classname="media-common splitMediaGroup when selection is a media node when media node in the middle of a media group removes the selected media node and insert a new p" name="media-common splitMediaGroup when selection is a media node when media node in the middle of a media group removes the selected media node and insert a new p" time="0.012">
    </testcase>
    <testcase classname="media-common splitMediaGroup when selection is a media node when media node is the last one in the media group removes the selected media node" name="media-common splitMediaGroup when selection is a media node when media node is the last one in the media group removes the selected media node" time="0.007">
    </testcase>
    <testcase classname="media-common splitMediaGroup when selection is a media node when media node is the only one in the media group removes the whole media group" name="media-common splitMediaGroup when selection is a media node when media node is the only one in the media group removes the whole media group" time="0.005">
    </testcase>
    <testcase classname="media-common splitMediaGroup when is text selection returns false" name="media-common splitMediaGroup when is text selection returns false" time="0.003">
    </testcase>
    <testcase classname="media-common splitMediaGroup when is text selection does nothing" name="media-common splitMediaGroup when is text selection does nothing" time="0.004">
    </testcase>
    <testcase classname="media-common splitMediaGroup when is non media node selection returns false" name="media-common splitMediaGroup when is non media node selection returns false" time="0.007">
    </testcase>
    <testcase classname="media-common splitMediaGroup when is non media node selection does nothing" name="media-common splitMediaGroup when is non media node selection does nothing" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="jiraIssue - React component" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:07" time="2.312" tests="2">
    <testcase classname="jiraIssue - React component should return a node of type span" name="jiraIssue - React component should return a node of type span" time="0.042">
    </testcase>
    <testcase classname="jiraIssue - React component should use JiraLogo component" name="jiraIssue - React component should use JiraLogo component" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="image-upload" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:09" time="1.959" tests="16">
    <testcase classname="image-upload allows change handler to be registered" name="image-upload allows change handler to be registered" time="0.005">
    </testcase>
    <testcase classname="image-upload allows an image to be added at the current collapsed selection" name="image-upload allows an image to be added at the current collapsed selection" time="0.019">
    </testcase>
    <testcase classname="image-upload should get current state immediately once subscribed" name="image-upload should get current state immediately once subscribed" time="0.015">
    </testcase>
    <testcase classname="image-upload emits a change when an image is selected" name="image-upload emits a change when an image is selected" time="0.004">
    </testcase>
    <testcase classname="image-upload does not emits a change when unsubscribe" name="image-upload does not emits a change when unsubscribe" time="0.003">
    </testcase>
    <testcase classname="image-upload does not emit multiple changes when an image is not selected" name="image-upload does not emit multiple changes when an image is not selected" time="0.003">
    </testcase>
    <testcase classname="image-upload does not emit multiple changes when an image is selected multiple times" name="image-upload does not emit multiple changes when an image is selected multiple times" time="0.003">
    </testcase>
    <testcase classname="image-upload emits a change event when selection leaves an image" name="image-upload emits a change event when selection leaves an image" time="0.003">
    </testcase>
    <testcase classname="image-upload permits an image to be added when an image is selected" name="image-upload permits an image to be added when an image is selected" time="0.005">
    </testcase>
    <testcase classname="image-upload permits an image to be added when there is selected text" name="image-upload permits an image to be added when there is selected text" time="0.003">
    </testcase>
    <testcase classname="image-upload does not permit an image to be added when the state is disabled" name="image-upload does not permit an image to be added when the state is disabled" time="0.004">
    </testcase>
    <testcase classname="image-upload does not permit an image to be removed at a collapsed text selection" name="image-upload does not permit an image to be removed at a collapsed text selection" time="0.002">
    </testcase>
    <testcase classname="image-upload can remove a selected image" name="image-upload can remove a selected image" time="0.005">
    </testcase>
    <testcase classname="image-upload can update a selected image" name="image-upload can update a selected image" time="0.007">
    </testcase>
    <testcase classname="image-upload should invoke upload handler after pasting an image" name="image-upload should invoke upload handler after pasting an image" time="0.011">
    </testcase>
    <testcase classname="image-upload should invoke upload handler after dropping an image" name="image-upload should invoke upload handler after dropping an image" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="codeBlock - keymaps" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:08" time="2.726" tests="38">
    <testcase classname="codeBlock - keymaps keymap when hits cmd-z should undo last autoformatting" name="codeBlock - keymaps keymap when hits cmd-z should undo last autoformatting" time="0.024">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits enter when it matches fence format when it is already inside a code block does not create another code block" name="codeBlock - keymaps keymap when hits enter when it matches fence format when it is already inside a code block does not create another code block" time="0.005">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when language is provided returns code block with language" name="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when language is provided returns code block with language" time="0.006">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when language is provided trims the spaces" name="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when language is provided trims the spaces" time="0.005">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when langauge is not provided returns code block without language" name="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when langauge is not provided returns code block without language" time="0.006">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when langauge is not provided trims the spaces" name="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when langauge is not provided trims the spaces" time="0.006">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when langauge is not provided should convert to code block even if there are more than 3 backticks" name="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when langauge is not provided should convert to code block even if there are more than 3 backticks" time="0.009">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when langauge is not provided should convert to code block even if its in middle of paragraph" name="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when langauge is not provided should convert to code block even if its in middle of paragraph" time="0.008">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when langauge is not provided should convert to code block even if there are more than 3 backticks in middle of paragraph" name="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when langauge is not provided should convert to code block even if there are more than 3 backticks in middle of paragraph" time="0.004">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when langauge is not provided should convert to code block even if its in middle of paragraph with trailing spaces" name="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when langauge is not provided should convert to code block even if its in middle of paragraph with trailing spaces" time="0.004">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when langauge is not provided should convert to code block even and set language correctly even if its in middle of paragraph" name="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when langauge is not provided should convert to code block even and set language correctly even if its in middle of paragraph" time="0.004">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when langauge is not provided does not convert to code block if it is in middle of line and there is no space before it" name="codeBlock - keymaps keymap when hits enter when it matches fence format when it is not inside a code block when langauge is not provided does not convert to code block if it is in middle of line and there is no space before it" time="0.006">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits up when on a text block when selection is not empty does not create a new paragraph above" name="codeBlock - keymaps keymap when hits up when on a text block when selection is not empty does not create a new paragraph above" time="0.008">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits up when on a text block when selection is empty on a non nested structure inside a paragraph doesn not create a new paragraph above" name="codeBlock - keymaps keymap when hits up when on a text block when selection is empty on a non nested structure inside a paragraph doesn not create a new paragraph above" time="0.003">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits up when on a text block when selection is empty on a non nested structure when cursor is in the middle of the first block node does not create a new paragraph above" name="codeBlock - keymaps keymap when hits up when on a text block when selection is empty on a non nested structure when cursor is in the middle of the first block node does not create a new paragraph above" time="0.002">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits up when on a text block when selection is empty on a non nested structure when cursor is at the beginning of the second block node does not create a new paragraph above" name="codeBlock - keymaps keymap when hits up when on a text block when selection is empty on a non nested structure when cursor is at the beginning of the second block node does not create a new paragraph above" time="0.003">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits up when on a text block when selection is empty on a non nested structure when cursor is at the beginning of the whole content on non list items creates a new paragraph above" name="codeBlock - keymaps keymap when hits up when on a text block when selection is empty on a non nested structure when cursor is at the beginning of the whole content on non list items creates a new paragraph above" time="0.004">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits up when on a text block when selection is empty on a non nested structure when cursor is at the beginning of the whole content on non list items does not ignore @mention" name="codeBlock - keymaps keymap when hits up when on a text block when selection is empty on a non nested structure when cursor is at the beginning of the whole content on non list items does not ignore @mention" time="0.003">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits up when on a text block when selection is empty on a non nested structure when cursor is at the beginning of the whole content list item creates a new paragraph below the ul" name="codeBlock - keymaps keymap when hits up when on a text block when selection is empty on a non nested structure when cursor is at the beginning of the whole content list item creates a new paragraph below the ul" time="0.037">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits up when on a text block when selection is empty on a non nested structure when cursor is at the beginning of the whole content when cursor is in the first cell of the table creates a new paragraph above the table" name="codeBlock - keymaps keymap when hits up when on a text block when selection is empty on a non nested structure when cursor is at the beginning of the whole content when cursor is in the first cell of the table creates a new paragraph above the table" time="0.006">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits up when on a text block when selection is empty on a nested structure when cursor is at the beginning of the nested structure when there is still content before the nested block does not create a new paragraph above" name="codeBlock - keymaps keymap when hits up when on a text block when selection is empty on a nested structure when cursor is at the beginning of the nested structure when there is still content before the nested block does not create a new paragraph above" time="0.004">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits up when on a text block when selection is empty on a nested structure when cursor is at the beginning of the nested structure when there is no more content before the nested block creates a new paragraph above" name="codeBlock - keymaps keymap when hits up when on a text block when selection is empty on a nested structure when cursor is at the beginning of the nested structure when there is no more content before the nested block creates a new paragraph above" time="0.003">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits up when on a node selection on a non nested structure when selection is in the middle of the content does not create a paragraph" name="codeBlock - keymaps keymap when hits up when on a node selection on a non nested structure when selection is in the middle of the content does not create a paragraph" time="0.004">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits up when on a node selection on a non nested structure when selection is at the beginning of the content creates a new paragraph above" name="codeBlock - keymaps keymap when hits up when on a node selection on a non nested structure when selection is at the beginning of the content creates a new paragraph above" time="0.01">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits up when on a node selection on a nested structure when there is more content before the nested block does not create a paragraph" name="codeBlock - keymaps keymap when hits up when on a node selection on a nested structure when there is more content before the nested block does not create a paragraph" time="0.003">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits up when on a node selection on a nested structure when there is no more content before the nested block creates a new paragraph above" name="codeBlock - keymaps keymap when hits up when on a node selection on a nested structure when there is no more content before the nested block creates a new paragraph above" time="0.007">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits down when on a text block when selection is not empty does not create a new paragraph below" name="codeBlock - keymaps keymap when hits down when on a text block when selection is not empty does not create a new paragraph below" time="0.008">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits down when on a text block when selection is empty on a non nested structure when cursor is in the middle of the first block node does not create a new paragraph below" name="codeBlock - keymaps keymap when hits down when on a text block when selection is empty on a non nested structure when cursor is in the middle of the first block node does not create a new paragraph below" time="0.003">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits down when on a text block when selection is empty on a non nested structure when cursor is at the end of the second last block node does not create a new paragraph below" name="codeBlock - keymaps keymap when hits down when on a text block when selection is empty on a non nested structure when cursor is at the end of the second last block node does not create a new paragraph below" time="0.004">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits down when on a text block when selection is empty on a non nested structure when cursor is at the end of the whole content non list item creates a new paragraph below" name="codeBlock - keymaps keymap when hits down when on a text block when selection is empty on a non nested structure when cursor is at the end of the whole content non list item creates a new paragraph below" time="0.004">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits down when on a text block when selection is empty on a non nested structure when cursor is at the end of the whole content list item creates a new paragraph below the ul" name="codeBlock - keymaps keymap when hits down when on a text block when selection is empty on a non nested structure when cursor is at the end of the whole content list item creates a new paragraph below the ul" time="0.007">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits down when on a text block when selection is empty on a non nested structure when cursor is in the last cell of the table creates a new paragraph below the table" name="codeBlock - keymaps keymap when hits down when on a text block when selection is empty on a non nested structure when cursor is in the last cell of the table creates a new paragraph below the table" time="0.007">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits down when on a text block on a nested structure when cursor is at the end of the nested structure when there is still content after the nested block does not create a new paragraph below" name="codeBlock - keymaps keymap when hits down when on a text block on a nested structure when cursor is at the end of the nested structure when there is still content after the nested block does not create a new paragraph below" time="0.004">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when hits down when on a text block on a nested structure when cursor is at the end of the nested structure when there is no more content before the nested block creates a new paragraph below" name="codeBlock - keymaps keymap when hits down when on a text block on a nested structure when cursor is at the end of the nested structure when there is no more content before the nested block creates a new paragraph below" time="0.005">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when on a node selection on a non nested structure when selection is in the middle of the content does not create a paragraph" name="codeBlock - keymaps keymap when on a node selection on a non nested structure when selection is in the middle of the content does not create a paragraph" time="0.006">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when on a node selection on a non nested structure when selection is at the end of the content creates a new paragraph below" name="codeBlock - keymaps keymap when on a node selection on a non nested structure when selection is at the end of the content creates a new paragraph below" time="0.004">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when on a node selection on a nested structure when there is more content after the nested block does not create a paragraph" name="codeBlock - keymaps keymap when on a node selection on a nested structure when there is more content after the nested block does not create a paragraph" time="0.004">
    </testcase>
    <testcase classname="codeBlock - keymaps keymap when on a node selection on a nested structure when there is no more content after the nested block creates a new paragraph below" name="codeBlock - keymaps keymap when on a node selection on a nested structure when there is no more content after the nested block creates a new paragraph below" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/ToolbarTask" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:09" time="2.457" tests="1">
    <testcase classname="@atlaskit/editor-core/ui/ToolbarTask should be disabled if isDisabled property is true" name="@atlaskit/editor-core/ui/ToolbarTask should be disabled if isDisabled property is true" time="0.05">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/utils/filter" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:11" time="1.901" tests="8">
    <testcase classname="@atlaskit/editor-core/utils/filter filterContentByType filtering by type" name="@atlaskit/editor-core/utils/filter filterContentByType filtering by type" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editor-core/utils/filter filterContentByType marks preserved" name="@atlaskit/editor-core/utils/filter filterContentByType marks preserved" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-core/utils/filter filterContentByType filtering multiple paragraphs add breaks" name="@atlaskit/editor-core/utils/filter filterContentByType filtering multiple paragraphs add breaks" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-core/utils/filter filterContentByType filtering multiple paragraphs does not breaks when option false" name="@atlaskit/editor-core/utils/filter filterContentByType filtering multiple paragraphs does not breaks when option false" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-core/utils/filter filterSliceByType filtering by type" name="@atlaskit/editor-core/utils/filter filterSliceByType filtering by type" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-core/utils/filter filterSliceByType marks preserved" name="@atlaskit/editor-core/utils/filter filterSliceByType marks preserved" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-core/utils/filter filterSliceByType filtering multiple paragraphs add breaks" name="@atlaskit/editor-core/utils/filter filterSliceByType filtering multiple paragraphs add breaks" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-core/utils/filter filterSliceByType filtering multiple paragraphs does not breaks when option false" name="@atlaskit/editor-core/utils/filter filterSliceByType filtering multiple paragraphs does not breaks when option false" time="0">
    </testcase>
  </testsuite>
  <testsuite name="nodeviews/media" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:11" time="2.835" tests="4">
    <testcase classname="nodeviews/media should render UIMedia" name="nodeviews/media should render UIMedia" time="0.051">
    </testcase>
    <testcase classname="nodeviews/media props - isMediaSingle when isMediaSingle is not set sets delete event handler" name="nodeviews/media props - isMediaSingle when isMediaSingle is not set sets delete event handler" time="0.017">
    </testcase>
    <testcase classname="nodeviews/media props - isMediaSingle when isMediaSingle is set to true sets delete event handler" name="nodeviews/media props - isMediaSingle when isMediaSingle is set to true sets delete event handler" time="0.011">
    </testcase>
    <testcase classname="nodeviews/media props - isMediaSingle when isMediaSingle is set to false sets delete event handler" name="nodeviews/media props - isMediaSingle when isMediaSingle is set to false sets delete event handler" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="JIRATransformer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:12" time="2.1" tests="2">
    <testcase classname="JIRATransformer JIRA issue keys parses HTML" name="JIRATransformer JIRA issue keys parses HTML" time="0.023">
    </testcase>
    <testcase classname="JIRATransformer JIRA issue keys encodes HTML" name="JIRATransformer JIRA issue keys encodes HTML" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Emoji" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:15" time="1.97" tests="2">
    <testcase classname="Emoji should render Emoji UI component" name="Emoji should render Emoji UI component" time="0.02">
    </testcase>
    <testcase classname="Emoji should convert text to fallback attribute" name="Emoji should convert text to fallback attribute" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="emojis" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:15" time="3.98" tests="30">
    <testcase classname="emojis keymap ArrowUp should be ignored if there is no emojiProvider" name="emojis keymap ArrowUp should be ignored if there is no emojiProvider" time="0.024">
    </testcase>
    <testcase classname="emojis keymap ArrowUp should be ignored if there is no active query" name="emojis keymap ArrowUp should be ignored if there is no active query" time="0.017">
    </testcase>
    <testcase classname="emojis keymap ArrowUp should call &quot;onSelectPrevious&quot; which should return false by default" name="emojis keymap ArrowUp should call &quot;onSelectPrevious&quot; which should return false by default" time="0.021">
    </testcase>
    <testcase classname="emojis keymap ArrowDown should be ignored if there is no emojiProvider" name="emojis keymap ArrowDown should be ignored if there is no emojiProvider" time="0.005">
    </testcase>
    <testcase classname="emojis keymap ArrowDown should be ignored if there is no active query" name="emojis keymap ArrowDown should be ignored if there is no active query" time="0.003">
    </testcase>
    <testcase classname="emojis keymap ArrowDown should call &quot;onSelectNext&quot; which should return false by default" name="emojis keymap ArrowDown should call &quot;onSelectNext&quot; which should return false by default" time="0.003">
    </testcase>
    <testcase classname="emojis keymap Enter should be ignored if there is no emojiProvider" name="emojis keymap Enter should be ignored if there is no emojiProvider" time="0.004">
    </testcase>
    <testcase classname="emojis keymap Enter should be ignored if there is no active query" name="emojis keymap Enter should be ignored if there is no active query" time="0.004">
    </testcase>
    <testcase classname="emojis keymap Enter should call &quot;onSelectCurrent&quot; which should return false by default" name="emojis keymap Enter should call &quot;onSelectCurrent&quot; which should return false by default" time="0.019">
    </testcase>
    <testcase classname="emojis keymap Shift-Enter should be ignored if there is no emojiProvider" name="emojis keymap Shift-Enter should be ignored if there is no emojiProvider" time="0.002">
    </testcase>
    <testcase classname="emojis keymap Shift-Enter should be ignored if there is no active query" name="emojis keymap Shift-Enter should be ignored if there is no active query" time="0.004">
    </testcase>
    <testcase classname="emojis keymap Shift-Enter should call &quot;onSelectCurrent&quot; which should return false by default" name="emojis keymap Shift-Enter should call &quot;onSelectCurrent&quot; which should return false by default" time="0.034">
    </testcase>
    <testcase classname="emojis keymap Space should be ignored if there is no emojiProvider" name="emojis keymap Space should be ignored if there is no emojiProvider" time="0.003">
    </testcase>
    <testcase classname="emojis keymap Space should be ignored if there is no active query" name="emojis keymap Space should be ignored if there is no active query" time="0.004">
    </testcase>
    <testcase classname="emojis keymap Space should call &quot;trySelectCurrent&quot; which should return false" name="emojis keymap Space should call &quot;trySelectCurrent&quot; which should return false" time="0.012">
    </testcase>
    <testcase classname="emojis keymap Space should call &quot;insertEmoji&quot; if there is only 1 result" name="emojis keymap Space should call &quot;insertEmoji&quot; if there is only 1 result" time="0.036">
    </testcase>
    <testcase classname="emojis keymap Space should call &quot;dismiss&quot; if the query is empty" name="emojis keymap Space should call &quot;dismiss&quot; if the query is empty" time="0.004">
    </testcase>
    <testcase classname="emojis keymap Escape should be ignored if there is no emojiProvider" name="emojis keymap Escape should be ignored if there is no emojiProvider" time="0.003">
    </testcase>
    <testcase classname="emojis keymap Escape should be ignored if there is no active query" name="emojis keymap Escape should be ignored if there is no active query" time="0.003">
    </testcase>
    <testcase classname="emojis keymap Escape should call &quot;dismiss&quot; which should return true by default" name="emojis keymap Escape should call &quot;dismiss&quot; which should return true by default" time="0.004">
    </testcase>
    <testcase classname="emojis insertEmoji should replace emoji-query-mark with emoji-node" name="emojis insertEmoji should replace emoji-query-mark with emoji-node" time="0.013">
    </testcase>
    <testcase classname="emojis insertEmoji should insert a space after the emoji-node" name="emojis insertEmoji should insert a space after the emoji-node" time="0.01">
    </testcase>
    <testcase classname="emojis insertEmoji should allow inserting multiple emojis next to each other" name="emojis insertEmoji should allow inserting multiple emojis next to each other" time="0.017">
    </testcase>
    <testcase classname="emojis insertEmoji should allow inserting emoji on new line after hard break" name="emojis insertEmoji should allow inserting emoji on new line after hard break" time="0.014">
    </testcase>
    <testcase classname="emojis insertEmoji should not break list into two when inserting emoji inside list item" name="emojis insertEmoji should not break list into two when inserting emoji inside list item" time="0.012">
    </testcase>
    <testcase classname="emojis insertEmoji should insert only 1 emoji at a time inside blockqoute" name="emojis insertEmoji should insert only 1 emoji at a time inside blockqoute" time="0.015">
    </testcase>
    <testcase classname="emojis isEnabled returns true when the emoji mark can be applied" name="emojis isEnabled returns true when the emoji mark can be applied" time="0.002">
    </testcase>
    <testcase classname="emojis isEnabled returns false when the emoji mark cannot be applied" name="emojis isEnabled returns false when the emoji mark cannot be applied" time="0.004">
    </testcase>
    <testcase classname="emojis focused when editor is focused it is true" name="emojis focused when editor is focused it is true" time="0.004">
    </testcase>
    <testcase classname="emojis focused when editor is not focused it is false" name="emojis focused when editor is not focused it is false" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:17" time="2.942" tests="5">
    <testcase classname="@atlaskit/editor-core WithPluginState should call render with current plugin state" name="@atlaskit/editor-core WithPluginState should call render with current plugin state" time="0.026">
    </testcase>
    <testcase classname="@atlaskit/editor-core WithPluginState should call render once after changes in several plugins" name="@atlaskit/editor-core WithPluginState should call render once after changes in several plugins" time="0.154">
    </testcase>
    <testcase classname="@atlaskit/editor-core should clean all listeners after unmount" name="@atlaskit/editor-core should clean all listeners after unmount" time="0.006">
    </testcase>
    <testcase classname="@atlaskit/editor-core should support old plugins with subscribe/unsubscribe methods" name="@atlaskit/editor-core should support old plugins with subscribe/unsubscribe methods" time="0.079">
    </testcase>
    <testcase classname="@atlaskit/editor-core should unsubscribe after unmount for old plugins with subscribe/unsubscribe methods" name="@atlaskit/editor-core should unsubscribe after unmount for old plugins with subscribe/unsubscribe methods" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="breakpointSize" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:20" time="1.635" tests="4">
    <testcase classname="breakpointSize should return right breakpoint name based on passed width" name="breakpointSize should return right breakpoint name based on passed width" time="0.003">
    </testcase>
    <testcase classname="breakpointSize should use default sizes object" name="breakpointSize should use default sizes object" time="0.001">
    </testcase>
    <testcase classname="breakpointSize should return the first key as default value" name="breakpointSize should return the first key as default value" time="0.001">
    </testcase>
    <testcase classname="breakpointSize should work with css pixel values" name="breakpointSize should work with css pixel values" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="media-links" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:14" time="7.704" tests="19">
    <testcase classname="media-links detectLinkRangesInSteps when includes replace step with links returns ranges with links" name="media-links detectLinkRangesInSteps when includes replace step with links returns ranges with links" time="0.016">
    </testcase>
    <testcase classname="media-links detectLinkRangesInSteps when includes replace step with links detects links inside nested content" name="media-links detectLinkRangesInSteps when includes replace step with links detects links inside nested content" time="0.006">
    </testcase>
    <testcase classname="media-links detectLinkRangesInSteps when includes replace step with links when included link has no href ignore links without href" name="media-links detectLinkRangesInSteps when includes replace step with links when included link has no href ignore links without href" time="0.003">
    </testcase>
    <testcase classname="media-links detectLinkRangesInSteps when includes add mark step with links returns ranges with links" name="media-links detectLinkRangesInSteps when includes add mark step with links returns ranges with links" time="0.005">
    </testcase>
    <testcase classname="media-links detectLinkRangesInSteps when includes add mark step with links when included link has no href ignore links without href" name="media-links detectLinkRangesInSteps when includes add mark step with links when included link has no href ignore links without href" time="0.003">
    </testcase>
    <testcase classname="media-links detectLinkRangesInSteps when both replace step and add mark step have links returns ranges with links" name="media-links detectLinkRangesInSteps when both replace step and add mark step have links returns ranges with links" time="0.003">
    </testcase>
    <testcase classname="media-links detectLinkRangesInSteps when remove step with links returns empty ranges" name="media-links detectLinkRangesInSteps when remove step with links returns empty ranges" time="0.005">
    </testcase>
    <testcase classname="media-links detectLinkRangesInSteps when neither replace step nor add mark step have links returns empty ranges" name="media-links detectLinkRangesInSteps when neither replace step nor add mark step have links returns empty ranges" time="0.002">
    </testcase>
    <testcase classname="media-links insertLinks when no links are stored in link ranges does nothing" name="media-links insertLinks when no links are stored in link ranges does nothing" time="0.006">
    </testcase>
    <testcase classname="media-links insertLinks when there is a link stored in link ranges there is no existing media group below creates a link card below where is the link created" name="media-links insertLinks when there is a link stored in link ranges there is no existing media group below creates a link card below where is the link created" time="0.022">
    </testcase>
    <testcase classname="media-links insertLinks when there is a link stored in link ranges there is no existing media group below latest pos in range is out of doc range creates a link card at the end of doc" name="media-links insertLinks when there is a link stored in link ranges there is no existing media group below latest pos in range is out of doc range creates a link card at the end of doc" time="0.007">
    </testcase>
    <testcase classname="media-links insertLinks when there is a link stored in link ranges there is no existing media group below not at the end of the doc does not create a new p at the end of doc" name="media-links insertLinks when there is a link stored in link ranges there is no existing media group below not at the end of the doc does not create a new p at the end of doc" time="0.005">
    </testcase>
    <testcase classname="media-links insertLinks when there is a link stored in link ranges there is no existing media group below triggers an analytics event" name="media-links insertLinks when there is a link stored in link ranges there is no existing media group below triggers an analytics event" time="0.006">
    </testcase>
    <testcase classname="media-links insertLinks when there is a link stored in link ranges there is an existing media group below creates a link card to join the existing media group below" name="media-links insertLinks when there is a link stored in link ranges there is an existing media group below creates a link card to join the existing media group below" time="0.005">
    </testcase>
    <testcase classname="media-links insertLinks when there is a link stored in link ranges there is an existing media group below latest pos in range is out of doc range creates a link card to join the existing media group below" name="media-links insertLinks when there is a link stored in link ranges there is an existing media group below latest pos in range is out of doc range creates a link card to join the existing media group below" time="0.007">
    </testcase>
    <testcase classname="media-links insertLinks when there are multiple links in link ranges creates link cards below the range where link was detected" name="media-links insertLinks when there are multiple links in link ranges creates link cards below the range where link was detected" time="0.009">
    </testcase>
    <testcase classname="media-links insertLinks should call remove callback for invalid or private links" name="media-links insertLinks should call remove callback for invalid or private links" time="0.009">
    </testcase>
    <testcase classname="media-links when selection is in a task or decision block link insertion ignored for task item" name="media-links when selection is in a task or decision block link insertion ignored for task item" time="0.006">
    </testcase>
    <testcase classname="media-links when selection is in a task or decision block link insertion ignored for decision item" name="media-links when selection is in a task or decision block link insertion ignored for decision item" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="inputrules" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:20" time="3.386" tests="8">
    <testcase classname="inputrules rule should not convert &quot;***&quot; in the middle of a line to a horizontal rule" name="inputrules rule should not convert &quot;***&quot; in the middle of a line to a horizontal rule" time="0.018">
    </testcase>
    <testcase classname="inputrules rule should convert &quot;***&quot; in the start of a line to a horizontal rule" name="inputrules rule should convert &quot;***&quot; in the start of a line to a horizontal rule" time="0.007">
    </testcase>
    <testcase classname="inputrules rule should convert &quot;***&quot; in the start of a line after shift+enter to a horizontal rule" name="inputrules rule should convert &quot;***&quot; in the start of a line after shift+enter to a horizontal rule" time="0.012">
    </testcase>
    <testcase classname="inputrules rule should convert &quot;---&quot; at the start of a line to horizontal rule" name="inputrules rule should convert &quot;---&quot; at the start of a line to horizontal rule" time="0.006">
    </testcase>
    <testcase classname="inputrules rule should not convert &quot;---&quot; inside a block to horizontal rule" name="inputrules rule should not convert &quot;---&quot; inside a block to horizontal rule" time="0.006">
    </testcase>
    <testcase classname="inputrules rule should convert &quot;---&quot; in the start of a line after shift+enter to a horizontal rule" name="inputrules rule should convert &quot;---&quot; in the start of a line after shift+enter to a horizontal rule" time="0.007">
    </testcase>
    <testcase classname="inputrules rule should not convert &quot;---&quot; in the middle of a line to a horizontal rule" name="inputrules rule should not convert &quot;---&quot; in the middle of a line to a horizontal rule" time="0.005">
    </testcase>
    <testcase classname="inputrules rule should not convert &quot;---&quot; inside a code_block" name="inputrules rule should not convert &quot;---&quot; inside a code_block" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="JIRATransformer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:22" time="2.628" tests="4">
    <testcase classname="JIRATransformer mentions encodes HTML: mention_query mark" name="JIRATransformer mentions encodes HTML: mention_query mark" time="0.005">
    </testcase>
    <testcase classname="JIRATransformer mentions parses HTML: mention node" name="JIRATransformer mentions parses HTML: mention node" time="0.013">
    </testcase>
    <testcase classname="JIRATransformer mentions encodes HTML: mention node" name="JIRATransformer mentions encodes HTML: mention node" time="0.007">
    </testcase>
    <testcase classname="JIRATransformer mentions round-trips HTML: mention node" name="JIRATransformer mentions round-trips HTML: mention node" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="BitbucketTransformer: serializer" errors="0" failures="0" skipped="2" timestamp="2018-01-09T09:39:23" time="3.543" tests="67">
    <testcase classname="BitbucketTransformer: serializer should serialize paragraphs" name="BitbucketTransformer: serializer should serialize paragraphs" time="0.01">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer should preserve multiple blank lines using zero-non-width" name="BitbucketTransformer: serializer should preserve multiple blank lines using zero-non-width" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer should escape 4 spaces at the beginning of the line with zero-width-non-joiner" name="BitbucketTransformer: serializer should escape 4 spaces at the beginning of the line with zero-width-non-joiner" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer should preserve leading and trailing blank lines using zero-non-width" name="BitbucketTransformer: serializer should preserve leading and trailing blank lines using zero-non-width" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer mentions should serialize mentions" name="BitbucketTransformer: serializer mentions should serialize mentions" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer mentions should divide serialized mentions and text with one blank space" name="BitbucketTransformer: serializer mentions should divide serialized mentions and text with one blank space" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer mentions should not add a blank space in the end of the string for mentions" name="BitbucketTransformer: serializer mentions should not add a blank space in the end of the string for mentions" time="0">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer mentions should not divide mention and text with additional space if text starts with the space" name="BitbucketTransformer: serializer mentions should not divide mention and text with additional space if text starts with the space" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer mentions should divide mention and text with only one additional space if text starts with the spaces" name="BitbucketTransformer: serializer mentions should divide mention and text with only one additional space if text starts with the spaces" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer mentions should not divide mention and italic text node with additional space if text starts with the space" name="BitbucketTransformer: serializer mentions should not divide mention and italic text node with additional space if text starts with the space" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer emoji should serialize emoji" name="BitbucketTransformer: serializer emoji should serialize emoji" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer should not skip [ &amp; ]" name="BitbucketTransformer: serializer should not skip [ &amp; ]" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer code block with simple text should be serialized" name="BitbucketTransformer: serializer code block with simple text should be serialized" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer code block with newlines preserves newlines in markdown" name="BitbucketTransformer: serializer code block with newlines preserves newlines in markdown" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer code block with adjacent code block keeps empty space between" name="BitbucketTransformer: serializer code block with adjacent code block keeps empty space between" time="0">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer code block with attributes uses backtick notation and preserves attributes" name="BitbucketTransformer: serializer code block with attributes uses backtick notation and preserves attributes" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer code block with no text is preserved" name="BitbucketTransformer: serializer code block with no text is preserved" time="0">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer code block via indentation with backticks is not escaped" name="BitbucketTransformer: serializer code block via indentation with backticks is not escaped" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer code block via backticks that includes backticks is properly fenced" name="BitbucketTransformer: serializer code block via backticks that includes backticks is properly fenced" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer should serialize headings (level 1 - 6)" name="BitbucketTransformer: serializer should serialize headings (level 1 - 6)" time="0.005">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer should serialize horizontal_rule" name="BitbucketTransformer: serializer should serialize horizontal_rule" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer bullet list with elements should serialize" name="BitbucketTransformer: serializer bullet list with elements should serialize" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer bullet list surrounded with other block elements keeps empty line between" name="BitbucketTransformer: serializer bullet list surrounded with other block elements keeps empty line between" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer bullet list with one empty element is preserved" name="BitbucketTransformer: serializer bullet list with one empty element is preserved" time="0">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer bullet list with nesting should serialize" name="BitbucketTransformer: serializer bullet list with nesting should serialize" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer bullet list with newline" name="BitbucketTransformer: serializer bullet list with newline" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer bullet list with list item containing two lines" name="BitbucketTransformer: serializer bullet list with list item containing two lines" time="0">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer ordered list with elements should serialize" name="BitbucketTransformer: serializer ordered list with elements should serialize" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer ordered list surrounded with other block elements keeps empty line between" name="BitbucketTransformer: serializer ordered list surrounded with other block elements keeps empty line between" time="0">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer ordered list with 10+ elements aligns numbers to right" name="BitbucketTransformer: serializer ordered list with 10+ elements aligns numbers to right" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer ordered list with one empty element is preserved" name="BitbucketTransformer: serializer ordered list with one empty element is preserved" time="0">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer ordered list with nesting should serialize" name="BitbucketTransformer: serializer ordered list with nesting should serialize" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer mixed lists of nested ordered and unordered should serialize" name="BitbucketTransformer: serializer mixed lists of nested ordered and unordered should serialize" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer mixed lists of consecutive ordered and unordered should serialize" name="BitbucketTransformer: serializer mixed lists of consecutive ordered and unordered should serialize" time="0">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer image with no alt to serialize" name="BitbucketTransformer: serializer image with no alt to serialize" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer image with alt and no title to serialize" name="BitbucketTransformer: serializer image with alt and no title to serialize" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer image with alt and title to serialize" name="BitbucketTransformer: serializer image with alt and title to serialize" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer image with title containing double-quote to serialize without escaping" name="BitbucketTransformer: serializer image with title containing double-quote to serialize without escaping" time="0">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer image with alt containing quotes to serialize" name="BitbucketTransformer: serializer image with alt containing quotes to serialize" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer image inline with text to serialize" name="BitbucketTransformer: serializer image inline with text to serialize" time="0">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer image in heading to serialize" name="BitbucketTransformer: serializer image in heading to serialize" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer image should escape the characters in image attributes" name="BitbucketTransformer: serializer image should escape the characters in image attributes" time="0">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer should serialize hardBreak to newline" name="BitbucketTransformer: serializer should serialize hardBreak to newline" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer blockquotes should serialized" name="BitbucketTransformer: serializer blockquotes should serialized" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - should ignore mentionQuery mark" name="BitbucketTransformer: serializer marks - should ignore mentionQuery mark" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - should ignore emojiQuery mark" name="BitbucketTransformer: serializer marks - should ignore emojiQuery mark" time="0">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - should serialize em" name="BitbucketTransformer: serializer marks - should serialize em" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - should serialize strong" name="BitbucketTransformer: serializer marks - should serialize strong" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - should serialize strikethrough" name="BitbucketTransformer: serializer marks - should serialize strikethrough" time="0">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - should serialize code" name="BitbucketTransformer: serializer marks - should serialize code" time="0.004">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - code containing backticks should be fenced properly" name="BitbucketTransformer: serializer marks - code containing backticks should be fenced properly" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - code containing backticks on the edges of a fence should be fenced properly" name="BitbucketTransformer: serializer marks - code containing backticks on the edges of a fence should be fenced properly" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - links with no text to be ignored" name="BitbucketTransformer: serializer marks - links with no text to be ignored" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - links with no title to serialize" name="BitbucketTransformer: serializer marks - links with no title to serialize" time="0">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - links with space in url to serialize" name="BitbucketTransformer: serializer marks - links with space in url to serialize" time="0">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - links with special characters, characters should not be escaped" name="BitbucketTransformer: serializer marks - links with special characters, characters should not be escaped" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - links should escape markdown characters in url" name="BitbucketTransformer: serializer marks - links should escape markdown characters in url" time="0">
      <skipped/>
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - links should not escape ~ inside link" name="BitbucketTransformer: serializer marks - links should not escape ~ inside link" time="0">
      <skipped/>
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - emphasis - asterisk within strings should be escaped" name="BitbucketTransformer: serializer marks - emphasis - asterisk within strings should be escaped" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - emphasis - underscore within strings should be escaped" name="BitbucketTransformer: serializer marks - emphasis - underscore within strings should be escaped" time="0.004">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - emphasis - &quot;strong em&quot; should be escaped in its entirety" name="BitbucketTransformer: serializer marks - emphasis - &quot;strong em&quot; should be escaped in its entirety" time="0.002">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - emphasis - &quot;smart em&quot; should be escaped in its entirety" name="BitbucketTransformer: serializer marks - emphasis - &quot;smart em&quot; should be escaped in its entirety" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - emphasis - combinations should be properly serialized" name="BitbucketTransformer: serializer marks - emphasis - combinations should be properly serialized" time="0.003">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer marks - tilde ~ should not escape tilde ~" name="BitbucketTransformer: serializer marks - tilde ~ should not escape tilde ~" time="0">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer New lines should serialize new line - 1" name="BitbucketTransformer: serializer New lines should serialize new line - 1" time="0.001">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer New lines should serialize new line - 2" name="BitbucketTransformer: serializer New lines should serialize new line - 2" time="0">
    </testcase>
    <testcase classname="BitbucketTransformer: serializer New lines should serialize new line - 3" name="BitbucketTransformer: serializer New lines should serialize new line - 3" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/utils/filter" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:24" time="3.45" tests="4">
    <testcase classname="@atlaskit/editor-core/utils/filter taskDecisionDocFilter filter preserves supported types" name="@atlaskit/editor-core/utils/filter taskDecisionDocFilter filter preserves supported types" time="0.008">
    </testcase>
    <testcase classname="@atlaskit/editor-core/utils/filter taskDecisionDocFilter filtering multiple paragraphs add breaks" name="@atlaskit/editor-core/utils/filter taskDecisionDocFilter filtering multiple paragraphs add breaks" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editor-core/utils/filter taskDecisionSliceFilter filter preserves supported types" name="@atlaskit/editor-core/utils/filter taskDecisionSliceFilter filter preserves supported types" time="0.006">
    </testcase>
    <testcase classname="@atlaskit/editor-core/utils/filter taskDecisionSliceFilter filtering multiple paragraphs add breaks" name="@atlaskit/editor-core/utils/filter taskDecisionSliceFilter filtering multiple paragraphs add breaks" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:25" time="3.095" tests="15">
    <testcase classname="@atlaskit/editor-core Utils -&gt; Document #isEmptyParagraph should return true if paragraph is empty" name="@atlaskit/editor-core Utils -&gt; Document #isEmptyParagraph should return true if paragraph is empty" time="0.012">
    </testcase>
    <testcase classname="@atlaskit/editor-core Utils -&gt; Document #isEmptyParagraph should return false if paragraph is not empty" name="@atlaskit/editor-core Utils -&gt; Document #isEmptyParagraph should return false if paragraph is not empty" time="0">
    </testcase>
    <testcase classname="@atlaskit/editor-core Utils -&gt; Document #isEmpty should return true if node is empty" name="@atlaskit/editor-core Utils -&gt; Document #isEmpty should return true if node is empty" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-core Utils -&gt; Document #isEmpty should return true if the only child of a node is an empty paragraph" name="@atlaskit/editor-core Utils -&gt; Document #isEmpty should return true if the only child of a node is an empty paragraph" time="0">
    </testcase>
    <testcase classname="@atlaskit/editor-core Utils -&gt; Document #isEmpty should return true if node only contains empty block nodes" name="@atlaskit/editor-core Utils -&gt; Document #isEmpty should return true if node only contains empty block nodes" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-core Utils -&gt; Document #isEmpty should return false if the only child of a node is not an empty paragraph" name="@atlaskit/editor-core Utils -&gt; Document #isEmpty should return false if the only child of a node is not an empty paragraph" time="0">
    </testcase>
    <testcase classname="@atlaskit/editor-core Utils -&gt; Document #isEmpty should return false if node contains non-empty block nodes" name="@atlaskit/editor-core Utils -&gt; Document #isEmpty should return false if node contains non-empty block nodes" time="0">
    </testcase>
    <testcase classname="@atlaskit/editor-core Utils -&gt; Document isEmptyDocument should return true if node looks like an empty document" name="@atlaskit/editor-core Utils -&gt; Document isEmptyDocument should return true if node looks like an empty document" time="0">
    </testcase>
    <testcase classname="@atlaskit/editor-core Utils -&gt; Document isEmptyDocument should return false if node has text content" name="@atlaskit/editor-core Utils -&gt; Document isEmptyDocument should return false if node has text content" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-core Utils -&gt; Document isEmptyDocument should return false if node has multiple empty children" name="@atlaskit/editor-core Utils -&gt; Document isEmptyDocument should return false if node has multiple empty children" time="0">
    </testcase>
    <testcase classname="@atlaskit/editor-core Utils -&gt; Document isEmptyDocument should return false if node has no paragraph node" name="@atlaskit/editor-core Utils -&gt; Document isEmptyDocument should return false if node has no paragraph node" time="0">
    </testcase>
    <testcase classname="@atlaskit/editor-core Utils -&gt; Document isEmptyDocument should return false if node has block content" name="@atlaskit/editor-core Utils -&gt; Document isEmptyDocument should return false if node has block content" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-core Utils -&gt; Document isEmptyDocument should return false if node has hr" name="@atlaskit/editor-core Utils -&gt; Document isEmptyDocument should return false if node has hr" time="0">
    </testcase>
    <testcase classname="@atlaskit/editor-core Utils -&gt; Document preprocessDoc should return true if node is empty" name="@atlaskit/editor-core Utils -&gt; Document preprocessDoc should return true if node is empty" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-core Utils -&gt; Document preprocessDoc should return new document" name="@atlaskit/editor-core Utils -&gt; Document preprocessDoc should return new document" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core ui/ExtensionEditPanel" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:27" time="2.328" tests="5">
    <testcase classname="@atlaskit/editor-core ui/ExtensionEditPanel should return null if element prop equals null" name="@atlaskit/editor-core ui/ExtensionEditPanel should return null if element prop equals null" time="0.015">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/ExtensionEditPanel should not return null if element is not null" name="@atlaskit/editor-core ui/ExtensionEditPanel should not return null if element is not null" time="0.04">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/ExtensionEditPanel should have 2 buttons" name="@atlaskit/editor-core ui/ExtensionEditPanel should have 2 buttons" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/ExtensionEditPanel should trigger onEdit when Edit button is clicked" name="@atlaskit/editor-core ui/ExtensionEditPanel should trigger onEdit when Edit button is clicked" time="0.089">
    </testcase>
    <testcase classname="@atlaskit/editor-core ui/ExtensionEditPanel should trigger onRemoveMacro when Trash icon is clicked" name="@atlaskit/editor-core ui/ExtensionEditPanel should trigger onRemoveMacro when Trash icon is clicked" time="0.039">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - TextSerializer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:29" time="1.996" tests="28">
    <testcase classname="Renderer - TextSerializer should render hardBreak as a new line" name="Renderer - TextSerializer should render hardBreak as a new line" time="0.006">
    </testcase>
    <testcase classname="Renderer - TextSerializer should render multiple hardBreaks as one line" name="Renderer - TextSerializer should render multiple hardBreaks as one line" time="0.002">
    </testcase>
    <testcase classname="Renderer - TextSerializer should render unicode emoji" name="Renderer - TextSerializer should render unicode emoji" time="0">
    </testcase>
    <testcase classname="Renderer - TextSerializer should render colon key for emoticon emoji" name="Renderer - TextSerializer should render colon key for emoticon emoji" time="0.001">
    </testcase>
    <testcase classname="Renderer - TextSerializer should render mention user with at-symbol" name="Renderer - TextSerializer should render mention user with at-symbol" time="0.001">
    </testcase>
    <testcase classname="Renderer - TextSerializer should render media items prefixed with attachment unicode emoji" name="Renderer - TextSerializer should render media items prefixed with attachment unicode emoji" time="0.002">
    </testcase>
    <testcase classname="Renderer - TextSerializer should render media items as NUMBER files (one file)" name="Renderer - TextSerializer should render media items as NUMBER files (one file)" time="0.006">
    </testcase>
    <testcase classname="Renderer - TextSerializer should render media items as NUMBER files (multiple files)" name="Renderer - TextSerializer should render media items as NUMBER files (multiple files)" time="0">
    </testcase>
    <testcase classname="Renderer - TextSerializer should render media items as NUMBER files + ignore media card links" name="Renderer - TextSerializer should render media items as NUMBER files + ignore media card links" time="0.001">
    </testcase>
    <testcase classname="Renderer - TextSerializer should render URL if it is the same as text" name="Renderer - TextSerializer should render URL if it is the same as text" time="0">
    </testcase>
    <testcase classname="Renderer - TextSerializer should render text if URL is different from text" name="Renderer - TextSerializer should render text if URL is different from text" time="0.001">
    </testcase>
    <testcase classname="Renderer - TextSerializer should render application card text" name="Renderer - TextSerializer should render application card text" time="0">
    </testcase>
    <testcase classname="Renderer - TextSerializer should render blockquote text prefixed with &quot;&gt; &quot;" name="Renderer - TextSerializer should render blockquote text prefixed with &quot;&gt; &quot;" time="0.001">
    </testcase>
    <testcase classname="Renderer - TextSerializer should render codeBlock contents as a simple text" name="Renderer - TextSerializer should render codeBlock contents as a simple text" time="0">
    </testcase>
    <testcase classname="Renderer - TextSerializer should divide block elements with a new line" name="Renderer - TextSerializer should divide block elements with a new line" time="0">
    </testcase>
    <testcase classname="Renderer - TextSerializer should ignore card links" name="Renderer - TextSerializer should ignore card links" time="0.001">
    </testcase>
    <testcase classname="Renderer - TextSerializer should ignore bullet lists" name="Renderer - TextSerializer should ignore bullet lists" time="0.001">
    </testcase>
    <testcase classname="Renderer - TextSerializer should ignore ordered lists" name="Renderer - TextSerializer should ignore ordered lists" time="0.001">
    </testcase>
    <testcase classname="Renderer - TextSerializer should ignore heading level 1" name="Renderer - TextSerializer should ignore heading level 1" time="0.001">
    </testcase>
    <testcase classname="Renderer - TextSerializer should ignore heading level 2" name="Renderer - TextSerializer should ignore heading level 2" time="0.001">
    </testcase>
    <testcase classname="Renderer - TextSerializer should ignore heading level 3" name="Renderer - TextSerializer should ignore heading level 3" time="0.002">
    </testcase>
    <testcase classname="Renderer - TextSerializer should ignore heading level 4" name="Renderer - TextSerializer should ignore heading level 4" time="0.005">
    </testcase>
    <testcase classname="Renderer - TextSerializer should ignore heading level 5" name="Renderer - TextSerializer should ignore heading level 5" time="0">
    </testcase>
    <testcase classname="Renderer - TextSerializer should ignore heading level 6" name="Renderer - TextSerializer should ignore heading level 6" time="0.001">
    </testcase>
    <testcase classname="Renderer - TextSerializer should ignore horizontal lines" name="Renderer - TextSerializer should ignore horizontal lines" time="0">
    </testcase>
    <testcase classname="Renderer - TextSerializer should ignore panels" name="Renderer - TextSerializer should ignore panels" time="0">
    </testcase>
    <testcase classname="Renderer - TextSerializer should ignore tables" name="Renderer - TextSerializer should ignore tables" time="0.001">
    </testcase>
    <testcase classname="Renderer - TextSerializer should ignore empty paragraphs" name="Renderer - TextSerializer should ignore empty paragraphs" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Store" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:32" time="0.957" tests="2">
    <testcase classname="Store getState should return current state" name="Store getState should return current state" time="0.002">
    </testcase>
    <testcase classname="Store dispatch should update state with result from reducer and call subscribers" name="Store dispatch should update state with result from reducer and call subscribers" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="JIRATransformer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:27" time="4.815" tests="9">
    <testcase classname="JIRATransformer links parses HTML: external link" name="JIRATransformer links parses HTML: external link" time="0.04">
    </testcase>
    <testcase classname="JIRATransformer links encodes HTML: external link" name="JIRATransformer links encodes HTML: external link" time="0.016">
    </testcase>
    <testcase classname="JIRATransformer links round-trips HTML: external link" name="JIRATransformer links round-trips HTML: external link" time="0.003">
    </testcase>
    <testcase classname="JIRATransformer links parses HTML: mailto link" name="JIRATransformer links parses HTML: mailto link" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer links encodes HTML: mailto link" name="JIRATransformer links encodes HTML: mailto link" time="0.001">
    </testcase>
    <testcase classname="JIRATransformer links round-trips HTML: mailto link" name="JIRATransformer links round-trips HTML: mailto link" time="0.005">
    </testcase>
    <testcase classname="JIRATransformer links parses HTML: anchor" name="JIRATransformer links parses HTML: anchor" time="0.004">
    </testcase>
    <testcase classname="JIRATransformer links encodes HTML: anchor" name="JIRATransformer links encodes HTML: anchor" time="0.002">
    </testcase>
    <testcase classname="JIRATransformer links round-trips HTML: anchor" name="JIRATransformer links round-trips HTML: anchor" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="media-single" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:29" time="4.805" tests="8">
    <testcase classname="media-single insertMediaAsMediaSingle when inserting node that is not a media node does not insert mediaSingle" name="media-single insertMediaAsMediaSingle when inserting node that is not a media node does not insert mediaSingle" time="0.009">
    </testcase>
    <testcase classname="media-single insertMediaAsMediaSingle when inserting node is a media node when media node is not an image does not insert mediaSingle" name="media-single insertMediaAsMediaSingle when inserting node is a media node when media node is not an image does not insert mediaSingle" time="0.006">
    </testcase>
    <testcase classname="media-single insertMediaAsMediaSingle when inserting node is a media node when media node is an image inserts mediaSingle" name="media-single insertMediaAsMediaSingle when inserting node is a media node when media node is an image inserts mediaSingle" time="0.023">
    </testcase>
    <testcase classname="media-single insertMediaSingleNode when there is only one image data inserts one mediaSingle node into the document" name="media-single insertMediaSingleNode when there is only one image data inserts one mediaSingle node into the document" time="0.007">
    </testcase>
    <testcase classname="media-single insertMediaSingleNode when there are multiple images&apos; data inserts multiple mediaSingle nodes into the document" name="media-single insertMediaSingleNode when there are multiple images&apos; data inserts multiple mediaSingle nodes into the document" time="0.013">
    </testcase>
    <testcase classname="media-single insertMediaSingleNode when current selection not empty at the beginning of the doc deletes the selection" name="media-single insertMediaSingleNode when current selection not empty at the beginning of the doc deletes the selection" time="0.003">
    </testcase>
    <testcase classname="media-single insertMediaSingleNode when current selection not empty at the middle of the doc deletes the selection" name="media-single insertMediaSingleNode when current selection not empty at the middle of the doc deletes the selection" time="0.004">
    </testcase>
    <testcase classname="media-single insertMediaSingleNode when current selection not empty at the end of the doc deletes the selection" name="media-single insertMediaSingleNode when current selection not empty at the end of the doc deletes the selection" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="clear-formatting" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:33" time="2.757" tests="21">
    <testcase classname="clear-formatting formattingIsPresent should be true if some marks are present" name="clear-formatting formattingIsPresent should be true if some marks are present" time="0.015">
    </testcase>
    <testcase classname="clear-formatting formattingIsPresent should be true if a header is present" name="clear-formatting formattingIsPresent should be true if a header is present" time="0.012">
    </testcase>
    <testcase classname="clear-formatting formattingIsPresent should be false if a code blocks is present" name="clear-formatting formattingIsPresent should be false if a code blocks is present" time="0.003">
    </testcase>
    <testcase classname="clear-formatting formattingIsPresent should be false if no marks are present" name="clear-formatting formattingIsPresent should be false if no marks are present" time="0.002">
    </testcase>
    <testcase classname="clear-formatting formattingIsPresent should be false if all present marks are cleared" name="clear-formatting formattingIsPresent should be false if all present marks are cleared" time="0.009">
    </testcase>
    <testcase classname="clear-formatting formattingIsPresent should be false if all present blocks are cleared" name="clear-formatting formattingIsPresent should be false if all present blocks are cleared" time="0.007">
    </testcase>
    <testcase classname="clear-formatting formattingIsPresent should be false if all present marks and blocks are cleared" name="clear-formatting formattingIsPresent should be false if all present marks and blocks are cleared" time="0.003">
    </testcase>
    <testcase classname="clear-formatting clearFormatting should clear strong if present" name="clear-formatting clearFormatting should clear strong if present" time="0.006">
    </testcase>
    <testcase classname="clear-formatting clearFormatting should clear italic if present" name="clear-formatting clearFormatting should clear italic if present" time="0.007">
    </testcase>
    <testcase classname="clear-formatting clearFormatting should clear underline if present" name="clear-formatting clearFormatting should clear underline if present" time="0.005">
    </testcase>
    <testcase classname="clear-formatting clearFormatting should clear monospace if present" name="clear-formatting clearFormatting should clear monospace if present" time="0.006">
    </testcase>
    <testcase classname="clear-formatting clearFormatting should clear strikeout if present" name="clear-formatting clearFormatting should clear strikeout if present" time="0.004">
    </testcase>
    <testcase classname="clear-formatting clearFormatting should clear text color if present" name="clear-formatting clearFormatting should clear text color if present" time="0.005">
    </testcase>
    <testcase classname="clear-formatting clearFormatting should remove heading blocks if present" name="clear-formatting clearFormatting should remove heading blocks if present" time="0.01">
    </testcase>
    <testcase classname="clear-formatting clearFormatting should remove superscript if present" name="clear-formatting clearFormatting should remove superscript if present" time="0.004">
    </testcase>
    <testcase classname="clear-formatting clearFormatting should remove subscript if present" name="clear-formatting clearFormatting should remove subscript if present" time="0.004">
    </testcase>
    <testcase classname="clear-formatting clearFormatting should not remove panel block if present" name="clear-formatting clearFormatting should not remove panel block if present" time="0.022">
    </testcase>
    <testcase classname="clear-formatting clearFormatting should not remove block-quote if present" name="clear-formatting clearFormatting should not remove block-quote if present" time="0.003">
    </testcase>
    <testcase classname="clear-formatting clearFormatting should not remove link if present" name="clear-formatting clearFormatting should not remove link if present" time="0.003">
    </testcase>
    <testcase classname="clear-formatting clearFormatting should not remove ordered list item if present" name="clear-formatting clearFormatting should not remove ordered list item if present" time="0.004">
    </testcase>
    <testcase classname="clear-formatting keymap should clear formatting" name="clear-formatting keymap should clear formatting" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Flag" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:36" time="2.447" tests="19">
    <testcase classname="Flag rendering should instantiate" name="Flag rendering should instantiate" time="0.009">
    </testcase>
    <testcase classname="Flag rendering icon prop element should be rendered to correct location" name="Flag rendering icon prop element should be rendered to correct location" time="0.002">
    </testcase>
    <testcase classname="Flag rendering title prop text should be rendered to correct location" name="Flag rendering title prop text should be rendered to correct location" time="0.002">
    </testcase>
    <testcase classname="Flag description prop description element should not be rendered if description prop is empty" name="Flag description prop description element should not be rendered if description prop is empty" time="0.166">
    </testcase>
    <testcase classname="Flag description prop description element should not be rendered if description prop not passed" name="Flag description prop description element should not be rendered if description prop not passed" time="0.016">
    </testcase>
    <testcase classname="Flag description prop description prop text should be rendered to correct location" name="Flag description prop description prop text should be rendered to correct location" time="0.018">
    </testcase>
    <testcase classname="Flag description prop should accept JSX in description" name="Flag description prop should accept JSX in description" time="0.018">
    </testcase>
    <testcase classname="Flag appearance prop basic appearance tests should default to normal appearance" name="Flag appearance prop basic appearance tests should default to normal appearance" time="0.001">
    </testcase>
    <testcase classname="Flag appearance prop basic appearance tests should apply supplied appearance to root element" name="Flag appearance prop basic appearance tests should apply supplied appearance to root element" time="0.008">
    </testcase>
    <testcase classname="Flag appearance prop non-bold (normal) appearance should not render dismiss icon if isDismissAllowed is false or if no onDismissed callback is provided" name="Flag appearance prop non-bold (normal) appearance should not render dismiss icon if isDismissAllowed is false or if no onDismissed callback is provided" time="0.018">
    </testcase>
    <testcase classname="Flag appearance prop non-bold (normal) appearance should render dismiss icon if isDismissAllowed" name="Flag appearance prop non-bold (normal) appearance should render dismiss icon if isDismissAllowed" time="0.038">
    </testcase>
    <testcase classname="Flag appearance prop bold appearances should default to being not expanded" name="Flag appearance prop bold appearances should default to being not expanded" time="0.015">
    </testcase>
    <testcase classname="Flag appearance prop bold appearances should set isExpanded to true when icon clicked" name="Flag appearance prop bold appearances should set isExpanded to true when icon clicked" time="0.033">
    </testcase>
    <testcase classname="Flag appearance prop bold appearances should render a chevron-down icon if not expanded" name="Flag appearance prop bold appearances should render a chevron-down icon if not expanded" time="0.017">
    </testcase>
    <testcase classname="Flag appearance prop bold appearances should render a chevron-up icon if expanded" name="Flag appearance prop bold appearances should render a chevron-up icon if expanded" time="0.026">
    </testcase>
    <testcase classname="Flag appearance prop bold appearances should only render an expand button if either description or actions props are set" name="Flag appearance prop bold appearances should only render an expand button if either description or actions props are set" time="0.022">
    </testcase>
    <testcase classname="Flag appearance prop bold appearances should un-expand an expanded bold flag when the description and actions props are removed" name="Flag appearance prop bold appearances should un-expand an expanded bold flag when the description and actions props are removed" time="0.059">
    </testcase>
    <testcase classname="Flag appearance prop flag actions onDismissed should be called with flag id as param when dismiss icon clicked" name="Flag appearance prop flag actions onDismissed should be called with flag id as param when dismiss icon clicked" time="0.017">
    </testcase>
    <testcase classname="Flag appearance prop flag actions Dismiss button should not be rendered if isDismissAllowed is omitted" name="Flag appearance prop flag actions Dismiss button should not be rendered if isDismissAllowed is omitted" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="nodeviews/mediaSingle" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:34" time="4.624" tests="2">
    <testcase classname="nodeviews/mediaSingle sets child to isMediaSingle to be true" name="nodeviews/mediaSingle sets child to isMediaSingle to be true" time="0.046">
    </testcase>
    <testcase classname="nodeviews/mediaSingle notifies plugin if node layout is updated" name="nodeviews/mediaSingle notifies plugin if node layout is updated" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/Table" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:38" time="1.973" tests="1">
    <testcase classname="Renderer - React/Nodes/Table should create a &lt;table&gt;-tag" name="Renderer - React/Nodes/Table should create a &lt;table&gt;-tag" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema mention node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:41" time="3.649" tests="8">
    <testcase classname="@atlaskit/editor-common/schema mention node should have mention id and display name when serializing to DOM" name="@atlaskit/editor-common/schema mention node should have mention id and display name when serializing to DOM" time="0.043">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema mention node should extract the correct values of mention id and display name" name="@atlaskit/editor-common/schema mention node should extract the correct values of mention id and display name" time="0.268">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema mention node should ignore if userType is DEFAULT" name="@atlaskit/editor-common/schema mention node should ignore if userType is DEFAULT" time="0.044">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema mention node should have userType if it is SPECIAL" name="@atlaskit/editor-common/schema mention node should have userType if it is SPECIAL" time="0.041">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema mention node should have userType if it is APP" name="@atlaskit/editor-common/schema mention node should have userType if it is APP" time="0.016">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema mention node should extract the valid userTypes - SPECIAL" name="@atlaskit/editor-common/schema mention node should extract the valid userTypes - SPECIAL" time="0.042">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema mention node should extract the valid userTypes - APP" name="@atlaskit/editor-common/schema mention node should extract the valid userTypes - APP" time="0.136">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema mention node should not extract invalid value of userType" name="@atlaskit/editor-common/schema mention node should not extract invalid value of userType" time="0.103">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/LanguagePicker" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:34" time="13.665" tests="10">
    <testcase classname="@atlaskit/editor-core/ui/LanguagePicker when toolbarVisible is false does not render toolbar" name="@atlaskit/editor-core/ui/LanguagePicker when toolbarVisible is false does not render toolbar" time="0.031">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/LanguagePicker when toolbarVisible is true renders toolbar" name="@atlaskit/editor-core/ui/LanguagePicker when toolbarVisible is true renders toolbar" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/LanguagePicker when languageSelectFocused is true renders toolbar" name="@atlaskit/editor-core/ui/LanguagePicker when languageSelectFocused is true renders toolbar" time="0.019">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/LanguagePicker click on a code block element sets toolbarVisible to be true" name="@atlaskit/editor-core/ui/LanguagePicker click on a code block element sets toolbarVisible to be true" time="0.369">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/LanguagePicker click on a non code block element sets current code-block element to be undefined" name="@atlaskit/editor-core/ui/LanguagePicker click on a non code block element sets current code-block element to be undefined" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/LanguagePicker editor is blur LanguagePicker produce null HTML" name="@atlaskit/editor-core/ui/LanguagePicker editor is blur LanguagePicker produce null HTML" time="0.188">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/LanguagePicker when code block has a language shows the formatted language" name="@atlaskit/editor-core/ui/LanguagePicker when code block has a language shows the formatted language" time="0.019">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/LanguagePicker when code block has a language updates plugin with the formatted langauge" name="@atlaskit/editor-core/ui/LanguagePicker when code block has a language updates plugin with the formatted langauge" time="0.012">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/LanguagePicker when code block has no language set shows no specific language" name="@atlaskit/editor-core/ui/LanguagePicker when code block has no language set shows no specific language" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/LanguagePicker TrashIcon should be rendered in language picker floating toolbar" name="@atlaskit/editor-core/ui/LanguagePicker TrashIcon should be rendered in language picker floating toolbar" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema decisionItem node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:45" time="7.792" tests="3">
    <testcase classname="@atlaskit/editor-common/schema decisionItem node serializes to &lt;li&gt; with proper data-attributes" name="@atlaskit/editor-common/schema decisionItem node serializes to &lt;li&gt; with proper data-attributes" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema decisionItem node matches &lt;li data-decision-local-id&gt;" name="@atlaskit/editor-common/schema decisionItem node matches &lt;li data-decision-local-id&gt;" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema decisionItem node does not match &lt;li&gt;" name="@atlaskit/editor-common/schema decisionItem node does not match &lt;li&gt;" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/Extension" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:40" time="12.48" tests="2">
    <testcase classname="@atlaskit/editor-core/ui/Extension should render macro component" name="@atlaskit/editor-core/ui/Extension should render macro component" time="0.019">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/Extension should pass macroProvider into ExtensionComponent" name="@atlaskit/editor-core/ui/Extension should pass macroProvider into ExtensionComponent" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Image navigator" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:50" time="4.567" tests="18">
    <testcase classname="Image navigator with an imageSource should have image cropper" name="Image navigator with an imageSource should have image cropper" time="0.081">
    </testcase>
    <testcase classname="Image navigator with an imageSource should have slider" name="Image navigator with an imageSource should have slider" time="0.075">
    </testcase>
    <testcase classname="Image navigator with an imageSource when landscape image is loaded should have image width set" name="Image navigator with an imageSource when landscape image is loaded should have image width set" time="0.069">
    </testcase>
    <testcase classname="Image navigator with an imageSource when landscape image is loaded should have slider value set" name="Image navigator with an imageSource when landscape image is loaded should have slider value set" time="0.028">
    </testcase>
    <testcase classname="Image navigator with an imageSource when landscape image is loaded should have image scale set" name="Image navigator with an imageSource when landscape image is loaded should have image scale set" time="0.035">
    </testcase>
    <testcase classname="Image navigator with an imageSource when landscape image is loaded should have min scale set to minimum allowed" name="Image navigator with an imageSource when landscape image is loaded should have min scale set to minimum allowed" time="0.026">
    </testcase>
    <testcase classname="Image navigator with an imageSource when portrait image is loaded should have image scale set" name="Image navigator with an imageSource when portrait image is loaded should have image scale set" time="0.034">
    </testcase>
    <testcase classname="Image navigator with an imageSource when image is smaller then container should have image scale maxed to fit CONTAINER_SIZE" name="Image navigator with an imageSource when image is smaller then container should have image scale maxed to fit CONTAINER_SIZE" time="0.028">
    </testcase>
    <testcase classname="Image navigator with an imageSource should change scale in state when slider is moved" name="Image navigator with an imageSource should change scale in state when slider is moved" time="0.038">
    </testcase>
    <testcase classname="Image navigator with an imageSource should mark state as is dragging when mouse pressed down" name="Image navigator with an imageSource should mark state as is dragging when mouse pressed down" time="0.031">
    </testcase>
    <testcase classname="Image navigator with an imageSource should mark state as is not dragging when mouse unpressed" name="Image navigator with an imageSource should mark state as is not dragging when mouse unpressed" time="0.137">
    </testcase>
    <testcase classname="Image navigator with an imageSource when image is dragged should change state during drag" name="Image navigator with an imageSource when image is dragged should change state during drag" time="0.218">
    </testcase>
    <testcase classname="Image navigator with an imageSource when image is dragged should call onPositionChanged on drop" name="Image navigator with an imageSource when image is dragged should call onPositionChanged on drop" time="0.151">
    </testcase>
    <testcase classname="Image navigator with an imageSource when image is scaled should call onSizeChanged with new size" name="Image navigator with an imageSource when image is scaled should call onSizeChanged with new size" time="0.034">
    </testcase>
    <testcase classname="Image navigator with an imageSource when image is scaled should call onPositionChanged with new coordinates" name="Image navigator with an imageSource when image is scaled should call onPositionChanged with new coordinates" time="0.036">
    </testcase>
    <testcase classname="Image navigator with no imageSource should render ImageUploader to allow users to pick an image" name="Image navigator with no imageSource should render ImageUploader to allow users to pick an image" time="0.038">
    </testcase>
    <testcase classname="Image navigator with no imageSource when a file is dropped should set imageFile state with the image" name="Image navigator with no imageSource when a file is dropped should set imageFile state with the image" time="0.042">
    </testcase>
    <testcase classname="Image navigator with no imageSource when a file is dropped should not call onImageDropped when file is not an image" name="Image navigator with no imageSource when a file is dropped should not call onImageDropped when file is not an image" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="FlagGroup" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:54" time="1.519" tests="2">
    <testcase classname="FlagGroup should render the correct number of Flag children" name="FlagGroup should render the correct number of Flag children" time="0.145">
    </testcase>
    <testcase classname="FlagGroup onDismissed should be called when child Flag is dismissed" name="FlagGroup onDismissed should be called when child Flag is dismissed" time="0.169">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/BodiedExtension" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:53" time="1.721" tests="5">
    <testcase classname="Renderer - React/Nodes/BodiedExtension should be able to fall back to default content" name="Renderer - React/Nodes/BodiedExtension should be able to fall back to default content" time="0.012">
    </testcase>
    <testcase classname="Renderer - React/Nodes/BodiedExtension should be able to render React.Element from extensionHandler" name="Renderer - React/Nodes/BodiedExtension should be able to render React.Element from extensionHandler" time="0.004">
    </testcase>
    <testcase classname="Renderer - React/Nodes/BodiedExtension should be able to render Atlassian Document from extensionHandler" name="Renderer - React/Nodes/BodiedExtension should be able to render Atlassian Document from extensionHandler" time="0.012">
    </testcase>
    <testcase classname="Renderer - React/Nodes/BodiedExtension should render the default content if extensionHandler throws an exception" name="Renderer - React/Nodes/BodiedExtension should render the default content if extensionHandler throws an exception" time="0.003">
    </testcase>
    <testcase classname="Renderer - React/Nodes/BodiedExtension should be able to render the oringinlal content" name="Renderer - React/Nodes/BodiedExtension should be able to render the oringinlal content" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema link mark" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:55" time="1.655" tests="10">
    <testcase classname="@atlaskit/editor-common/schema link mark matches &lt;a href=&quot;http://atlassian.com&quot;&gt;foo&lt;/a&gt;" name="@atlaskit/editor-common/schema link mark matches &lt;a href=&quot;http://atlassian.com&quot;&gt;foo&lt;/a&gt;" time="0.046">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema link mark matches &lt;a href=&quot;http://atlassian.com&quot; title=&quot;test&quot; alt=&quot;hello&quot;&gt;foo&lt;/a&gt;" name="@atlaskit/editor-common/schema link mark matches &lt;a href=&quot;http://atlassian.com&quot; title=&quot;test&quot; alt=&quot;hello&quot;&gt;foo&lt;/a&gt;" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema link mark matches &lt;a href=&quot;http://atlassian.com/test&quot;&gt;foo&lt;/a&gt;" name="@atlaskit/editor-common/schema link mark matches &lt;a href=&quot;http://atlassian.com/test&quot;&gt;foo&lt;/a&gt;" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema link mark matches &lt;a href=&quot;http://atlassian.com?test=123&quot;&gt;foo&lt;/a&gt;" name="@atlaskit/editor-common/schema link mark matches &lt;a href=&quot;http://atlassian.com?test=123&quot;&gt;foo&lt;/a&gt;" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema link mark whitelist URLs should parse links starting from http://" name="@atlaskit/editor-common/schema link mark whitelist URLs should parse links starting from http://" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema link mark whitelist URLs should parse links starting from https://" name="@atlaskit/editor-common/schema link mark whitelist URLs should parse links starting from https://" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema link mark whitelist URLs should parse links starting from sourcetree://" name="@atlaskit/editor-common/schema link mark whitelist URLs should parse links starting from sourcetree://" time="0.025">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema link mark whitelist URLs should not parse links starting from javascript://" name="@atlaskit/editor-common/schema link mark whitelist URLs should not parse links starting from javascript://" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema link mark whitelist URLs should not parse links starting from javascript://" name="@atlaskit/editor-common/schema link mark whitelist URLs should not parse links starting from javascript://" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema link mark serializes to &lt;a href=&quot;http://atlassian.com&quot;&gt;foo&lt;/a&gt;" name="@atlaskit/editor-common/schema link mark serializes to &lt;a href=&quot;http://atlassian.com&quot;&gt;foo&lt;/a&gt;" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema inlineExtension node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:55" time="1.061" tests="4">
    <testcase classname="@atlaskit/editor-common/schema inlineExtension node parse html converts to inlineExtension PM node" name="@atlaskit/editor-common/schema inlineExtension node parse html converts to inlineExtension PM node" time="0.015">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema inlineExtension node parse html gets attributes from html" name="@atlaskit/editor-common/schema inlineExtension node parse html gets attributes from html" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema inlineExtension node encode html converts html data attributes to node attributes" name="@atlaskit/editor-common/schema inlineExtension node encode html converts html data attributes to node attributes" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema inlineExtension node encode html encodes and decodes to the same node" name="@atlaskit/editor-common/schema inlineExtension node encode html encodes and decodes to the same node" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Browser" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:56" time="0.957" tests="2">
    <testcase classname="Browser should append the input to the body" name="Browser should append the input to the body" time="0.017">
    </testcase>
    <testcase classname="Browser should remove the input from the body" name="Browser should remove the input from the body" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MediaViewer /&gt;" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:56" time="1.116" tests="3">
    <testcase classname="&lt;MediaViewer /&gt; with collection data source should get the correct collection provider" name="&lt;MediaViewer /&gt; with collection data source should get the correct collection provider" time="0.011">
    </testcase>
    <testcase classname="&lt;MediaViewer /&gt; with collection data source should accept a custom page size" name="&lt;MediaViewer /&gt; with collection data source should accept a custom page size" time="0.005">
    </testcase>
    <testcase classname="&lt;MediaViewer /&gt; with media list data source should get the correct collection provider" name="&lt;MediaViewer /&gt; with media list data source should get the correct collection provider" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:55" time="3.005" tests="2">
    <testcase classname="@atlaskit/editor-core Plugins -&gt; Table should be defined" name="@atlaskit/editor-core Plugins -&gt; Table should be defined" time="0.013">
    </testcase>
    <testcase classname="@atlaskit/editor-core Plugins -&gt; Table should have primaryToolbarComponent" name="@atlaskit/editor-core Plugins -&gt; Table should have primaryToolbarComponent" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="FileProvider" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:57" time="1.574" tests="6">
    <testcase classname="FileProvider should complete given file that succeeds immediately" name="FileProvider should complete given file that succeeds immediately" time="0.013">
    </testcase>
    <testcase classname="FileProvider should next partial items given file that succeeds in future" name="FileProvider should next partial items given file that succeeds in future" time="1.006">
    </testcase>
    <testcase classname="FileProvider should error given file service rejects" name="FileProvider should error given file service rejects" time="0.002">
    </testcase>
    <testcase classname="FileProvider should call the service only once for multiple observers" name="FileProvider should call the service only once for multiple observers" time="0.007">
    </testcase>
    <testcase classname="FileProvider should replay last file item after completion" name="FileProvider should replay last file item after completion" time="0.003">
    </testcase>
    <testcase classname="FileProvider should replay complete event after completion" name="FileProvider should replay complete event after completion" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/MediaComponent" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:58" time="2.664" tests="10">
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent should render a CardView component if the media type is file without provider" name="@atlaskit/editor-core/ui/MediaComponent should render a CardView component if the media type is file without provider" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent should render a Card component if the media is a public file with provider" name="@atlaskit/editor-core/ui/MediaComponent should render a Card component if the media is a public file with provider" time="0.013">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent should render a CardView component if the media is a temporary file with provider" name="@atlaskit/editor-core/ui/MediaComponent should render a CardView component if the media is a temporary file with provider" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent should render nothing if media type is link without provider" name="@atlaskit/editor-core/ui/MediaComponent should render nothing if media type is link without provider" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent should render nothing if linkCreateContext not provided" name="@atlaskit/editor-core/ui/MediaComponent should render nothing if linkCreateContext not provided" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent should render a Card component if media type is link with provider" name="@atlaskit/editor-core/ui/MediaComponent should render a Card component if media type is link with provider" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent when appearance is set renders a Card component with the customized appearance" name="@atlaskit/editor-core/ui/MediaComponent when appearance is set renders a Card component with the customized appearance" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent when appearance is not set renders a link Card component with the default appearance" name="@atlaskit/editor-core/ui/MediaComponent when appearance is not set renders a link Card component with the default appearance" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent should use stateManager from Plugin state in Editor mode" name="@atlaskit/editor-core/ui/MediaComponent should use stateManager from Plugin state in Editor mode" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/MediaComponent should not raise exception if there is no linkCreateContext in mediaProvider" name="@atlaskit/editor-core/ui/MediaComponent should not raise exception if there is no linkCreateContext in mediaProvider" time="0.162">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Sidebar /&gt;" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:59" time="1.815" tests="3">
    <testcase classname="&lt;Sidebar /&gt; should deliver all required props to stateless component" name="&lt;Sidebar /&gt; should deliver all required props to stateless component" time="0.012">
    </testcase>
    <testcase classname="&lt;Sidebar /&gt; #render() should render ServiceList, 3 SidebarItems and Separator" name="&lt;Sidebar /&gt; #render() should render ServiceList, 3 SidebarItems and Separator" time="0.011">
    </testcase>
    <testcase classname="&lt;Sidebar /&gt; #render() should use selected prop to pass isActive prop to SidebarItem components" name="&lt;Sidebar /&gt; #render() should use selected prop to pass isActive prop to SidebarItem components" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="Flag Expander" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:39:59" time="2.524" tests="4">
    <testcase classname="Flag Expander should only render children when isExpanded true (and while doing expand/contract animation)" name="Flag Expander should only render children when isExpanded true (and while doing expand/contract animation)" time="0.087">
    </testcase>
    <testcase classname="Flag Expander should set aria-hidden true on content when isExpanded is false" name="Flag Expander should set aria-hidden true on content when isExpanded is false" time="0.05">
    </testcase>
    <testcase classname="Flag Expander should set aria-hidden false on content when isExpanded is true" name="Flag Expander should set aria-hidden false on content when isExpanded is true" time="0.052">
    </testcase>
    <testcase classname="Flag Expander should pass appearance value on to styled sub-components" name="Flag Expander should pass appearance value on to styled sub-components" time="0.068">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/InlineExtension" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:01" time="1.571" tests="4">
    <testcase classname="Renderer - React/Nodes/InlineExtension should be able to fall back to default content" name="Renderer - React/Nodes/InlineExtension should be able to fall back to default content" time="0.016">
    </testcase>
    <testcase classname="Renderer - React/Nodes/InlineExtension should be able to render React.Element from extensionHandler" name="Renderer - React/Nodes/InlineExtension should be able to render React.Element from extensionHandler" time="0.005">
    </testcase>
    <testcase classname="Renderer - React/Nodes/InlineExtension should be able to render Atlassian Document from extensionHandler" name="Renderer - React/Nodes/InlineExtension should be able to render Atlassian Document from extensionHandler" time="0.009">
    </testcase>
    <testcase classname="Renderer - React/Nodes/InlineExtension should render the default content if extensionHandler throws an exception" name="Renderer - React/Nodes/InlineExtension should render the default content if extensionHandler throws an exception" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/Mention" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:02" time="1.235" tests="7">
    <testcase classname="@atlaskit/editor-core/ui/Mention should render resourced mention" name="@atlaskit/editor-core/ui/Mention should render resourced mention" time="0.02">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if profilecardProvider is not set" name="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if profilecardProvider is not set" time="0.012">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/Mention should pass provider into resourced mention" name="@atlaskit/editor-core/ui/Mention should pass provider into resourced mention" time="0.043">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if profilecardProvider promise is rejected" name="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if profilecardProvider promise is rejected" time="0.008">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if id is generic (HipChat)" name="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if id is generic (HipChat)" time="0.009">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if id is generic (all)" name="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if id is generic (all)" time="0.006">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if id is generic (here)" name="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if id is generic (here)" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - ReactSerializer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:01" time="2.576" tests="4">
    <testcase classname="Renderer - ReactSerializer serializeFragment should render document" name="Renderer - ReactSerializer serializeFragment should render document" time="0.04">
    </testcase>
    <testcase classname="Renderer - ReactSerializer buildMarkStructure should wrap text nodes with marks" name="Renderer - ReactSerializer buildMarkStructure should wrap text nodes with marks" time="0">
    </testcase>
    <testcase classname="Renderer - ReactSerializer getMarks should sort marks" name="Renderer - ReactSerializer getMarks should sort marks" time="0">
    </testcase>
    <testcase classname="Renderer - ReactSerializer getMarkProps should pass eventHandlers to mark component" name="Renderer - ReactSerializer getMarkProps should pass eventHandlers to mark component" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Card" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:03" time="1.515" tests="13">
    <testcase classname="Card should render media card with UrlPreviewProvider when passed a UrlPreviewIdentifier" name="Card should render media card with UrlPreviewProvider when passed a UrlPreviewIdentifier" time="0.021">
    </testcase>
    <testcase classname="Card should render media card with MediaItemProvider when passed a MediaIdentifier with mediaItemType &quot;link&quot;" name="Card should render media card with MediaItemProvider when passed a MediaIdentifier with mediaItemType &quot;link&quot;" time="0.004">
    </testcase>
    <testcase classname="Card should render media card with MediaItemProvider when passed a MediaIdentifier with mediaItemType &quot;file&quot;" name="Card should render media card with MediaItemProvider when passed a MediaIdentifier with mediaItemType &quot;file&quot;" time="0.004">
    </testcase>
    <testcase classname="Card should render media card with a new MediaItemProvider when the context changes" name="Card should render media card with a new MediaItemProvider when the context changes" time="0.01">
    </testcase>
    <testcase classname="Card should render media card with a new MediaItemProvider when the identifier changes" name="Card should render media card with a new MediaItemProvider when the identifier changes" time="0.005">
    </testcase>
    <testcase classname="Card should fire onClick when passed in as a prop and MediaCard fires onClick" name="Card should fire onClick when passed in as a prop and MediaCard fires onClick" time="0.003">
    </testcase>
    <testcase classname="Card should pass onMouseEnter to MediaCard" name="Card should pass onMouseEnter to MediaCard" time="0.002">
    </testcase>
    <testcase classname="Card should use lazy load by default" name="Card should use lazy load by default" time="0.002">
    </testcase>
    <testcase classname="Card should not use lazy load when &quot;isLazy&quot; is false" name="Card should not use lazy load when &quot;isLazy&quot; is false" time="0.064">
    </testcase>
    <testcase classname="Card should pass properties down to MediaCard" name="Card should pass properties down to MediaCard" time="0.003">
    </testcase>
    <testcase classname="Card should create a card placeholder with the right props" name="Card should create a card placeholder with the right props" time="0.004">
    </testcase>
    <testcase classname="Card should use &quot;crop&quot; as default resizeMode" name="Card should use &quot;crop&quot; as default resizeMode" time="0.155">
    </testcase>
    <testcase classname="Card should pass right resizeMode down" name="Card should pass right resizeMode down" time="0.059">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema strike mark" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:03" time="1.385" tests="5">
    <testcase classname="@atlaskit/editor-common/schema strike mark matches &lt;s&gt;text&lt;/s&gt;" name="@atlaskit/editor-common/schema strike mark matches &lt;s&gt;text&lt;/s&gt;" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema strike mark matches &lt;del&gt;text&lt;/del&gt;" name="@atlaskit/editor-common/schema strike mark matches &lt;del&gt;text&lt;/del&gt;" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema strike mark matches &lt;strike&gt;text&lt;/strike&gt;" name="@atlaskit/editor-common/schema strike mark matches &lt;strike&gt;text&lt;/strike&gt;" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema strike mark matches &lt;span style=&quot;text-decoration: line-through&quot;&gt;text&lt;/span&gt;" name="@atlaskit/editor-common/schema strike mark matches &lt;span style=&quot;text-decoration: line-through&quot;&gt;text&lt;/span&gt;" time="0.023">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema strike mark serializes to &lt;s&gt;" name="@atlaskit/editor-common/schema strike mark serializes to &lt;s&gt;" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Tag component" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:05" time="1.074" tests="24">
    <testcase classname="Tag component Test Tag with removable link" name="Tag component Test Tag with removable link" time="0.094">
    </testcase>
    <testcase classname="Tag component onBeforeRemoveAction callback contract" name="Tag component onBeforeRemoveAction callback contract" time="0.022">
    </testcase>
    <testcase classname="Tag component onAfterRemoveAction callback contract" name="Tag component onAfterRemoveAction callback contract" time="0.035">
    </testcase>
    <testcase classname="Tag component onAfterRemoveAction should not be called if onBeforeRemoveAction returns false" name="Tag component onAfterRemoveAction should not be called if onBeforeRemoveAction returns false" time="0.02">
    </testcase>
    <testcase classname="Tag component set markedForRemoval via mouse events on remove button" name="Tag component set markedForRemoval via mouse events on remove button" time="0.03">
    </testcase>
    <testcase classname="Tag component remove via keypress on remove button" name="Tag component remove via keypress on remove button" time="0.018">
    </testcase>
    <testcase classname="Tag component Tag allows us to set props" name="Tag component Tag allows us to set props" time="0.017">
    </testcase>
    <testcase classname="Tag component appearance prop should set the isRounded prop of Chrome and Remove to true when set to &quot;rounded&quot;" name="Tag component appearance prop should set the isRounded prop of Chrome and Remove to true when set to &quot;rounded&quot;" time="0.02">
    </testcase>
    <testcase classname="Tag component appearance prop should set the isRounded prop of Chrome and Remove to false when not set to &quot;rounded&quot;" name="Tag component appearance prop should set the isRounded prop of Chrome and Remove to false when not set to &quot;rounded&quot;" time="0.014">
    </testcase>
    <testcase classname="Tag component elemBefore prop should render anything passed to it" name="Tag component elemBefore prop should render anything passed to it" time="0.014">
    </testcase>
    <testcase classname="Tag component elemBefore prop should render the elemBefore before the content" name="Tag component elemBefore prop should render the elemBefore before the content" time="0.015">
    </testcase>
    <testcase classname="Tag component text prop should render text to a Content block" name="Tag component text prop should render text to a Content block" time="0.006">
    </testcase>
    <testcase classname="Tag component href prop should cause an anchor to be rendered" name="Tag component href prop should cause an anchor to be rendered" time="0.008">
    </testcase>
    <testcase classname="Tag component href prop should reflect the href onto the anchor" name="Tag component href prop should reflect the href onto the anchor" time="0.007">
    </testcase>
    <testcase classname="Tag component href prop should set the isLink prop on Chrome" name="Tag component href prop should set the isLink prop on Chrome" time="0.009">
    </testcase>
    <testcase classname="Tag component removeButtonText prop should not render a button if not set" name="Tag component removeButtonText prop should not render a button if not set" time="0.012">
    </testcase>
    <testcase classname="Tag component removeButtonText prop should render a button if set" name="Tag component removeButtonText prop should render a button if set" time="0.01">
    </testcase>
    <testcase classname="Tag component removeButtonText prop should set the removeText prop of button if set" name="Tag component removeButtonText prop should set the removeText prop of button if set" time="0.01">
    </testcase>
    <testcase classname="Tag component onBeforeRemoveAction prop should be called if button is clicked" name="Tag component onBeforeRemoveAction prop should be called if button is clicked" time="0.012">
    </testcase>
    <testcase classname="Tag component onAfterRemoveAction prop should be called after remove animation is completed" name="Tag component onAfterRemoveAction prop should be called after remove animation is completed" time="0.018">
    </testcase>
    <testcase classname="Tag component onAfterRemoveAction prop should not be called if onBeforeRemoveAction returns false" name="Tag component onAfterRemoveAction prop should not be called if onBeforeRemoveAction returns false" time="0.007">
    </testcase>
    <testcase classname="Tag component color prop should render with a color option" name="Tag component color prop should render with a color option" time="0.013">
    </testcase>
    <testcase classname="Tag component color prop should render the standard color option if no color option is provided" name="Tag component color prop should render the standard color option if no color option is provided" time="0.006">
    </testcase>
    <testcase classname="Tag component color prop should render the standard color option if missing color option is provided" name="Tag component color prop should render the standard color option if missing color option is provided" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema taskItem node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:05" time="1.257" tests="3">
    <testcase classname="@atlaskit/editor-common/schema taskItem node serializes to &lt;li&gt; with proper data-attributes" name="@atlaskit/editor-common/schema taskItem node serializes to &lt;li&gt; with proper data-attributes" time="0.015">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema taskItem node matches &lt;li data-task-local-id&gt;" name="@atlaskit/editor-common/schema taskItem node matches &lt;li data-task-local-id&gt;" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema taskItem node does not match &lt;li&gt;" name="@atlaskit/editor-common/schema taskItem node does not match &lt;li&gt;" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="CardGenericViewSmall" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:04" time="3.12" tests="14">
    <testcase classname="CardGenericViewSmall InfoView should align to the bottom when title is undefined and isLoading=false" name="CardGenericViewSmall InfoView should align to the bottom when title is undefined and isLoading=false" time="0.02">
    </testcase>
    <testcase classname="CardGenericViewSmall InfoView should align to the top when icon and subtitle is undefined and isLoading=false" name="CardGenericViewSmall InfoView should align to the top when icon and subtitle is undefined and isLoading=false" time="0.006">
    </testcase>
    <testcase classname="CardGenericViewSmall InfoView should not align when both Title and Body are displayed" name="CardGenericViewSmall InfoView should not align when both Title and Body are displayed" time="0.013">
    </testcase>
    <testcase classname="CardGenericViewSmall InfoView should render the title when the title is defined" name="CardGenericViewSmall InfoView should render the title when the title is defined" time="0.025">
    </testcase>
    <testcase classname="CardGenericViewSmall InfoView should render the title when isLoading=true" name="CardGenericViewSmall InfoView should render the title when isLoading=true" time="0.016">
    </testcase>
    <testcase classname="CardGenericViewSmall InfoView should not render the title when the title is undefined and isLoading=false" name="CardGenericViewSmall InfoView should not render the title when the title is undefined and isLoading=false" time="0.005">
    </testcase>
    <testcase classname="CardGenericViewSmall InfoView should render the body when the icon is defined" name="CardGenericViewSmall InfoView should render the body when the icon is defined" time="0.015">
    </testcase>
    <testcase classname="CardGenericViewSmall InfoView should render the body when the subtitle is defined" name="CardGenericViewSmall InfoView should render the body when the subtitle is defined" time="0.004">
    </testcase>
    <testcase classname="CardGenericViewSmall InfoView should render the body when isLoading=true" name="CardGenericViewSmall InfoView should render the body when isLoading=true" time="0.011">
    </testcase>
    <testcase classname="CardGenericViewSmall InfoView should not render the body when icon and subtitle are undefined and isLoading=false" name="CardGenericViewSmall InfoView should not render the body when icon and subtitle are undefined and isLoading=false" time="0.005">
    </testcase>
    <testcase classname="CardGenericViewSmall InfoView should not render the icon when icon is undefined and isLoading=false" name="CardGenericViewSmall InfoView should not render the icon when icon is undefined and isLoading=false" time="0.01">
    </testcase>
    <testcase classname="CardGenericViewSmall InfoView should not render the icon when icon is undefined and isLoading=true" name="CardGenericViewSmall InfoView should not render the icon when icon is undefined and isLoading=true" time="0.012">
    </testcase>
    <testcase classname="CardGenericViewSmall InfoView should not render the icon when icon is defined and isLoading=true" name="CardGenericViewSmall InfoView should not render the icon when icon is defined and isLoading=true" time="0.005">
    </testcase>
    <testcase classname="CardGenericViewSmall InfoView should render the icon when icon is defined and isLoading=false" name="CardGenericViewSmall InfoView should render the icon when icon is defined and isLoading=false" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema underline emoji node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:06" time="1.581" tests="5">
    <testcase classname="@atlaskit/editor-common/schema underline emoji node should have all emoji node props when serializing to DOM" name="@atlaskit/editor-common/schema underline emoji node should have all emoji node props when serializing to DOM" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema underline emoji node should extract the correct values of emoji id" name="@atlaskit/editor-common/schema underline emoji node should extract the correct values of emoji id" time="0.05">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema underline emoji node should have minimal emoji id props when serializing to DOM (minimal representation)" name="@atlaskit/editor-common/schema underline emoji node should have minimal emoji id props when serializing to DOM (minimal representation)" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema underline emoji node should extract the correct values of emoji (minimal representation)" name="@atlaskit/editor-common/schema underline emoji node should extract the correct values of emoji (minimal representation)" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema underline emoji node should extract the correct values of emoji from bitbucket (minimal representation)" name="@atlaskit/editor-common/schema underline emoji node should extract the correct values of emoji from bitbucket (minimal representation)" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Marks/Action" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:08" time="0.877" tests="3">
    <testcase classname="Renderer - React/Marks/Action should wrap content with &lt;span&gt;-tag" name="Renderer - React/Marks/Action should wrap content with &lt;span&gt;-tag" time="0.01">
    </testcase>
    <testcase classname="Renderer - React/Marks/Action should pass target to event handler" name="Renderer - React/Marks/Action should pass target to event handler" time="0.007">
    </testcase>
    <testcase classname="Renderer - React/Marks/Action should not throw if event handler is not defined" name="Renderer - React/Marks/Action should not throw if event handler is not defined" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="Layer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:09" time="1.626" tests="6">
    <testcase classname="Layer should be possible to create a component" name="Layer should be possible to create a component" time="0.004">
    </testcase>
    <testcase classname="Layer children should be rendered by Layer" name="Layer children should be rendered by Layer" time="0.002">
    </testcase>
    <testcase classname="Layer children should be rendered with opacity:0 until Popper extracts styles" name="Layer children should be rendered with opacity:0 until Popper extracts styles" time="0.021">
    </testcase>
    <testcase classname="Layer content prop should be rendered by Layer" name="Layer content prop should be rendered by Layer" time="0.002">
    </testcase>
    <testcase classname="Layer state cssPosition and transform should be reflected on the popper div" name="Layer state cssPosition and transform should be reflected on the popper div" time="0.011">
    </testcase>
    <testcase classname="Layer state flipped should cause onFlippedChange callback to be called" name="Layer state flipped should cause onFlippedChange callback to be called" time="0.508">
    </testcase>
  </testsuite>
  <testsuite name="LoadingContainerAdvanced" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:07" time="3.482" tests="24">
    <testcase classname="LoadingContainerAdvanced should always wrap contents into the container with a relative position so absolute positioned elements inside the children behave consistently despite the loading mode" name="LoadingContainerAdvanced should always wrap contents into the container with a relative position so absolute positioned elements inside the children behave consistently despite the loading mode" time="0.088">
    </testcase>
    <testcase classname="LoadingContainerAdvanced should always render children as is right inside the container" name="LoadingContainerAdvanced should always render children as is right inside the container" time="0.009">
    </testcase>
    <testcase classname="LoadingContainerAdvanced should not render the spinner container when the loading mode is off" name="LoadingContainerAdvanced should not render the spinner container when the loading mode is off" time="0.01">
    </testcase>
    <testcase classname="LoadingContainerAdvanced should render with a proper default values" name="LoadingContainerAdvanced should render with a proper default values" time="0.02">
    </testcase>
    <testcase classname="LoadingContainerAdvanced should render the spinner of a given size" name="LoadingContainerAdvanced should render the spinner of a given size" time="0.019">
    </testcase>
    <testcase classname="LoadingContainerAdvanced target manipulations should update styles on mount only when loading and there is a target node" name="LoadingContainerAdvanced target manipulations should update styles on mount only when loading and there is a target node" time="0.094">
    </testcase>
    <testcase classname="LoadingContainerAdvanced target manipulations should set styles to the children if the targetRef is not defined and revert them on loading mode change" name="LoadingContainerAdvanced target manipulations should set styles to the children if the targetRef is not defined and revert them on loading mode change" time="0.032">
    </testcase>
    <testcase classname="LoadingContainerAdvanced target manipulations should set styles to the target and revert them on loading mode change" name="LoadingContainerAdvanced target manipulations should set styles to the target and revert them on loading mode change" time="0.019">
    </testcase>
    <testcase classname="LoadingContainerAdvanced spinner manipulations should do nothing when both target and spinner are off screen" name="LoadingContainerAdvanced spinner manipulations should do nothing when both target and spinner are off screen" time="0.017">
    </testcase>
    <testcase classname="LoadingContainerAdvanced spinner manipulations centers the spinner using default positioning (defined via styled-component) should center when the target is fully visible" name="LoadingContainerAdvanced spinner manipulations centers the spinner using default positioning (defined via styled-component) should center when the target is fully visible" time="0.032">
    </testcase>
    <testcase classname="LoadingContainerAdvanced spinner manipulations centers the spinner using default positioning (defined via styled-component) should center when the target is too small for the spinner to follow (&lt; 3x spinner height)" name="LoadingContainerAdvanced spinner manipulations centers the spinner using default positioning (defined via styled-component) should center when the target is too small for the spinner to follow (&lt; 3x spinner height)" time="0.04">
    </testcase>
    <testcase classname="LoadingContainerAdvanced spinner manipulations centers the spinner using default positioning (defined via styled-component) should center when the target is not visible anymore but the spinner still is" name="LoadingContainerAdvanced spinner manipulations centers the spinner using default positioning (defined via styled-component) should center when the target is not visible anymore but the spinner still is" time="0.044">
    </testcase>
    <testcase classname="LoadingContainerAdvanced spinner manipulations centers the spinner using default positioning (defined via styled-component) should calculate proper top offset when the target is not the children and has some offset" name="LoadingContainerAdvanced spinner manipulations centers the spinner using default positioning (defined via styled-component) should calculate proper top offset when the target is not the children and has some offset" time="0.018">
    </testcase>
    <testcase classname="LoadingContainerAdvanced spinner manipulations positions the spinner using fixed css rule should position properly when only the head of the target is visible" name="LoadingContainerAdvanced spinner manipulations positions the spinner using fixed css rule should position properly when only the head of the target is visible" time="0.139">
    </testcase>
    <testcase classname="LoadingContainerAdvanced spinner manipulations positions the spinner using fixed css rule should position properly the target which takes all viewport, nor its head nor tail are visible" name="LoadingContainerAdvanced spinner manipulations positions the spinner using fixed css rule should position properly the target which takes all viewport, nor its head nor tail are visible" time="0.022">
    </testcase>
    <testcase classname="LoadingContainerAdvanced spinner manipulations positions the spinner using fixed css rule should position properly when only the tail of the target is visible" name="LoadingContainerAdvanced spinner manipulations positions the spinner using fixed css rule should position properly when only the tail of the target is visible" time="0.015">
    </testcase>
    <testcase classname="LoadingContainerAdvanced helpers isVerticallyVisible should detect whether the given rect is vertically visible (at least partially)" name="LoadingContainerAdvanced helpers isVerticallyVisible should detect whether the given rect is vertically visible (at least partially)" time="0.028">
    </testcase>
    <testcase classname="LoadingContainerAdvanced helpers isFullyVerticallyVisible should detect whether the given rect is fully vertically visible" name="LoadingContainerAdvanced helpers isFullyVerticallyVisible should detect whether the given rect is fully vertically visible" time="0.018">
    </testcase>
    <testcase classname="LoadingContainerAdvanced listeners should attach the listeners on mount only when loading and there is a target node" name="LoadingContainerAdvanced listeners should attach the listeners on mount only when loading and there is a target node" time="0.065">
    </testcase>
    <testcase classname="LoadingContainerAdvanced listeners should attach the listeners on props change only when it makes sense" name="LoadingContainerAdvanced listeners should attach the listeners on props change only when it makes sense" time="0.06">
    </testcase>
    <testcase classname="LoadingContainerAdvanced listeners should detach the listeners on props change" name="LoadingContainerAdvanced listeners should detach the listeners on props change" time="0.028">
    </testcase>
    <testcase classname="LoadingContainerAdvanced listeners should detach the listeners on unmount" name="LoadingContainerAdvanced listeners should detach the listeners on unmount" time="0.018">
    </testcase>
    <testcase classname="LoadingContainerAdvanced listeners should update spinner position on resize" name="LoadingContainerAdvanced listeners should update spinner position on resize" time="0.013">
    </testcase>
    <testcase classname="LoadingContainerAdvanced listeners should update spinner position on scroll" name="LoadingContainerAdvanced listeners should update spinner position on scroll" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/datetime-picker" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:06" time="4.376" tests="1">
    <testcase classname="@atlaskit/datetime-picker DatePickerStateless renders a Picker with a DateDialog and DateField" name="@atlaskit/datetime-picker DatePickerStateless renders a Picker with a DateDialog and DateField" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="parseChangesetCommit" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:10" time="0.622" tests="3">
    <testcase classname="parseChangesetCommit should be able to parse a commit message and return json" name="parseChangesetCommit should be able to parse a commit message and return json" time="0.004">
    </testcase>
    <testcase classname="parseChangesetCommit should return the same json used to create it in createChangesetCommit" name="parseChangesetCommit should return the same json used to create it in createChangesetCommit" time="0.001">
    </testcase>
    <testcase classname="parseChangesetCommit should not care about empty lines" name="parseChangesetCommit should not care about empty lines" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/datetime-picker" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:10" time="0.734" tests="2">
    <testcase classname="@atlaskit/datetime-picker TimePickerStateless renders a Picker with a TimeDialog and TimeField" name="@atlaskit/datetime-picker TimePickerStateless renders a Picker with a TimeDialog and TimeField" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker TimePickerStateless passes the focused and times properties to the dialog" name="@atlaskit/datetime-picker TimePickerStateless passes the focused and times properties to the dialog" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="CardGenericViewSmall" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:11" time="0.34" tests="6">
    <testcase classname="CardGenericViewSmall MediaTypeIcon IconWrapper should render the correct color when type=&quot;image&quot;" name="CardGenericViewSmall MediaTypeIcon IconWrapper should render the correct color when type=&quot;image&quot;" time="0.008">
    </testcase>
    <testcase classname="CardGenericViewSmall MediaTypeIcon IconWrapper should render the correct color when type=&quot;audio&quot;" name="CardGenericViewSmall MediaTypeIcon IconWrapper should render the correct color when type=&quot;audio&quot;" time="0.003">
    </testcase>
    <testcase classname="CardGenericViewSmall MediaTypeIcon IconWrapper should render the correct color when type=&quot;video&quot;" name="CardGenericViewSmall MediaTypeIcon IconWrapper should render the correct color when type=&quot;video&quot;" time="0.002">
    </testcase>
    <testcase classname="CardGenericViewSmall MediaTypeIcon IconWrapper should render the correct color when type=&quot;doc&quot;" name="CardGenericViewSmall MediaTypeIcon IconWrapper should render the correct color when type=&quot;doc&quot;" time="0.002">
    </testcase>
    <testcase classname="CardGenericViewSmall MediaTypeIcon IconWrapper should render the correct color when type=&quot;unknown&quot;" name="CardGenericViewSmall MediaTypeIcon IconWrapper should render the correct color when type=&quot;unknown&quot;" time="0.002">
    </testcase>
    <testcase classname="CardGenericViewSmall MediaTypeIcon IconWrapper should render the correct color when type is not valid" name="CardGenericViewSmall MediaTypeIcon IconWrapper should render the correct color when type is not valid" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Avatar Picker Dialog" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:11" time="1.177" tests="13">
    <testcase classname="Avatar Picker Dialog when save button is clicked call onSaveImage should be called" name="Avatar Picker Dialog when save button is clicked call onSaveImage should be called" time="0.022">
    </testcase>
    <testcase classname="Avatar Picker Dialog when save button is clicked call onSaveAvatar should be called" name="Avatar Picker Dialog when save button is clicked call onSaveAvatar should be called" time="0.005">
    </testcase>
    <testcase classname="Avatar Picker Dialog should not render avatar list when imageSource is passed" name="Avatar Picker Dialog should not render avatar list when imageSource is passed" time="0.001">
    </testcase>
    <testcase classname="Avatar Picker Dialog should not render avatar list when there is an image selected" name="Avatar Picker Dialog should not render avatar list when there is an image selected" time="0.003">
    </testcase>
    <testcase classname="Avatar Picker Dialog should not allow save without selected image or selected avatar" name="Avatar Picker Dialog should not allow save without selected image or selected avatar" time="0.007">
    </testcase>
    <testcase classname="Avatar Picker Dialog should allow save with selected image passed as default" name="Avatar Picker Dialog should allow save with selected image passed as default" time="0.003">
    </testcase>
    <testcase classname="Avatar Picker Dialog should allow save with predefined avatar passed as default" name="Avatar Picker Dialog should allow save with predefined avatar passed as default" time="0.002">
    </testcase>
    <testcase classname="Avatar Picker Dialog should ensure selected avatars beyond visible limit are shown when selected" name="Avatar Picker Dialog should ensure selected avatars beyond visible limit are shown when selected" time="0">
    </testcase>
    <testcase classname="Avatar Picker Dialog should render default title" name="Avatar Picker Dialog should render default title" time="0.003">
    </testcase>
    <testcase classname="Avatar Picker Dialog should by able to customise title" name="Avatar Picker Dialog should by able to customise title" time="0.001">
    </testcase>
    <testcase classname="Avatar Picker Dialog should render default primary button text" name="Avatar Picker Dialog should render default primary button text" time="0.002">
    </testcase>
    <testcase classname="Avatar Picker Dialog should by able to customise primary button text" name="Avatar Picker Dialog should by able to customise primary button text" time="0.003">
    </testcase>
    <testcase classname="Avatar Picker Dialog should return same File when image source is provided by default" name="Avatar Picker Dialog should return same File when image source is provided by default" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema createSchema helper" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:11" time="1.16" tests="7">
    <testcase classname="@atlaskit/editor-common/schema createSchema helper should add only defined marks and nodes to the schema" name="@atlaskit/editor-common/schema createSchema helper should add only defined marks and nodes to the schema" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema createSchema helper should preserv order for marks and nodes in the schema" name="@atlaskit/editor-common/schema createSchema helper should preserv order for marks and nodes in the schema" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema createSchema helper should allow custom node spec for built-in node type" name="@atlaskit/editor-common/schema createSchema helper should allow custom node spec for built-in node type" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema createSchema helper should allow custom node spec" name="@atlaskit/editor-common/schema createSchema helper should allow custom node spec" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema createSchema helper should allow custom mark spec for built-in mark type" name="@atlaskit/editor-common/schema createSchema helper should allow custom mark spec for built-in mark type" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema createSchema helper should allow custom mark spec" name="@atlaskit/editor-common/schema createSchema helper should allow custom mark spec" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema createSchema helper should allow only custom mark spec" name="@atlaskit/editor-common/schema createSchema helper should allow only custom mark spec" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CardView" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:12" time="1.238" tests="20">
    <testcase classname="CardView should render FileCard when no metadata is passed" name="CardView should render FileCard when no metadata is passed" time="0.004">
    </testcase>
    <testcase classname="CardView should render LinkCard with details" name="CardView should render LinkCard with details" time="0.003">
    </testcase>
    <testcase classname="CardView should render LinkCard with other props" name="CardView should render LinkCard with other props" time="0.002">
    </testcase>
    <testcase classname="CardView should render FileCard with details" name="CardView should render FileCard with details" time="0.001">
    </testcase>
    <testcase classname="CardView should render FileCard with other props" name="CardView should render FileCard with other props" time="0.001">
    </testcase>
    <testcase classname="CardView should render LinkCard and NOT use details to determine which card to render when mediaItemType is &quot;link&quot;" name="CardView should render LinkCard and NOT use details to determine which card to render when mediaItemType is &quot;link&quot;" time="0.001">
    </testcase>
    <testcase classname="CardView should render FileCard and NOT use details to determine which card to render when mediaItemType is &quot;file&quot;" name="CardView should render FileCard and NOT use details to determine which card to render when mediaItemType is &quot;file&quot;" time="0.001">
    </testcase>
    <testcase classname="CardView should fire onClick and onMouseEnter events when file details are passed in" name="CardView should fire onClick and onMouseEnter events when file details are passed in" time="0.033">
    </testcase>
    <testcase classname="CardView should fire onClick and onMouseEnter events when link details are passed in" name="CardView should fire onClick and onMouseEnter events when link details are passed in" time="0.009">
    </testcase>
    <testcase classname="CardView should render retry element for small cards when an error occurs" name="CardView should render retry element for small cards when an error occurs" time="0.059">
    </testcase>
    <testcase classname="CardView should NOT fire onSelectChange when card is NOT selectable" name="CardView should NOT fire onSelectChange when card is NOT selectable" time="0.007">
    </testcase>
    <testcase classname="CardView should fire onSelectChange when selected state is changed by the consumer and selectable is true" name="CardView should fire onSelectChange when selected state is changed by the consumer and selectable is true" time="0.004">
    </testcase>
    <testcase classname="CardView should render a cropped image by default" name="CardView should render a cropped image by default" time="0.076">
    </testcase>
    <testcase classname="CardView should render not render a cropped image if we specify a different resizeMode" name="CardView should render not render a cropped image if we specify a different resizeMode" time="0.018">
    </testcase>
    <testcase classname="CardView Dimensions should render wrapper with correct breakpoint size" name="CardView Dimensions should render wrapper with correct breakpoint size" time="0.003">
    </testcase>
    <testcase classname="CardView Dimensions should render wrapper with default dimensions based on default appearance when dimensions and appearance are not provided" name="CardView Dimensions should render wrapper with default dimensions based on default appearance when dimensions and appearance are not provided" time="0.001">
    </testcase>
    <testcase classname="CardView Dimensions should use default dimensions based on passed appearance" name="CardView Dimensions should use default dimensions based on passed appearance" time="0.001">
    </testcase>
    <testcase classname="CardView Dimensions should use passed dimensions when provided" name="CardView Dimensions should use passed dimensions when provided" time="0.001">
    </testcase>
    <testcase classname="CardView Dimensions should use item type to calculate default dimensions" name="CardView Dimensions should use item type to calculate default dimensions" time="0.001">
    </testcase>
    <testcase classname="CardView Dimensions should not use default dimensions for link cards" name="CardView Dimensions should not use default dimensions for link cards" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="LinkCard" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:12" time="0.809" tests="17">
    <testcase classname="LinkCard .render() should render LinkCardViewSmall when appearance=&quot;small&quot;" name="LinkCard .render() should render LinkCardViewSmall when appearance=&quot;small&quot;" time="0.005">
    </testcase>
    <testcase classname="LinkCard .render() should render LinkCardImageView when appearance=&quot;image&quot;" name="LinkCard .render() should render LinkCardImageView when appearance=&quot;image&quot;" time="0.002">
    </testcase>
    <testcase classname="LinkCard .render() should render LinkCardGenericView when appearance=&quot;horizontal&quot; and details do not contain a smartCard" name="LinkCard .render() should render LinkCardGenericView when appearance=&quot;horizontal&quot; and details do not contain a smartCard" time="0.002">
    </testcase>
    <testcase classname="LinkCard .render() should render AppCardView when appearance=&quot;horizontal&quot; and details contain a smartCard" name="LinkCard .render() should render AppCardView when appearance=&quot;horizontal&quot; and details contain a smartCard" time="0.002">
    </testcase>
    <testcase classname="LinkCard .render() should render LinkCardGenericView when appearance=&quot;square&quot;" name="LinkCard .render() should render LinkCardGenericView when appearance=&quot;square&quot;" time="0.001">
    </testcase>
    <testcase classname="LinkCard .render() should render AppCardView when appearance is undefined and details contain a smartCard" name="LinkCard .render() should render AppCardView when appearance is undefined and details contain a smartCard" time="0.001">
    </testcase>
    <testcase classname="LinkCard .render() should render URLEmbedCard when appearance is undefined and details contains a URL embed with a height" name="LinkCard .render() should render URLEmbedCard when appearance is undefined and details contains a URL embed with a height" time="0.002">
    </testcase>
    <testcase classname="LinkCard .render() should render URLEmbedCard when appearance is undefined and details contains a URL embed with an aspect ratio" name="LinkCard .render() should render URLEmbedCard when appearance is undefined and details contains a URL embed with an aspect ratio" time="0.001">
    </testcase>
    <testcase classname="LinkCard .render() should render URLEmbedCard when appearance is undefined and details contains a player with a URL and a height" name="LinkCard .render() should render URLEmbedCard when appearance is undefined and details contains a player with a URL and a height" time="0.001">
    </testcase>
    <testcase classname="LinkCard .render() should render URLEmbedCard when appearance is undefined and details contains a player with a URL and an aspect ratio" name="LinkCard .render() should render URLEmbedCard when appearance is undefined and details contains a player with a URL and an aspect ratio" time="0.001">
    </testcase>
    <testcase classname="LinkCard .render() should render HTMLEmbedCard when appearance is undefined and details contains a HTML embed" name="LinkCard .render() should render HTMLEmbedCard when appearance is undefined and details contains a HTML embed" time="0.002">
    </testcase>
    <testcase classname="LinkCard .render() should render LinkCardGenericView when appearance is undefined and details do not contain anything special" name="LinkCard .render() should render LinkCardGenericView when appearance is undefined and details do not contain anything special" time="0">
    </testcase>
    <testcase classname="LinkCard .render() should not render an A tag when status is &quot;loading&quot;" name="LinkCard .render() should not render an A tag when status is &quot;loading&quot;" time="0">
    </testcase>
    <testcase classname="LinkCard .render() should not render an A tag when status is &quot;processing&quot;" name="LinkCard .render() should not render an A tag when status is &quot;processing&quot;" time="0.001">
    </testcase>
    <testcase classname="LinkCard .render() should not render an A tag when status is &quot;error&quot;" name="LinkCard .render() should not render an A tag when status is &quot;error&quot;" time="0.005">
    </testcase>
    <testcase classname="LinkCard .render() should not render an A tag when URL is not present" name="LinkCard .render() should not render an A tag when URL is not present" time="0.001">
    </testcase>
    <testcase classname="LinkCard .render() should render an A tag for AppCardView when details contain a smartCard with a link" name="LinkCard .render() should render an A tag for AppCardView when details contain a smartCard with a link" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema underline mark" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:12" time="1.177" tests="3">
    <testcase classname="@atlaskit/editor-common/schema underline mark matches &lt;u&gt;text&lt;/u&gt;" name="@atlaskit/editor-common/schema underline mark matches &lt;u&gt;text&lt;/u&gt;" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema underline mark matches &lt;span style=&quot;text-decoration: underline&quot;&gt;text&lt;/span&gt;" name="@atlaskit/editor-common/schema underline mark matches &lt;span style=&quot;text-decoration: underline&quot;&gt;text&lt;/span&gt;" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema underline mark serializes to &lt;u&gt;" name="@atlaskit/editor-common/schema underline mark serializes to &lt;u&gt;" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/pagination" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:13" time="0.78" tests="24">
    <testcase classname="@atlaskit/pagination stateless should not render when total is 0" name="@atlaskit/pagination stateless should not render when total is 0" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless should render pages and Prev/Next buttons when total is not 0" name="@atlaskit/pagination stateless should render pages and Prev/Next buttons when total is not 0" time="0.045">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless should render Prev button disabled when current in 1" name="@atlaskit/pagination stateless should render Prev button disabled when current in 1" time="0.021">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless should render Next button disabled when current in 1" name="@atlaskit/pagination stateless should render Next button disabled when current in 1" time="0.075">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless should not render ellipsis with seven pages and page 1 selected" name="@atlaskit/pagination stateless should not render ellipsis with seven pages and page 1 selected" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless should render one ellipsis with 15 pages and page 1 selected" name="@atlaskit/pagination stateless should render one ellipsis with 15 pages and page 1 selected" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless should render one ellipsis with 15 pages and page 14 selected" name="@atlaskit/pagination stateless should render one ellipsis with 15 pages and page 14 selected" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless should render two ellipsis with 15 pages and page 8 selected" name="@atlaskit/pagination stateless should render two ellipsis with 15 pages and page 8 selected" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless should invoke callback passed to onSetPage" name="@atlaskit/pagination stateless should invoke callback passed to onSetPage" time="0.021">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless shouldn&apos;t invoke callback passed to onSetPage when clicked on active page" name="@atlaskit/pagination stateless shouldn&apos;t invoke callback passed to onSetPage when clicked on active page" time="0.024">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless shouldn&apos;t invoke callback passed to onSetPage when clicked on Prev and first page is active" name="@atlaskit/pagination stateless shouldn&apos;t invoke callback passed to onSetPage when clicked on Prev and first page is active" time="0.021">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless shouldn&apos;t invoke callback passed to onSetPage when clicked on Next and last page is active" name="@atlaskit/pagination stateless shouldn&apos;t invoke callback passed to onSetPage when clicked on Next and last page is active" time="0.016">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless pageRange helper function should return correct range when less total pages than visible maximum" name="@atlaskit/pagination stateless pageRange helper function should return correct range when less total pages than visible maximum" time="0">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless pageRange helper function should return correct range when total pages equal to visible maximum" name="@atlaskit/pagination stateless pageRange helper function should return correct range when total pages equal to visible maximum" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless pageRange helper function should return correct range with 10 pages visible, 300 total pages and 150 selected" name="@atlaskit/pagination stateless pageRange helper function should return correct range with 10 pages visible, 300 total pages and 150 selected" time="0">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless pageRange helper function should throw exception if visible is less than 7" name="@atlaskit/pagination stateless pageRange helper function should throw exception if visible is less than 7" time="0">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless pageRange helper function with 10 pages visible, 15 total pages and page 1 selected" name="@atlaskit/pagination stateless pageRange helper function with 10 pages visible, 15 total pages and page 1 selected" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless pageRange helper function with 10 pages visible, 15 total pages and page 7 selected" name="@atlaskit/pagination stateless pageRange helper function with 10 pages visible, 15 total pages and page 7 selected" time="0">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless pageRange helper function with 10 pages visible, 15 total pages and page 8 selected" name="@atlaskit/pagination stateless pageRange helper function with 10 pages visible, 15 total pages and page 8 selected" time="0">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless pageRange helper function with 10 pages visible, 15 total pages and page 9 selected" name="@atlaskit/pagination stateless pageRange helper function with 10 pages visible, 15 total pages and page 9 selected" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/pagination stateless pageRange helper function with 10 pages visible, 15 total pages and page 15 selected" name="@atlaskit/pagination stateless pageRange helper function with 10 pages visible, 15 total pages and page 15 selected" time="0">
    </testcase>
    <testcase classname="@atlaskit/pagination stateful should change current page upon clicking on corresponding button" name="@atlaskit/pagination stateful should change current page upon clicking on corresponding button" time="0.052">
    </testcase>
    <testcase classname="@atlaskit/pagination stateful should change current page upon clicking on Prev button" name="@atlaskit/pagination stateful should change current page upon clicking on Prev button" time="0.061">
    </testcase>
    <testcase classname="@atlaskit/pagination stateful should change current page upon clicking on Next button" name="@atlaskit/pagination stateful should change current page upon clicking on Next button" time="0.058">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema action mark" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:13" time="1.192" tests="1">
    <testcase classname="@atlaskit/editor-common/schema action mark serializes to &lt;span data-mark-type=&quot;action&quot;&gt;" name="@atlaskit/editor-common/schema action mark serializes to &lt;span data-mark-type=&quot;action&quot;&gt;" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/Mention" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:14" time="0.709" tests="7">
    <testcase classname="@atlaskit/editor-core/ui/Mention should render resourced mention" name="@atlaskit/editor-core/ui/Mention should render resourced mention" time="0.019">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if profilecardProvider is not set" name="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if profilecardProvider is not set" time="0.014">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/Mention should pass provider into resourced mention" name="@atlaskit/editor-core/ui/Mention should pass provider into resourced mention" time="0.006">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if profilecardProvider promise is rejected" name="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if profilecardProvider promise is rejected" time="0.01">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if id is generic (HipChat)" name="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if id is generic (HipChat)" time="0.01">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if id is generic (all)" name="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if id is generic (all)" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if id is generic (here)" name="@atlaskit/editor-core/ui/Mention should not render ResourcedMentionWithProfilecard if id is generic (here)" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="isLinkDetails()" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:14" time="0.495" tests="5">
    <testcase classname="isLinkDetails() should return false for undefined" name="isLinkDetails() should return false for undefined" time="0.001">
    </testcase>
    <testcase classname="isLinkDetails() should return false for something random" name="isLinkDetails() should return false for something random" time="0.001">
    </testcase>
    <testcase classname="isLinkDetails() should return true for a UrlPreview" name="isLinkDetails() should return true for a UrlPreview" time="0.001">
    </testcase>
    <testcase classname="isLinkDetails() should return true for a LinkDetails" name="isLinkDetails() should return true for a LinkDetails" time="0">
    </testcase>
    <testcase classname="isLinkDetails() should return true for a FileDetails" name="isLinkDetails() should return true for a FileDetails" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MediaFileListViewer /&gt;" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:14" time="0.969" tests="5">
    <testcase classname="&lt;MediaFileListViewer /&gt; should construct a media viewer instance with default config" name="&lt;MediaFileListViewer /&gt; should construct a media viewer instance with default config" time="0.005">
    </testcase>
    <testcase classname="&lt;MediaFileListViewer /&gt; should construct a media viewer instance with custom config" name="&lt;MediaFileListViewer /&gt; should construct a media viewer instance with custom config" time="0.003">
    </testcase>
    <testcase classname="&lt;MediaFileListViewer /&gt; should construct a media viewer with no collectionName provided" name="&lt;MediaFileListViewer /&gt; should construct a media viewer with no collectionName provided" time="0.011">
    </testcase>
    <testcase classname="&lt;MediaFileListViewer /&gt; should construct a media viewer with a collectionName" name="&lt;MediaFileListViewer /&gt; should construct a media viewer with a collectionName" time="0.006">
    </testcase>
    <testcase classname="&lt;MediaFileListViewer /&gt; should call classic MediaViewer with the expected parameters" name="&lt;MediaFileListViewer /&gt; should call classic MediaViewer with the expected parameters" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Avatar" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:14" time="1.058" tests="22">
    <testcase classname="Avatar should be possible to create a component" name="Avatar should be possible to create a component" time="0.004">
    </testcase>
    <testcase classname="Avatar size property when is set to xsmall should have the correct dimensions" name="Avatar size property when is set to xsmall should have the correct dimensions" time="0.001">
    </testcase>
    <testcase classname="Avatar size property when is set to small should have the correct dimensions" name="Avatar size property when is set to small should have the correct dimensions" time="0.001">
    </testcase>
    <testcase classname="Avatar size property when is set to medium should have the correct dimensions" name="Avatar size property when is set to medium should have the correct dimensions" time="0.001">
    </testcase>
    <testcase classname="Avatar size property when is set to large should have the correct dimensions" name="Avatar size property when is set to large should have the correct dimensions" time="0.001">
    </testcase>
    <testcase classname="Avatar size property when is set to xlarge should have the correct dimensions" name="Avatar size property when is set to xlarge should have the correct dimensions" time="0">
    </testcase>
    <testcase classname="Avatar size property when is set to xxlarge should have the correct dimensions" name="Avatar size property when is set to xxlarge should have the correct dimensions" time="0">
    </testcase>
    <testcase classname="Avatar name property should set the alt of the internal span" name="Avatar name property should set the alt of the internal span" time="0.046">
    </testcase>
    <testcase classname="Avatar presence property should NOT be visible when omitted" name="Avatar presence property should NOT be visible when omitted" time="0.079">
    </testcase>
    <testcase classname="Avatar presence property when presence is set to &apos;online&apos; should be visible" name="Avatar presence property when presence is set to &apos;online&apos; should be visible" time="0.025">
    </testcase>
    <testcase classname="Avatar presence property when presence is set to &apos;busy&apos; should be visible" name="Avatar presence property when presence is set to &apos;busy&apos; should be visible" time="0.017">
    </testcase>
    <testcase classname="Avatar presence property when presence is set to &apos;offline&apos; should be visible" name="Avatar presence property when presence is set to &apos;offline&apos; should be visible" time="0.016">
    </testcase>
    <testcase classname="Avatar presence property when presence is set to &apos;focus&apos; should be visible" name="Avatar presence property when presence is set to &apos;focus&apos; should be visible" time="0.018">
    </testcase>
    <testcase classname="Avatar borderColor property should be relfected in the Presence component" name="Avatar borderColor property should be relfected in the Presence component" time="0.024">
    </testcase>
    <testcase classname="Avatar appearance property should default to circle avatar" name="Avatar appearance property should default to circle avatar" time="0.002">
    </testcase>
    <testcase classname="Avatar appearance property should apply rounded corners for square avatar" name="Avatar appearance property should apply rounded corners for square avatar" time="0.019">
    </testcase>
    <testcase classname="Avatar enableTooltip property should wrap with a tooltip if enableTooltip is true and name set" name="Avatar enableTooltip property should wrap with a tooltip if enableTooltip is true and name set" time="0.028">
    </testcase>
    <testcase classname="Avatar enableTooltip property should not wrap with a tooltip if enableTooltip is false" name="Avatar enableTooltip property should not wrap with a tooltip if enableTooltip is false" time="0.011">
    </testcase>
    <testcase classname="Avatar enableTooltip property should not wrap with a tooltip if enableTooltip is true but no name specified" name="Avatar enableTooltip property should not wrap with a tooltip if enableTooltip is true but no name specified" time="0.012">
    </testcase>
    <testcase classname="Avatar react element as the presence property should render the presence" name="Avatar react element as the presence property should render the presence" time="0.012">
    </testcase>
    <testcase classname="Avatar react element as the presence property should pass presence value to Presence" name="Avatar react element as the presence property should pass presence value to Presence" time="0.023">
    </testcase>
    <testcase classname="Avatar react element as the presence property should pass presence element to Presence" name="Avatar react element as the presence property should pass presence element to Presence" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/TableRow" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:15" time="0.485" tests="1">
    <testcase classname="Renderer - React/Nodes/TableRow should create a &lt;tr&gt;-tag" name="Renderer - React/Nodes/TableRow should create a &lt;tr&gt;-tag" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="updateChangelog" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:15" time="0.858" tests="6">
    <testcase classname="updateChangelog should work with empty changelog" name="updateChangelog should work with empty changelog" time="0.105">
    </testcase>
    <testcase classname="updateChangelog should work with multiple changesets" name="updateChangelog should work with multiple changesets" time="0.021">
    </testcase>
    <testcase classname="updateChangelog should work for multiple packages" name="updateChangelog should work for multiple packages" time="0.018">
    </testcase>
    <testcase classname="updateChangelog should return the updated file paths" name="updateChangelog should return the updated file paths" time="0.017">
    </testcase>
    <testcase classname="updateChangelog has no changelog file" name="updateChangelog has no changelog file" time="0.016">
    </testcase>
    <testcase classname="updateChangelog should work with an existing changelog" name="updateChangelog should work with an existing changelog" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="CardDetails" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:16" time="0.503" tests="7">
    <testcase classname="CardDetails should render placeholder content when isPlaceholder=true" name="CardDetails should render placeholder content when isPlaceholder=true" time="0.009">
    </testcase>
    <testcase classname="CardDetails should render real content by default" name="CardDetails should render real content by default" time="0.002">
    </testcase>
    <testcase classname="CardDetails should not render a thumbnail if isThumbnailVisible=false and there is a thumbnail" name="CardDetails should not render a thumbnail if isThumbnailVisible=false and there is a thumbnail" time="0.001">
    </testcase>
    <testcase classname="CardDetails should not render a thumbnail if isThumbnailVisible=false and isPlaceholder=true" name="CardDetails should not render a thumbnail if isThumbnailVisible=false and isPlaceholder=true" time="0.001">
    </testcase>
    <testcase classname="CardDetails should not render a thumbnail if isThumbnailVisible=true and there is no thumbnail provided" name="CardDetails should not render a thumbnail if isThumbnailVisible=true and there is no thumbnail provided" time="0.001">
    </testcase>
    <testcase classname="CardDetails should render a placeholder thumbnail if isThumbnailVisible=true and isPlaceholder=true" name="CardDetails should render a placeholder thumbnail if isThumbnailVisible=true and isPlaceholder=true" time="0.002">
    </testcase>
    <testcase classname="CardDetails should render a placeholder thumbnail if isThumbnailVisible=true and there is a thumbnail" name="CardDetails should render a placeholder thumbnail if isThumbnailVisible=true and there is a thumbnail" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Media PickerFacade" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:15" time="1.017" tests="26">
    <testcase classname="Media PickerFacade Generic Picker listens to picker events" name="Media PickerFacade Generic Picker listens to picker events" time="0.019">
    </testcase>
    <testcase classname="Media PickerFacade Generic Picker removes listeners on destruction" name="Media PickerFacade Generic Picker removes listeners on destruction" time="0.001">
    </testcase>
    <testcase classname="Media PickerFacade Generic Picker configures picker with correct upload params and context" name="Media PickerFacade Generic Picker configures picker with correct upload params and context" time="0.004">
    </testcase>
    <testcase classname="Media PickerFacade Generic Picker configures picker respects dropzone component config" name="Media PickerFacade Generic Picker configures picker respects dropzone component config" time="0.001">
    </testcase>
    <testcase classname="Media PickerFacade Generic Picker configures picker respects popup component config" name="Media PickerFacade Generic Picker configures picker respects popup component config" time="0.001">
    </testcase>
    <testcase classname="Media PickerFacade Generic Picker configures picker fallbacks to browser picker if userAuthProvider is not provided" name="Media PickerFacade Generic Picker configures picker fallbacks to browser picker if userAuthProvider is not provided" time="0">
    </testcase>
    <testcase classname="Media PickerFacade Generic Picker proxies events to MediaStateManager for upload starting" name="Media PickerFacade Generic Picker proxies events to MediaStateManager for upload starting" time="0.002">
    </testcase>
    <testcase classname="Media PickerFacade Generic Picker proxies events to MediaStateManager for new uploads via onNewMedia()" name="Media PickerFacade Generic Picker proxies events to MediaStateManager for new uploads via onNewMedia()" time="0.001">
    </testcase>
    <testcase classname="Media PickerFacade Generic Picker proxies events to MediaStateManager for upload progress" name="Media PickerFacade Generic Picker proxies events to MediaStateManager for upload progress" time="0.005">
    </testcase>
    <testcase classname="Media PickerFacade Generic Picker proxies events to MediaStateManager for upload preview availability" name="Media PickerFacade Generic Picker proxies events to MediaStateManager for upload preview availability" time="0.002">
    </testcase>
    <testcase classname="Media PickerFacade Generic Picker proxies events to MediaStateManager for upload processing" name="Media PickerFacade Generic Picker proxies events to MediaStateManager for upload processing" time="0.001">
    </testcase>
    <testcase classname="Media PickerFacade Generic Picker proxies events to MediaStateManager for upload ready for finalization" name="Media PickerFacade Generic Picker proxies events to MediaStateManager for upload ready for finalization" time="0.002">
    </testcase>
    <testcase classname="Media PickerFacade Generic Picker proxies events to MediaStateManager for upload error" name="Media PickerFacade Generic Picker proxies events to MediaStateManager for upload error" time="0.001">
    </testcase>
    <testcase classname="Media PickerFacade Generic Picker proxies events to MediaStateManager for upload end" name="Media PickerFacade Generic Picker proxies events to MediaStateManager for upload end" time="0.001">
    </testcase>
    <testcase classname="Media PickerFacade Generic Picker After upload has transitioned from &quot;uploading&quot;, subsequent &quot;status update&quot; events must not downgrade status (ED-2062)" name="Media PickerFacade Generic Picker After upload has transitioned from &quot;uploading&quot;, subsequent &quot;status update&quot; events must not downgrade status (ED-2062)" time="0.002">
    </testcase>
    <testcase classname="Media PickerFacade Popup Picker calls picker&apos;s teardown() on destruction" name="Media PickerFacade Popup Picker calls picker&apos;s teardown() on destruction" time="0.002">
    </testcase>
    <testcase classname="Media PickerFacade Popup Picker calls picker&apos;s show() on show" name="Media PickerFacade Popup Picker calls picker&apos;s show() on show" time="0.004">
    </testcase>
    <testcase classname="Media PickerFacade Popup Picker calls picker&apos;s hide() on hide" name="Media PickerFacade Popup Picker calls picker&apos;s hide() on hide" time="0.002">
    </testcase>
    <testcase classname="Media PickerFacade Popup Picker for upload that has been cancelled" name="Media PickerFacade Popup Picker for upload that has been cancelled" time="0.003">
    </testcase>
    <testcase classname="Media PickerFacade Browser Picker calls picker&apos;s teardown() on destruction" name="Media PickerFacade Browser Picker calls picker&apos;s teardown() on destruction" time="0.001">
    </testcase>
    <testcase classname="Media PickerFacade Browser Picker calls picker&apos;s browse() on show" name="Media PickerFacade Browser Picker calls picker&apos;s browse() on show" time="0.002">
    </testcase>
    <testcase classname="Media PickerFacade Clipboard Picker activates picker upon construction" name="Media PickerFacade Clipboard Picker activates picker upon construction" time="0">
    </testcase>
    <testcase classname="Media PickerFacade Clipboard Picker calls picker&apos;s deactivate() on destruction" name="Media PickerFacade Clipboard Picker calls picker&apos;s deactivate() on destruction" time="0">
    </testcase>
    <testcase classname="Media PickerFacade Dropzone Picker activates picker upon construction" name="Media PickerFacade Dropzone Picker activates picker upon construction" time="0.001">
    </testcase>
    <testcase classname="Media PickerFacade Dropzone Picker calls picker&apos;s deactivate() on destruction" name="Media PickerFacade Dropzone Picker calls picker&apos;s deactivate() on destruction" time="0.002">
    </testcase>
    <testcase classname="Media PickerFacade BinaryUploader Picker calls picker&apos;s upload() on upload" name="Media PickerFacade BinaryUploader Picker calls picker&apos;s upload() on upload" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/ApplicationCard" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:16" time="0.848" tests="4">
    <testcase classname="Renderer - React/Nodes/ApplicationCard should wrap content with &lt;AppCardView&gt;-tag" name="Renderer - React/Nodes/ApplicationCard should wrap content with &lt;AppCardView&gt;-tag" time="0.008">
    </testcase>
    <testcase classname="Renderer - React/Nodes/ApplicationCard should pass onActionClick to AppCardView" name="Renderer - React/Nodes/ApplicationCard should pass onActionClick to AppCardView" time="0.002">
    </testcase>
    <testcase classname="Renderer - React/Nodes/ApplicationCard should pass actions to AppCardView" name="Renderer - React/Nodes/ApplicationCard should pass actions to AppCardView" time="0.001">
    </testcase>
    <testcase classname="Renderer - React/Nodes/ApplicationCard should call onClick with link.url" name="Renderer - React/Nodes/ApplicationCard should call onClick with link.url" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema emoji-query mark" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:16" time="1.23" tests="1">
    <testcase classname="@atlaskit/editor-common/schema emoji-query mark serializes to &lt;span data-emoji-query=&quot;true&quot;&gt;" name="@atlaskit/editor-common/schema emoji-query mark serializes to &lt;span data-emoji-query=&quot;true&quot;&gt;" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="CardOverlay" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:17" time="0.844" tests="4">
    <testcase classname="CardOverlay should not render the title or subtitle when the card has errored" name="CardOverlay should not render the title or subtitle when the card has errored" time="0.015">
    </testcase>
    <testcase classname="CardOverlay should pass triggerColor &quot;white&quot; to Menu component when overlay is NOT persistent" name="CardOverlay should pass triggerColor &quot;white&quot; to Menu component when overlay is NOT persistent" time="0.002">
    </testcase>
    <testcase classname="CardOverlay should pass triggerColor as &quot;undefined&quot; to Menu component when overlay is persistent" name="CardOverlay should pass triggerColor as &quot;undefined&quot; to Menu component when overlay is persistent" time="0.001">
    </testcase>
    <testcase classname="CardOverlay should allow manual retry when &quot;onRetry&quot; is passed" name="CardOverlay should allow manual retry when &quot;onRetry&quot; is passed" time="0.072">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/field-radio-group" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:17" time="0.961" tests="10">
    <testcase classname="@atlaskit/field-radio-group FieldRadioGroup (smart) exports the FieldRadioGroup component" name="@atlaskit/field-radio-group FieldRadioGroup (smart) exports the FieldRadioGroup component" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group FieldRadioGroup (smart) construction should be able to create a component" name="@atlaskit/field-radio-group FieldRadioGroup (smart) construction should be able to create a component" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group FieldRadioGroup (smart) construction should render a FieldRadioGroup component" name="@atlaskit/field-radio-group FieldRadioGroup (smart) construction should render a FieldRadioGroup component" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group FieldRadioGroup (smart) construction should set up the onRadioChange prop for the AkFieldRadioGroup" name="@atlaskit/field-radio-group FieldRadioGroup (smart) construction should set up the onRadioChange prop for the AkFieldRadioGroup" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group FieldRadioGroup (smart) construction should set up the initial state" name="@atlaskit/field-radio-group FieldRadioGroup (smart) construction should set up the initial state" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group FieldRadioGroup (smart) props defaultValue prop renders an Radio with correct props for each item in the array" name="@atlaskit/field-radio-group FieldRadioGroup (smart) props defaultValue prop renders an Radio with correct props for each item in the array" time="0.102">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group FieldRadioGroup (smart) props items prop with defaultValue selects the item by default" name="@atlaskit/field-radio-group FieldRadioGroup (smart) props items prop with defaultValue selects the item by default" time="0.043">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group FieldRadioGroup (smart) props items prop with defaultValue is overridden when an item is selected" name="@atlaskit/field-radio-group FieldRadioGroup (smart) props items prop with defaultValue is overridden when an item is selected" time="0.08">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group FieldRadioGroup (smart) props onRadio changed prop should be called when a value is selected" name="@atlaskit/field-radio-group FieldRadioGroup (smart) props onRadio changed prop should be called when a value is selected" time="0.045">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group FieldRadioGroup (smart) props onRadio changed prop updates the selectedValue state when a radio is changed" name="@atlaskit/field-radio-group FieldRadioGroup (smart) props onRadio changed prop updates the selectedValue state when a radio is changed" time="0.053">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema panel node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:17" time="1.155" tests="3">
    <testcase classname="@atlaskit/editor-common/schema panel node should have data-panel-type when serializing to DOM" name="@atlaskit/editor-common/schema panel node should have data-panel-type when serializing to DOM" time="0.018">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema panel node should info panel type by default" name="@atlaskit/editor-common/schema panel node should info panel type by default" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema panel node should extract the correct values of panelType" name="@atlaskit/editor-common/schema panel node should extract the correct values of panelType" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="MediaEditor DefaultMouseInput" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:18" time="0.879" tests="8">
    <testcase classname="MediaEditor DefaultMouseInput should report nothing if only window is clicked" name="MediaEditor DefaultMouseInput should report nothing if only window is clicked" time="0.001">
    </testcase>
    <testcase classname="MediaEditor DefaultMouseInput should report nothing if right button is clicked" name="MediaEditor DefaultMouseInput should report nothing if right button is clicked" time="0.001">
    </testcase>
    <testcase classname="MediaEditor DefaultMouseInput should report nothing if right button is dragged" name="MediaEditor DefaultMouseInput should report nothing if right button is dragged" time="0">
    </testcase>
    <testcase classname="MediaEditor DefaultMouseInput should report one click if left button is down and up" name="MediaEditor DefaultMouseInput should report one click if left button is down and up" time="0.003">
    </testcase>
    <testcase classname="MediaEditor DefaultMouseInput should report mouse move when the mouse is dragged" name="MediaEditor DefaultMouseInput should report mouse move when the mouse is dragged" time="0.002">
    </testcase>
    <testcase classname="MediaEditor DefaultMouseInput should report nothing if the window is blurred immediately after mouse down" name="MediaEditor DefaultMouseInput should report nothing if the window is blurred immediately after mouse down" time="0.001">
    </testcase>
    <testcase classname="MediaEditor DefaultMouseInput should report drag lost if the window is blurred during mouse dragging" name="MediaEditor DefaultMouseInput should report drag lost if the window is blurred during mouse dragging" time="0.004">
    </testcase>
    <testcase classname="MediaEditor DefaultMouseInput should not report drag lost if the window is blurred after dragging complete" name="MediaEditor DefaultMouseInput should not report drag lost if the window is blurred after dragging complete" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Progress class check" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:18" time="0.449" tests="20">
    <testcase classname="Progress class check method isValidSize() returns true for numbers bigger then zero" name="Progress class check method isValidSize() returns true for numbers bigger then zero" time="0.001">
    </testcase>
    <testcase classname="Progress class check method isValidSize() returns false for numbers less or equal zero" name="Progress class check method isValidSize() returns false for numbers less or equal zero" time="0.001">
    </testcase>
    <testcase classname="Progress class check method isValidSize() returns false for non-numbers" name="Progress class check method isValidSize() returns false for non-numbers" time="0">
    </testcase>
    <testcase classname="Progress class check method isValidProgress() returns true for numbers equal or bigger then zero" name="Progress class check method isValidProgress() returns true for numbers equal or bigger then zero" time="0.001">
    </testcase>
    <testcase classname="Progress class check method isValidProgress() returns false when progress is bigger then size" name="Progress class check method isValidProgress() returns false when progress is bigger then size" time="0">
    </testcase>
    <testcase classname="Progress class check method isValidProgress() returns false for numbers less then zero" name="Progress class check method isValidProgress() returns false for numbers less then zero" time="0">
    </testcase>
    <testcase classname="Progress class check method isValidProgress() returns false for non-numbers" name="Progress class check method isValidProgress() returns false for non-numbers" time="0.001">
    </testcase>
    <testcase classname="Progress class check method isValidStartTime returns true when startTime is bigger then zero" name="Progress class check method isValidStartTime returns true when startTime is bigger then zero" time="0.001">
    </testcase>
    <testcase classname="Progress class check method isValidStartTime returns false when startTime is equal or less then zero" name="Progress class check method isValidStartTime returns false when startTime is equal or less then zero" time="0">
    </testcase>
    <testcase classname="Progress class check method isValidStartTime() returns false for non-numbers" name="Progress class check method isValidStartTime() returns false for non-numbers" time="0.001">
    </testcase>
    <testcase classname="Progress class check method isValidMeasureTime() returns true when measureTime bigger then startTime" name="Progress class check method isValidMeasureTime() returns true when measureTime bigger then startTime" time="0">
    </testcase>
    <testcase classname="Progress class check method isValidMeasureTime() returns false when measureTime is less then startTime" name="Progress class check method isValidMeasureTime() returns false when measureTime is less then startTime" time="0.001">
    </testcase>
    <testcase classname="Progress class check method isValidMeasureTime() returns false for non-numbers" name="Progress class check method isValidMeasureTime() returns false for non-numbers" time="0">
    </testcase>
    <testcase classname="Progress class exposed parameters include absolute progress" name="Progress class exposed parameters include absolute progress" time="0.001">
    </testcase>
    <testcase classname="Progress class exposed parameters include portion progress" name="Progress class exposed parameters include portion progress" time="0.001">
    </testcase>
    <testcase classname="Progress class exposed parameters include max progress" name="Progress class exposed parameters include max progress" time="0">
    </testcase>
    <testcase classname="Progress class exposed parameters include overallTime progress" name="Progress class exposed parameters include overallTime progress" time="0.001">
    </testcase>
    <testcase classname="Progress class exposed parameters include expectedFinishTime progress" name="Progress class exposed parameters include expectedFinishTime progress" time="0">
    </testcase>
    <testcase classname="Progress class exposed parameters include timeLeft progress" name="Progress class exposed parameters include timeLeft progress" time="0.001">
    </testcase>
    <testcase classname="Progress class exposed parameters toJSON() method returns correct object" name="Progress class exposed parameters toJSON() method returns correct object" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Menu" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:18" time="1.041" tests="6">
    <testcase classname="Menu should render the meatballs menu when supplied with multiple actions" name="Menu should render the meatballs menu when supplied with multiple actions" time="0.123">
    </testcase>
    <testcase classname="Menu should render the meatballs menu when supplied with multiple actions including one with type &quot;delete&quot;" name="Menu should render the meatballs menu when supplied with multiple actions including one with type &quot;delete&quot;" time="0.011">
    </testcase>
    <testcase classname="Menu should render the delete button when supplied with a single action with type &quot;delete&quot;" name="Menu should render the delete button when supplied with a single action with type &quot;delete&quot;" time="0.006">
    </testcase>
    <testcase classname="Menu should call onToggle callback when meatballs are pressed" name="Menu should call onToggle callback when meatballs are pressed" time="0.28">
    </testcase>
    <testcase classname="Menu should pass supplied trigger color to meatballs wrapper when there are multiple actions" name="Menu should pass supplied trigger color to meatballs wrapper when there are multiple actions" time="0.027">
    </testcase>
    <testcase classname="Menu should pass supplied trigger color to delete button when there is a single action" name="Menu should pass supplied trigger color to delete button when there is a single action" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="MediaPicker" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:19" time="1.366" tests="20">
    <testcase classname="MediaPicker binary should be instance of MediaPickerBinaryUploader given options" name="MediaPicker binary should be instance of MediaPickerBinaryUploader given options" time="0.003">
    </testcase>
    <testcase classname="MediaPicker binary should be a class constructor given no options" name="MediaPicker binary should be a class constructor given no options" time="0.003">
    </testcase>
    <testcase classname="MediaPicker binary should be able to register listeners to generic upload events" name="MediaPicker binary should be able to register listeners to generic upload events" time="0">
    </testcase>
    <testcase classname="MediaPicker browser should be instance of MediaPickerBrowser given just module config" name="MediaPicker browser should be instance of MediaPickerBrowser given just module config" time="0.008">
    </testcase>
    <testcase classname="MediaPicker browser should be instance of MediaPickerBrowser given moduleConfig and pickerConfig" name="MediaPicker browser should be instance of MediaPickerBrowser given moduleConfig and pickerConfig" time="0.001">
    </testcase>
    <testcase classname="MediaPicker browser should be a class constructor given no options" name="MediaPicker browser should be a class constructor given no options" time="0.001">
    </testcase>
    <testcase classname="MediaPicker browser should be able to register listeners to generic upload events" name="MediaPicker browser should be able to register listeners to generic upload events" time="0.002">
    </testcase>
    <testcase classname="MediaPicker clipboard should be instance of MediaPickerClipboard given options" name="MediaPicker clipboard should be instance of MediaPickerClipboard given options" time="0.009">
    </testcase>
    <testcase classname="MediaPicker clipboard should be a class constructor given no options" name="MediaPicker clipboard should be a class constructor given no options" time="0">
    </testcase>
    <testcase classname="MediaPicker clipboard should be able to register listeners to generic upload events" name="MediaPicker clipboard should be able to register listeners to generic upload events" time="0">
    </testcase>
    <testcase classname="MediaPicker dropzone should be instance of MediaPickerDropzone given just moduleConfig" name="MediaPicker dropzone should be instance of MediaPickerDropzone given just moduleConfig" time="0.001">
    </testcase>
    <testcase classname="MediaPicker dropzone should be instance of MediaPickerDropzone given moduleConfig and pickerConfig" name="MediaPicker dropzone should be instance of MediaPickerDropzone given moduleConfig and pickerConfig" time="0.002">
    </testcase>
    <testcase classname="MediaPicker dropzone should be a class constructor given no options" name="MediaPicker dropzone should be a class constructor given no options" time="0.001">
    </testcase>
    <testcase classname="MediaPicker dropzone should be able to register listeners to generic upload events" name="MediaPicker dropzone should be able to register listeners to generic upload events" time="0.001">
    </testcase>
    <testcase classname="MediaPicker dropzone consumers should be able to listen for &quot;drop&quot;, &quot;drag-enter&quot; and &quot;drag-leave&quot; events" name="MediaPicker dropzone consumers should be able to listen for &quot;drop&quot;, &quot;drag-enter&quot; and &quot;drag-leave&quot; events" time="0.001">
    </testcase>
    <testcase classname="MediaPicker popup should be instance of MediaPickerPopup given options" name="MediaPicker popup should be instance of MediaPickerPopup given options" time="0.082">
    </testcase>
    <testcase classname="MediaPicker popup should be a class constructor given no options" name="MediaPicker popup should be a class constructor given no options" time="0">
    </testcase>
    <testcase classname="MediaPicker popup should assign config" name="MediaPicker popup should assign config" time="0.008">
    </testcase>
    <testcase classname="MediaPicker popup should be able to register listeners to generic upload events" name="MediaPicker popup should be able to register listeners to generic upload events" time="0.004">
    </testcase>
    <testcase classname="MediaPicker popup should be able to register listener to ready event" name="MediaPicker popup should be able to register listener to ready event" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="MediaCard" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:19" time="1.054" tests="15">
    <testcase classname="MediaCard .render() should pass down other props" name="MediaCard .render() should pass down other props" time="0.05">
    </testcase>
    <testcase classname="MediaCard .render() should pass down the status when we have one" name="MediaCard .render() should pass down the status when we have one" time="0.003">
    </testcase>
    <testcase classname="MediaCard .render() should render metadata=object when we have metadata" name="MediaCard .render() should render metadata=object when we have metadata" time="0.002">
    </testcase>
    <testcase classname="MediaCard .render() should NOT pass down the error when we have one" name="MediaCard .render() should NOT pass down the error when we have one" time="0.002">
    </testcase>
    <testcase classname="MediaCard .render() should pass onClick to root node" name="MediaCard .render() should pass onClick to root node" time="0.001">
    </testcase>
    <testcase classname="MediaCard .render() should pass onMouseEnter to root node" name="MediaCard .render() should pass onMouseEnter to root node" time="0.001">
    </testcase>
    <testcase classname="MediaCard .updateState() should retrieve metadata for a UrlPreviewProvider" name="MediaCard .updateState() should retrieve metadata for a UrlPreviewProvider" time="0.006">
    </testcase>
    <testcase classname="MediaCard .updateState() should retrieve metadata for a MediaItemProvider" name="MediaCard .updateState() should retrieve metadata for a MediaItemProvider" time="0.002">
    </testcase>
    <testcase classname="MediaCard .updateState() should call onLoadingStateChange() with type &quot;loading&quot; when the component has mounted" name="MediaCard .updateState() should call onLoadingStateChange() with type &quot;loading&quot; when the component has mounted" time="0.002">
    </testcase>
    <testcase classname="MediaCard .updateState() should call onLoadingStateChange() with type &quot;processing&quot; when the server has started processing the media" name="MediaCard .updateState() should call onLoadingStateChange() with type &quot;processing&quot; when the server has started processing the media" time="0.002">
    </testcase>
    <testcase classname="MediaCard .updateState() should call onLoadingStateChange() with type &quot;complete&quot; when the server has finished processing the media" name="MediaCard .updateState() should call onLoadingStateChange() with type &quot;complete&quot; when the server has finished processing the media" time="0.002">
    </testcase>
    <testcase classname="MediaCard .updateState() should call onLoadingStateChange() with type &quot;error&quot; when the server has errored whilst processing the media" name="MediaCard .updateState() should call onLoadingStateChange() with type &quot;error&quot; when the server has errored whilst processing the media" time="0.002">
    </testcase>
    <testcase classname="MediaCard .updateState() should unsubscribe from the old provider and subscribe to the new provider when the provider changes" name="MediaCard .updateState() should unsubscribe from the old provider and subscribe to the new provider when the provider changes" time="0.004">
    </testcase>
    <testcase classname="MediaCard .updateState() should reset the state when onRetry method is called" name="MediaCard .updateState() should reset the state when onRetry method is called" time="0.006">
    </testcase>
    <testcase classname="MediaCard .updateState() should pass down &quot;onRetry&quot; prop when an error occurs" name="MediaCard .updateState() should pass down &quot;onRetry&quot; prop when an error occurs" time="0.086">
    </testcase>
  </testsuite>
  <testsuite name="MediaImage" errors="0" failures="0" skipped="1" timestamp="2018-01-09T09:40:19" time="0.893" tests="3">
    <testcase classname="MediaImage Fires onError method when URI dont work" name="MediaImage Fires onError method when URI dont work" time="0">
      <skipped/>
    </testcase>
    <testcase classname="MediaImage Implicitly disables cropping the image when dimensions are supplied" name="MediaImage Implicitly disables cropping the image when dimensions are supplied" time="0.012">
    </testcase>
    <testcase classname="MediaImage Only adds the image to the background when transparentFallback is disabled" name="MediaImage Only adds the image to the background when transparentFallback is disabled" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:20" time="0.56" tests="6">
    <testcase classname="@atlaskit/editor-core Event Dispatcher EventDispatcher #on should add event listener" name="@atlaskit/editor-core Event Dispatcher EventDispatcher #on should add event listener" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-core Event Dispatcher EventDispatcher #off should remove event listener" name="@atlaskit/editor-core Event Dispatcher EventDispatcher #off should remove event listener" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-core Event Dispatcher EventDispatcher #emit should call listener once with provided data" name="@atlaskit/editor-core Event Dispatcher EventDispatcher #emit should call listener once with provided data" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-core Event Dispatcher #createDispatch should return a dispatch function" name="@atlaskit/editor-core Event Dispatcher #createDispatch should return a dispatch function" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-core Event Dispatcher #createDispatch should call listener once with provided data" name="@atlaskit/editor-core Event Dispatcher #createDispatch should call listener once with provided data" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-core Event Dispatcher #createDispatch should call listener once with provided data when event is a plugin key" name="@atlaskit/editor-core Event Dispatcher #createDispatch should call listener once with provided data when event is a plugin key" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CardPreview" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:20" time="0.51" tests="4">
    <testcase classname="CardPreview should render the loading view when isPlaceholder=true" name="CardPreview should render the loading view when isPlaceholder=true" time="0.005">
    </testcase>
    <testcase classname="CardPreview should render the no-image view when url is undefined" name="CardPreview should render the no-image view when url is undefined" time="0.002">
    </testcase>
    <testcase classname="CardPreview should render the loading view when url is an empty string" name="CardPreview should render the loading view when url is an empty string" time="0.002">
    </testcase>
    <testcase classname="CardPreview should render the ImageLoader with all the views" name="CardPreview should render the ImageLoader with all the views" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="checkWebpSupport util" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:20" time="0.838" tests="4">
    <testcase classname="checkWebpSupport util without caching should return true if height is 2" name="checkWebpSupport util without caching should return true if height is 2" time="0.125">
    </testcase>
    <testcase classname="checkWebpSupport util without caching should return false if height is not 2" name="checkWebpSupport util without caching should return false if height is not 2" time="0.05">
    </testcase>
    <testcase classname="checkWebpSupport util with caching should use cache when called second time" name="checkWebpSupport util with caching should use cache when called second time" time="0.06">
    </testcase>
    <testcase classname="checkWebpSupport util should return even if onerror is called" name="checkWebpSupport util should return even if onerror is called" time="0.126">
    </testcase>
  </testsuite>
  <testsuite name="ak-button/default-behaviour" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:21" time="0.776" tests="17">
    <testcase classname="ak-button/default-behaviour button should have type=&quot;button&quot; by default" name="ak-button/default-behaviour button should have type=&quot;button&quot; by default" time="0.096">
    </testcase>
    <testcase classname="ak-button/default-behaviour should render button if there is no href property" name="ak-button/default-behaviour should render button if there is no href property" time="0.008">
    </testcase>
    <testcase classname="ak-button/default-behaviour should render link if href property is set" name="ak-button/default-behaviour should render link if href property is set" time="0.011">
    </testcase>
    <testcase classname="ak-button/default-behaviour should not render link without href prop, even if the target prop is set" name="ak-button/default-behaviour should not render link without href prop, even if the target prop is set" time="0.003">
    </testcase>
    <testcase classname="ak-button/default-behaviour should render span when the button is disabled and has href property" name="ak-button/default-behaviour should render span when the button is disabled and has href property" time="0.009">
    </testcase>
    <testcase classname="ak-button/default-behaviour should not render span when the button is disabled, but doesn&apos;t have href" name="ak-button/default-behaviour should not render span when the button is disabled, but doesn&apos;t have href" time="0.008">
    </testcase>
    <testcase classname="ak-button/default-behaviour should render icon if the prop iconBefore is set" name="ak-button/default-behaviour should render icon if the prop iconBefore is set" time="0.01">
    </testcase>
    <testcase classname="ak-button/default-behaviour should render iconBefore before children" name="ak-button/default-behaviour should render iconBefore before children" time="0.014">
    </testcase>
    <testcase classname="ak-button/default-behaviour should render icon if the prop iconAfter is set" name="ak-button/default-behaviour should render icon if the prop iconAfter is set" time="0.007">
    </testcase>
    <testcase classname="ak-button/default-behaviour should render iconAfter after children" name="ak-button/default-behaviour should render iconAfter after children" time="0.006">
    </testcase>
    <testcase classname="ak-button/default-behaviour should render button with full container width" name="ak-button/default-behaviour should render button with full container width" time="0.008">
    </testcase>
    <testcase classname="ak-button/default-behaviour should render button without full container width" name="ak-button/default-behaviour should render button without full container width" time="0.005">
    </testcase>
    <testcase classname="ak-button/default-behaviour should be able to render both of the icons" name="ak-button/default-behaviour should be able to render both of the icons" time="0.006">
    </testcase>
    <testcase classname="ak-button/default-behaviour should call onClick handler when link is clicked" name="ak-button/default-behaviour should call onClick handler when link is clicked" time="0.005">
    </testcase>
    <testcase classname="ak-button/default-behaviour should call onClick handler when button is clicked" name="ak-button/default-behaviour should call onClick handler when button is clicked" time="0.007">
    </testcase>
    <testcase classname="ak-button/default-behaviour should render tabIndex attribute when the tabIndex property is set" name="ak-button/default-behaviour should render tabIndex attribute when the tabIndex property is set" time="0.021">
    </testcase>
    <testcase classname="ak-button/default-behaviour should set accessibility attributes" name="ak-button/default-behaviour should set accessibility attributes" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Marks/Strong" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:21" time="0.463" tests="2">
    <testcase classname="Renderer - React/Marks/Strong should wrap content with &lt;strong&gt;-tag" name="Renderer - React/Marks/Strong should wrap content with &lt;strong&gt;-tag" time="0">
    </testcase>
    <testcase classname="Renderer - React/Marks/Strong should output correct html" name="Renderer - React/Marks/Strong should output correct html" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="CardGenericViewSmall" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:21" time="0.694" tests="5">
    <testcase classname="CardGenericViewSmall should render thumbnail for files" name="CardGenericViewSmall should render thumbnail for files" time="0.007">
    </testcase>
    <testcase classname="CardGenericViewSmall should render thumbnail for links" name="CardGenericViewSmall should render thumbnail for links" time="0.003">
    </testcase>
    <testcase classname="CardGenericViewSmall should render info for files" name="CardGenericViewSmall should render info for files" time="0.002">
    </testcase>
    <testcase classname="CardGenericViewSmall should render info for links" name="CardGenericViewSmall should render info for links" time="0.001">
    </testcase>
    <testcase classname="CardGenericViewSmall should allow manual retry when an error occurs" name="CardGenericViewSmall should allow manual retry when an error occurs" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/datetime-picker" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:21" time="0.485" tests="1">
    <testcase classname="@atlaskit/datetime-picker TimeDialog should render a Droplist containing a TimeDialogItem for each item" name="@atlaskit/datetime-picker TimeDialog should render a Droplist containing a TimeDialogItem for each item" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Breadcrumbs" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:22" time="0.7" tests="2">
    <testcase classname="Breadcrumbs exports the smart React component, Breadcrumbs component, and the Item component" name="Breadcrumbs exports the smart React component, Breadcrumbs component, and the Item component" time="0.008">
    </testcase>
    <testcase classname="Breadcrumbs with more than 8 items updates the expanded state when the ellipsis is clicked" name="Breadcrumbs with more than 8 items updates the expanded state when the ellipsis is clicked" time="0.141">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/tabs" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:22" time="0.832" tests="24">
    <testcase classname="@atlaskit/tabs Tabs rendering should be able to create a component" name="@atlaskit/tabs Tabs rendering should be able to create a component" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs rendering should render a tab navigation item for every entry in the array" name="@atlaskit/tabs Tabs rendering should render a tab navigation item for every entry in the array" time="0.006">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs rendering should only ever render a single tab content pane" name="@atlaskit/tabs Tabs rendering should only ever render a single tab content pane" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs props defaultSelected should set the selected tab on initial mount" name="@atlaskit/tabs Tabs props defaultSelected should set the selected tab on initial mount" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs props defaultSelected should accept an index" name="@atlaskit/tabs Tabs props defaultSelected should accept an index" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs props defaultSelected should use the isSelectedTest function if provided" name="@atlaskit/tabs Tabs props defaultSelected should use the isSelectedTest function if provided" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs props defaultSelected changing this prop should not update the selected tab after the initial mount" name="@atlaskit/tabs Tabs props defaultSelected changing this prop should not update the selected tab after the initial mount" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs props selected should set the selected tab on initial mount" name="@atlaskit/tabs Tabs props selected should set the selected tab on initial mount" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs props selected should take precedence over defaultSelected" name="@atlaskit/tabs Tabs props selected should take precedence over defaultSelected" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs props selected should use the isSelectedTest function if provided" name="@atlaskit/tabs Tabs props selected should use the isSelectedTest function if provided" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs props selected changing this prop should update the selected tab after the initial mount" name="@atlaskit/tabs Tabs props selected changing this prop should update the selected tab after the initial mount" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs props selected should default to the first tab if neither selected nor defaultSelected are set" name="@atlaskit/tabs Tabs props selected should default to the first tab if neither selected nor defaultSelected are set" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs props selected setting this prop should make the component &apos;controlled&apos;, which means it should not maintain its own internal state" name="@atlaskit/tabs Tabs props selected setting this prop should make the component &apos;controlled&apos;, which means it should not maintain its own internal state" time="0.044">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs props isSelectedTest should override the in-built check to determine whether a tab is selected" name="@atlaskit/tabs Tabs props isSelectedTest should override the in-built check to determine whether a tab is selected" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs props components should render a custom tab content component if components.Content is provided" name="@atlaskit/tabs Tabs props components should render a custom tab content component if components.Content is provided" time="0.012">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs props components should render a custom tab item component if components.Item is provided" name="@atlaskit/tabs Tabs props components should render a custom tab item component if components.Item is provided" time="0.008">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs props components should render the in-built components by default" name="@atlaskit/tabs Tabs props components should render the in-built components by default" time="0.017">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs props onSelect is not fired for default selected tab" name="@atlaskit/tabs Tabs props onSelect is not fired for default selected tab" time="0.019">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs props onSelect is fired with the selected tab and its index when selected by click" name="@atlaskit/tabs Tabs props onSelect is fired with the selected tab and its index when selected by click" time="0.027">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs props onSelect is fired with the selected tab and its index when selected by keyboard" name="@atlaskit/tabs Tabs props onSelect is fired with the selected tab and its index when selected by keyboard" time="0.019">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs behaviour keyboard navigation with 3 tabs, when the 2nd tab is selected pressing LEFT arrow selects the first tab" name="@atlaskit/tabs Tabs behaviour keyboard navigation with 3 tabs, when the 2nd tab is selected pressing LEFT arrow selects the first tab" time="0.021">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs behaviour keyboard navigation with 3 tabs, when the 2nd tab is selected pressing the RIGHT arrow selects the last tab" name="@atlaskit/tabs Tabs behaviour keyboard navigation with 3 tabs, when the 2nd tab is selected pressing the RIGHT arrow selects the last tab" time="0.022">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs behaviour keyboard navigation with 3 tabs, when the 2nd tab is selected pressing the LEFT arrow twice leaves selection on the first tab" name="@atlaskit/tabs Tabs behaviour keyboard navigation with 3 tabs, when the 2nd tab is selected pressing the LEFT arrow twice leaves selection on the first tab" time="0.018">
    </testcase>
    <testcase classname="@atlaskit/tabs Tabs behaviour keyboard navigation with 3 tabs, when the 2nd tab is selected pressing the RIGHT arrow twice leaves selection on the last tab" name="@atlaskit/tabs Tabs behaviour keyboard navigation with 3 tabs, when the 2nd tab is selected pressing the RIGHT arrow twice leaves selection on the last tab" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema textColor mark" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:22" time="1.184" tests="3">
    <testcase classname="@atlaskit/editor-common/schema textColor mark matches &lt;span style=&quot;color: rgb(151, 160, 175);&quot;&gt;text&lt;/span&gt;" name="@atlaskit/editor-common/schema textColor mark matches &lt;span style=&quot;color: rgb(151, 160, 175);&quot;&gt;text&lt;/span&gt;" time="0.006">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema textColor mark matches &lt;span style=&quot;color: #97a0af;&quot;&gt;text&lt;/span&gt;" name="@atlaskit/editor-common/schema textColor mark matches &lt;span style=&quot;color: #97a0af;&quot;&gt;text&lt;/span&gt;" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema textColor mark serializes to &lt;span style=&quot;color: ...&quot;&gt;" name="@atlaskit/editor-common/schema textColor mark serializes to &lt;span style=&quot;color: ...&quot;&gt;" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:22" time="0.857" tests="4">
    <testcase classname=" should render the component" name=" should render the component" time="0.016">
    </testcase>
    <testcase classname=" should highlight current date" name=" should highlight current date" time="0.244">
    </testcase>
    <testcase classname=" should call onSelect" name=" should call onSelect" time="0.005">
    </testcase>
    <testcase classname=" specifying selected days should select the specified days" name=" specifying selected days should select the specified days" time="0.163">
    </testcase>
  </testsuite>
  <testsuite name="getButtonProps" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:23" time="0.613" tests="9">
    <testcase classname="getButtonProps should pass through all props to a custom component" name="getButtonProps should pass through all props to a custom component" time="0.026">
    </testcase>
    <testcase classname="getButtonProps should not pass through all props to an inbuilt component" name="getButtonProps should not pass through all props to an inbuilt component" time="0.09">
    </testcase>
    <testcase classname="getButtonProps should add appearance props" name="getButtonProps should add appearance props" time="0.005">
    </testcase>
    <testcase classname="getButtonProps should pass interaction state props from the component&apos;s state" name="getButtonProps should pass interaction state props from the component&apos;s state" time="0.009">
    </testcase>
    <testcase classname="getButtonProps should add interaction handler props" name="getButtonProps should add interaction handler props" time="0.005">
    </testcase>
    <testcase classname="getButtonProps should pass interaction handler functions directly from the component" name="getButtonProps should pass interaction handler functions directly from the component" time="0.005">
    </testcase>
    <testcase classname="getButtonProps should pass the onClick handler from props" name="getButtonProps should pass the onClick handler from props" time="0.005">
    </testcase>
    <testcase classname="getButtonProps should add aria, form, id and type props to a button" name="getButtonProps should add aria, form, id and type props to a button" time="0.014">
    </testcase>
    <testcase classname="getButtonProps should add href and target props to a link" name="getButtonProps should add href and target props to a link" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Marks/Code" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:23" time="0.623" tests="2">
    <testcase classname="Renderer - React/Marks/Code should generate content with a &lt;Code&gt;-tag" name="Renderer - React/Marks/Code should generate content with a &lt;Code&gt;-tag" time="0.005">
    </testcase>
    <testcase classname="Renderer - React/Marks/Code should output correct html" name="Renderer - React/Marks/Code should output correct html" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Toggle" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:23" time="0.703" tests="10">
    <testcase classname="Toggle properties should set the correct icons when checked" name="Toggle properties should set the correct icons when checked" time="0.04">
    </testcase>
    <testcase classname="Toggle properties should set the correct icons when not checked" name="Toggle properties should set the correct icons when not checked" time="0.071">
    </testcase>
    <testcase classname="Toggle properties should disable the input when disabled" name="Toggle properties should disable the input when disabled" time="0.015">
    </testcase>
    <testcase classname="Toggle properties should not disabled the input when not disabled" name="Toggle properties should not disabled the input when not disabled" time="0.01">
    </testcase>
    <testcase classname="Toggle properties input events handlers should trigger event handlers for change" name="Toggle properties input events handlers should trigger event handlers for change" time="0.013">
    </testcase>
    <testcase classname="Toggle properties input events handlers should trigger event handlers for focus" name="Toggle properties input events handlers should trigger event handlers for focus" time="0.024">
    </testcase>
    <testcase classname="Toggle properties input events handlers should trigger event handlers for blur" name="Toggle properties input events handlers should trigger event handlers for blur" time="0.014">
    </testcase>
    <testcase classname="Toggle properties input events handlers should fire input focus related input handler when disabled" name="Toggle properties input events handlers should fire input focus related input handler when disabled" time="0.023">
    </testcase>
    <testcase classname="Toggle properties input events handlers should fire input focus related input handler when disabled" name="Toggle properties input events handlers should fire input focus related input handler when disabled" time="0.014">
    </testcase>
    <testcase classname="Toggle properties input events handlers should not fire change events when disabled" name="Toggle properties input events handlers should not fire change events when disabled" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Clipboard" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:24" time="0.551" tests="4">
    <testcase classname="Clipboard should not call this.uploadService.addFile() when a paste event is dispatched without files" name="Clipboard should not call this.uploadService.addFile() when a paste event is dispatched without files" time="0.01">
    </testcase>
    <testcase classname="Clipboard should call this.uploadService.addFile() when a paste event is dispatched with a single file" name="Clipboard should call this.uploadService.addFile() when a paste event is dispatched with a single file" time="0.005">
    </testcase>
    <testcase classname="Clipboard should call this.uploadService.addFile() when a paste event is dispatched with multiple files" name="Clipboard should call this.uploadService.addFile() when a paste event is dispatched with multiple files" time="0.003">
    </testcase>
    <testcase classname="Clipboard should not call this.uploadService.addFile() when deactivated and a paste event is dispatched a single file" name="Clipboard should not call this.uploadService.addFile() when deactivated and a paste event is dispatched a single file" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="CardImageView" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:24" time="0.71" tests="10">
    <testcase classname="CardImageView should render default icon according to mediaType" name="CardImageView should render default icon according to mediaType" time="0.058">
    </testcase>
    <testcase classname="CardImageView should render a custom icon when provided" name="CardImageView should render a custom icon when provided" time="0.017">
    </testcase>
    <testcase classname="CardImageView should render subtitle when provided" name="CardImageView should render subtitle when provided" time="0.014">
    </testcase>
    <testcase classname="CardImageView should render the overlay as NOT persistent when dataURI is a string and mediaType is &quot;video&quot;" name="CardImageView should render the overlay as NOT persistent when dataURI is a string and mediaType is &quot;video&quot;" time="0.008">
    </testcase>
    <testcase classname="CardImageView should render the overlay as NOT persistent when dataURI is a string and mediaType is &quot;audio&quot;" name="CardImageView should render the overlay as NOT persistent when dataURI is a string and mediaType is &quot;audio&quot;" time="0.001">
    </testcase>
    <testcase classname="CardImageView should render the overlay as NOT persistent when dataURI is a string and mediaType is &quot;image&quot;" name="CardImageView should render the overlay as NOT persistent when dataURI is a string and mediaType is &quot;image&quot;" time="0">
    </testcase>
    <testcase classname="CardImageView should render the overlay as persistent when dataURI is a string and mediaType is &quot;doc&quot;" name="CardImageView should render the overlay as persistent when dataURI is a string and mediaType is &quot;doc&quot;" time="0.003">
    </testcase>
    <testcase classname="CardImageView should render the overlay as persistent when dataURI is undefined" name="CardImageView should render the overlay as persistent when dataURI is undefined" time="0.001">
    </testcase>
    <testcase classname="CardImageView should render the UploadView with no overlay when status=uploading and card is NOT selectable" name="CardImageView should render the UploadView with no overlay when status=uploading and card is NOT selectable" time="0.002">
    </testcase>
    <testcase classname="CardImageView should render the UploadView with an overlay when status=uploading and card is selectable" name="CardImageView should render the UploadView with an overlay when status=uploading and card is selectable" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="getWsUrl" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:24" time="0.612" tests="14">
    <testcase classname="getWsUrl should use ws protocol for a websocket url if api url uses http" name="getWsUrl should use ws protocol for a websocket url if api url uses http" time="0.009">
    </testcase>
    <testcase classname="getWsUrl should use wss protocol for a websocket url if api url uses https" name="getWsUrl should use wss protocol for a websocket url if api url uses https" time="0.001">
    </testcase>
    <testcase classname="getWsUrl should use wss protocol for a websocket url if api url uses neight http or https" name="getWsUrl should use wss protocol for a websocket url if api url uses neight http or https" time="0">
    </testcase>
    <testcase classname="Ws should create a websocket using client credentials" name="Ws should create a websocket using client credentials" time="0.003">
    </testcase>
    <testcase classname="Ws should close the websocket when teardown is called" name="Ws should close the websocket when teardown is called" time="0.001">
    </testcase>
    <testcase classname="Ws should parse data and pass the result to onDataReceived function when data comes to the websocket" name="Ws should parse data and pass the result to onDataReceived function when data comes to the websocket" time="0.001">
    </testcase>
    <testcase classname="Ws should not swallow incorrect data error" name="Ws should not swallow incorrect data error" time="0.002">
    </testcase>
    <testcase classname="Ws should close websocket and call onConnectionLost if the websocket is in the closed state after 30 seconds" name="Ws should close websocket and call onConnectionLost if the websocket is in the closed state after 30 seconds" time="0.004">
    </testcase>
    <testcase classname="Ws should send data if the websocket is in the open state" name="Ws should send data if the websocket is in the open state" time="0.002">
    </testcase>
    <testcase classname="Ws should schedule sending data if the websocket is in the connecting state" name="Ws should schedule sending data if the websocket is in the connecting state" time="0.001">
    </testcase>
    <testcase classname="Ws should send ping message if the websocket is in the open state after 30 seconds" name="Ws should send ping message if the websocket is in the open state after 30 seconds" time="0.002">
    </testcase>
    <testcase classname="Ws should not send ping message and not close if the websocket is in the opening state after 30 seconds" name="Ws should not send ping message and not close if the websocket is in the opening state after 30 seconds" time="0.001">
    </testcase>
    <testcase classname="Ws should close websocket and call onConnectionLost if the websocket became closed after several pings" name="Ws should close websocket and call onConnectionLost if the websocket became closed after several pings" time="0.003">
    </testcase>
    <testcase classname="Ws should not send ping messages after teardown() was called" name="Ws should not send ping messages after teardown() was called" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/RecentSearch/RecentItem" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:25" time="0.421" tests="1">
    <testcase classname="@atlaskit/editor-core/ui/RecentSearch/RecentItem should render the item" name="@atlaskit/editor-core/ui/RecentSearch/RecentItem should render the item" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/datetime-picker" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:24" time="1.758" tests="10">
    <testcase classname="@atlaskit/datetime-picker DateDialog should render a layer containing the children" name="@atlaskit/datetime-picker DateDialog should render a layer containing the children" time="0.008">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DateDialog should render a Calendar in a dialog when isOpen is true" name="@atlaskit/datetime-picker DateDialog should render a Calendar in a dialog when isOpen is true" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DateDialog should not render anything in the dialog when isOpen is false" name="@atlaskit/datetime-picker DateDialog should not render anything in the dialog when isOpen is false" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DateDialog should initialise the calendar date using a provided date value" name="@atlaskit/datetime-picker DateDialog should initialise the calendar date using a provided date value" time="0.01">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DateDialog should initialise the calendar date using today&apos;s date if no value is provided" name="@atlaskit/datetime-picker DateDialog should initialise the calendar date using today&apos;s date if no value is provided" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DateDialog should update the focused calendar date when the calendar is navigated" name="@atlaskit/datetime-picker DateDialog should update the focused calendar date when the calendar is navigated" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DateDialog should call onUpdate when a valid date is selected" name="@atlaskit/datetime-picker DateDialog should call onUpdate when a valid date is selected" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DateDialog should not call onUpdate when a disabled date is selected" name="@atlaskit/datetime-picker DateDialog should not call onUpdate when a disabled date is selected" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DateDialog should call onTriggerClose when the Escape key is pressed" name="@atlaskit/datetime-picker DateDialog should call onTriggerClose when the Escape key is pressed" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DateDialog should re-initialize the calendar date when opened" name="@atlaskit/datetime-picker DateDialog should re-initialize the calendar date when opened" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="validateMediaFile" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:25" time="0.454" tests="10">
    <testcase classname="validateMediaFile should not have error given id with more than 8 alphanumeric characters" name="validateMediaFile should not have error given id with more than 8 alphanumeric characters" time="0.002">
    </testcase>
    <testcase classname="validateMediaFile should not have error given id with non-alphanumeric characters" name="validateMediaFile should not have error given id with non-alphanumeric characters" time="0">
    </testcase>
    <testcase classname="validateMediaFile should have error given empty id" name="validateMediaFile should have error given empty id" time="0.001">
    </testcase>
    <testcase classname="validateMediaFile shold not have error given non-empty name" name="validateMediaFile shold not have error given non-empty name" time="0">
    </testcase>
    <testcase classname="validateMediaFile should not have error given empty name" name="validateMediaFile should not have error given empty name" time="0.001">
    </testcase>
    <testcase classname="validateMediaFile should not have error given non-empty type" name="validateMediaFile should not have error given non-empty type" time="0">
    </testcase>
    <testcase classname="validateMediaFile should not have error given positive or zero size" name="validateMediaFile should not have error given positive or zero size" time="0">
    </testcase>
    <testcase classname="validateMediaFile should have error given negative size" name="validateMediaFile should have error given negative size" time="0.002">
    </testcase>
    <testcase classname="validateMediaFile should not have error given positive creationDate" name="validateMediaFile should not have error given positive creationDate" time="0.001">
    </testcase>
    <testcase classname="validateMediaFile should have error given zero creationDate" name="validateMediaFile should have error given zero creationDate" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;FolderViewr /&gt;" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:25" time="0.753" tests="4">
    <testcase classname="&lt;FolderViewr /&gt; should render loading button given folder is loading" name="&lt;FolderViewr /&gt; should render loading button given folder is loading" time="0.012">
    </testcase>
    <testcase classname="&lt;FolderViewr /&gt; should not call onLoadMoreClick handler given folder is loading" name="&lt;FolderViewr /&gt; should not call onLoadMoreClick handler given folder is loading" time="0.003">
    </testcase>
    <testcase classname="&lt;FolderViewr /&gt; should render load more button given next page cursor" name="&lt;FolderViewr /&gt; should render load more button given next page cursor" time="0.002">
    </testcase>
    <testcase classname="&lt;FolderViewr /&gt; should call onLoadMoreClick handler given next page cursor" name="&lt;FolderViewr /&gt; should call onLoadMoreClick handler given next page cursor" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="FileCardView" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:25" time="0.866" tests="4">
    <testcase classname="FileCardView should render card with non-persisting overlay when supplied mediaType is &quot;image&quot; and dataUri string is supplied" name="FileCardView should render card with non-persisting overlay when supplied mediaType is &quot;image&quot; and dataUri string is supplied" time="0.081">
    </testcase>
    <testcase classname="FileCardView should render empty wrapper when error prop is true" name="FileCardView should render empty wrapper when error prop is true" time="0.046">
    </testcase>
    <testcase classname="FileCardView should render card overlay with the error prop true when supplied error prop is true" name="FileCardView should render card overlay with the error prop true when supplied error prop is true" time="0.022">
    </testcase>
    <testcase classname="FileCardView should NOT render an overlay when loading prop is true" name="FileCardView should NOT render an overlay when loading prop is true" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="HTMLEmbedCard" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:26" time="0.626" tests="5">
    <testcase classname="HTMLEmbedCard should render isLoading=true when the iframe is loading" name="HTMLEmbedCard should render isLoading=true when the iframe is loading" time="0.016">
    </testcase>
    <testcase classname="HTMLEmbedCard should render isLoading=false when the HTML has been injected and the size has changed" name="HTMLEmbedCard should render isLoading=false when the HTML has been injected and the size has changed" time="0.051">
    </testcase>
    <testcase classname="HTMLEmbedCard should post the HTML to iframe when the iframe has loaded" name="HTMLEmbedCard should post the HTML to iframe when the iframe has loaded" time="0.009">
    </testcase>
    <testcase classname="HTMLEmbedCard should not render width+height when width+height are undefined" name="HTMLEmbedCard should not render width+height when width+height are undefined" time="0.001">
    </testcase>
    <testcase classname="HTMLEmbedCard should render width+height when the width+height are sent by the iframe" name="HTMLEmbedCard should render width+height when the width+height are sent by the iframe" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Code" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:26" time="0.528" tests="1">
    <testcase classname="Code should have &quot;markdown&quot; as default language" name="Code should have &quot;markdown&quot; as default language" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Fetcher" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:26" time="0.616" tests="4">
    <testcase classname="Fetcher getPreview() should call api with biggest supported dimensions for image files" name="Fetcher getPreview() should call api with biggest supported dimensions for image files" time="0.002">
    </testcase>
    <testcase classname="Fetcher getPreview() should call api with default dimensions for non image files" name="Fetcher getPreview() should call api with default dimensions for non image files" time="0">
    </testcase>
    <testcase classname="Fetcher getImagePreview() should return a valid image preview" name="Fetcher getImagePreview() should return a valid image preview" time="0.001">
    </testcase>
    <testcase classname="Fetcher flattenAccounts() flattens the response data into a list of accounts" name="Fetcher flattenAccounts() flattens the response data into a list of accounts" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="index" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:26" time="0.719" tests="4">
    <testcase classname="index getCSSUnitValue should pass through strings as unchanged" name="index getCSSUnitValue should pass through strings as unchanged" time="0.003">
    </testcase>
    <testcase classname="index getCSSUnitValue should append &quot;px&quot; to the end of numbers" name="index getCSSUnitValue should append &quot;px&quot; to the end of numbers" time="0.001">
    </testcase>
    <testcase classname="index toHumanReadableMediaSize should return no decimal places when the media size is less than 1 MB" name="index toHumanReadableMediaSize should return no decimal places when the media size is less than 1 MB" time="0.001">
    </testcase>
    <testcase classname="index toHumanReadableMediaSize should return one decimal place when the media size is greater than or equal to 1 MB" name="index toHumanReadableMediaSize should return one decimal place when the media size is greater than or equal to 1 MB" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/onboarding" errors="0" failures="0" skipped="2" timestamp="2018-01-09T09:40:27" time="0.643" tests="6">
    <testcase classname="@atlaskit/onboarding manager should render as a div by default" name="@atlaskit/onboarding manager should render as a div by default" time="0.008">
    </testcase>
    <testcase classname="@atlaskit/onboarding manager should accept component as a prop" name="@atlaskit/onboarding manager should accept component as a prop" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/onboarding manager should accept complex component as a prop" name="@atlaskit/onboarding manager should accept complex component as a prop" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/onboarding target should render its children only" name="@atlaskit/onboarding target should render its children only" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/onboarding spotlight should render content" name="@atlaskit/onboarding spotlight should render content" time="0">
      <skipped/>
    </testcase>
    <testcase classname="@atlaskit/onboarding spotlight should render SpotlightTarget in Spotlight" name="@atlaskit/onboarding spotlight should render SpotlightTarget in Spotlight" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/field-radio-group" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:27" time="0.66" tests="14">
    <testcase classname="@atlaskit/field-radio-group Radio exports the Radio component" name="@atlaskit/field-radio-group Radio exports the Radio component" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group Radio construction should be able to create a component" name="@atlaskit/field-radio-group Radio construction should be able to create a component" time="0.063">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group Radio construction should render an input and the content" name="@atlaskit/field-radio-group Radio construction should render an input and the content" time="0.029">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group Radio construction should render content with markup correctly" name="@atlaskit/field-radio-group Radio construction should render content with markup correctly" time="0.011">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group Radio props isDisabled prop should be reflected to the input" name="@atlaskit/field-radio-group Radio props isDisabled prop should be reflected to the input" time="0.013">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group Radio props isDisabled prop should be reflected to the input" name="@atlaskit/field-radio-group Radio props isDisabled prop should be reflected to the input" time="0.011">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group Radio props isRequired prop should be reflected to the input" name="@atlaskit/field-radio-group Radio props isRequired prop should be reflected to the input" time="0.009">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group Radio props isRequired prop should be reflected to the input" name="@atlaskit/field-radio-group Radio props isRequired prop should be reflected to the input" time="0.016">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group Radio props isSelected prop should be reflected to the input" name="@atlaskit/field-radio-group Radio props isSelected prop should be reflected to the input" time="0.011">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group Radio props isSelected prop should be reflected to the input" name="@atlaskit/field-radio-group Radio props isSelected prop should be reflected to the input" time="0.012">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group Radio props name prop should be reflected to the input" name="@atlaskit/field-radio-group Radio props name prop should be reflected to the input" time="0.012">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group Radio props onChange prop should be reflected to the input" name="@atlaskit/field-radio-group Radio props onChange prop should be reflected to the input" time="0.01">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group Radio props onChange prop should be reflected to the input" name="@atlaskit/field-radio-group Radio props onChange prop should be reflected to the input" time="0.009">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group Radio props value prop should be reflected to the input" name="@atlaskit/field-radio-group Radio props value prop should be reflected to the input" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="Pool" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:28" time="0.421" tests="4">
    <testcase classname="Pool invokes the create function when creating the first item" name="Pool invokes the create function when creating the first item" time="0.004">
    </testcase>
    <testcase classname="Pool does not invokes the create function when creating the second item" name="Pool does not invokes the create function when creating the second item" time="0.001">
    </testcase>
    <testcase classname="Pool invokes the create function again when releasing all created items" name="Pool invokes the create function again when releasing all created items" time="0.001">
    </testcase>
    <testcase classname="Pool invokes the create function for separate ids multiple times" name="Pool invokes the create function for separate ids multiple times" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Image cropper" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:27" time="0.881" tests="6">
    <testcase classname="Image cropper with image width image tag should have defined source" name="Image cropper with image width image tag should have defined source" time="0.026">
    </testcase>
    <testcase classname="Image cropper with image width image tag should have defined position" name="Image cropper with image width image tag should have defined position" time="0.008">
    </testcase>
    <testcase classname="Image cropper with image width image tag should have scaled width" name="Image cropper with image width image tag should have scaled width" time="0.007">
    </testcase>
    <testcase classname="Image cropper with image width container should have defined size" name="Image cropper with image width container should have defined size" time="0.011">
    </testcase>
    <testcase classname="Image cropper with image width should call onDragging callback" name="Image cropper with image width should call onDragging callback" time="0.018">
    </testcase>
    <testcase classname="Image cropper without image width should call onImageSize when image is loaded" name="Image cropper without image width should call onImageSize when image is loaded" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="MediaEditor DefaultShapeDeleter" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:28" time="0.56" tests="8">
    <testcase classname="MediaEditor DefaultShapeDeleter should not emit deleteShape if deletion is not allowed" name="MediaEditor DefaultShapeDeleter should not emit deleteShape if deletion is not allowed" time="0.009">
    </testcase>
    <testcase classname="MediaEditor DefaultShapeDeleter should emit deleteShape when Delete key is passed and deletion is allowed" name="MediaEditor DefaultShapeDeleter should emit deleteShape when Delete key is passed and deletion is allowed" time="0.008">
    </testcase>
    <testcase classname="MediaEditor DefaultShapeDeleter should emit deleteShape when Backspace key is passed and deletion is allowed" name="MediaEditor DefaultShapeDeleter should emit deleteShape when Backspace key is passed and deletion is allowed" time="0.007">
    </testcase>
    <testcase classname="MediaEditor DefaultShapeDeleter should emit deleteShape when key #46 (delete) is passed and deletion is allowed" name="MediaEditor DefaultShapeDeleter should emit deleteShape when key #46 (delete) is passed and deletion is allowed" time="0.004">
    </testcase>
    <testcase classname="MediaEditor DefaultShapeDeleter should emit deleteShape when key #8 (backspace) is passed and deletion is allowed" name="MediaEditor DefaultShapeDeleter should emit deleteShape when key #8 (backspace) is passed and deletion is allowed" time="0.001">
    </testcase>
    <testcase classname="MediaEditor DefaultShapeDeleter should not emit deleteShape when PageDown key is passed and deletion is allowed" name="MediaEditor DefaultShapeDeleter should not emit deleteShape when PageDown key is passed and deletion is allowed" time="0.001">
    </testcase>
    <testcase classname="MediaEditor DefaultShapeDeleter should not emit deleteShape when key #37 (arrow left) is passed and deletion is allowed" name="MediaEditor DefaultShapeDeleter should not emit deleteShape when key #37 (arrow left) is passed and deletion is allowed" time="0.001">
    </testcase>
    <testcase classname="MediaEditor DefaultShapeDeleter should not emit deleteShape if deletion was already disabled" name="MediaEditor DefaultShapeDeleter should not emit deleteShape if deletion was already disabled" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MediaCollectionViewer /&gt;" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:28" time="0.689" tests="14">
    <testcase classname="&lt;MediaCollectionViewer /&gt; should get the correct collection provider" name="&lt;MediaCollectionViewer /&gt; should get the correct collection provider" time="0.009">
    </testcase>
    <testcase classname="&lt;MediaCollectionViewer /&gt; should get the correct collection provider given page size" name="&lt;MediaCollectionViewer /&gt; should get the correct collection provider given page size" time="0.003">
    </testcase>
    <testcase classname="&lt;MediaCollectionViewer /&gt; should construct a media viewer instance with default config" name="&lt;MediaCollectionViewer /&gt; should construct a media viewer instance with default config" time="0.002">
    </testcase>
    <testcase classname="&lt;MediaCollectionViewer /&gt; should construct a media viewer instance with custom config" name="&lt;MediaCollectionViewer /&gt; should construct a media viewer instance with custom config" time="0.001">
    </testcase>
    <testcase classname="&lt;MediaCollectionViewer /&gt; should listen on fv.close given an onClose handler" name="&lt;MediaCollectionViewer /&gt; should listen on fv.close given an onClose handler" time="0.007">
    </testcase>
    <testcase classname="&lt;MediaCollectionViewer /&gt; should not listen on fv.close given no onClose handler" name="&lt;MediaCollectionViewer /&gt; should not listen on fv.close given no onClose handler" time="0.005">
    </testcase>
    <testcase classname="&lt;MediaCollectionViewer /&gt; should listen on fv.changeFile to detect if the next page needs to be loaded" name="&lt;MediaCollectionViewer /&gt; should listen on fv.changeFile to detect if the next page needs to be loaded" time="0.005">
    </testcase>
    <testcase classname="&lt;MediaCollectionViewer /&gt; should open media viewer with query, given media viewer is not open" name="&lt;MediaCollectionViewer /&gt; should open media viewer with query, given media viewer is not open" time="0.006">
    </testcase>
    <testcase classname="&lt;MediaCollectionViewer /&gt; should open media viewer with first item from the collection, if no selectedItem passed" name="&lt;MediaCollectionViewer /&gt; should open media viewer with first item from the collection, if no selectedItem passed" time="0.004">
    </testcase>
    <testcase classname="&lt;MediaCollectionViewer /&gt; should not open media viewer, if selectedItem was passed but not items were found in the collection" name="&lt;MediaCollectionViewer /&gt; should not open media viewer, if selectedItem was passed but not items were found in the collection" time="0.004">
    </testcase>
    <testcase classname="&lt;MediaCollectionViewer /&gt; should not open media viewer, if no selectedItem was passed and not items were found in the collection" name="&lt;MediaCollectionViewer /&gt; should not open media viewer, if no selectedItem was passed and not items were found in the collection" time="0.003">
    </testcase>
    <testcase classname="&lt;MediaCollectionViewer /&gt; should set files with query and not open media viewer, given media viewer is already open" name="&lt;MediaCollectionViewer /&gt; should set files with query and not open media viewer, given media viewer is already open" time="0.003">
    </testcase>
    <testcase classname="&lt;MediaCollectionViewer /&gt; should load next page, given media viewer is showing last page on navigation" name="&lt;MediaCollectionViewer /&gt; should load next page, given media viewer is showing last page on navigation" time="0.003">
    </testcase>
    <testcase classname="&lt;MediaCollectionViewer /&gt; should not load next page, given media viewer not is showing last page on navigation" name="&lt;MediaCollectionViewer /&gt; should not load next page, given media viewer not is showing last page on navigation" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="WsConnectionHolder" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:28" time="0.678" tests="11">
    <testcase classname="WsConnectionHolder connection handling should not create a connection when constructed" name="WsConnectionHolder connection handling should not create a connection when constructed" time="0.002">
    </testcase>
    <testcase classname="WsConnectionHolder connection handling should open a connection when a new activity added" name="WsConnectionHolder connection handling should open a connection when a new activity added" time="0.002">
    </testcase>
    <testcase classname="WsConnectionHolder connection handling should open only one connection when two activities are added" name="WsConnectionHolder connection handling should open only one connection when two activities are added" time="0.001">
    </testcase>
    <testcase classname="WsConnectionHolder connection handling should close the connection after activity is complete" name="WsConnectionHolder connection handling should close the connection after activity is complete" time="0.002">
    </testcase>
    <testcase classname="WsConnectionHolder connection handling should close the connection after all added activities are complete" name="WsConnectionHolder connection handling should close the connection after all added activities are complete" time="0.001">
    </testcase>
    <testcase classname="WsConnectionHolder connection handling should recreate the connection when new activity is added after previous were completed" name="WsConnectionHolder connection handling should recreate the connection when new activity is added after previous were completed" time="0.001">
    </testcase>
    <testcase classname="WsConnectionHolder connection handling should reuse the connection if not all the activities were completed" name="WsConnectionHolder connection handling should reuse the connection if not all the activities were completed" time="0.001">
    </testcase>
    <testcase classname="WsConnectionHolder passing data from websocket to the activities should pass data from websocket to stored activities" name="WsConnectionHolder passing data from websocket to the activities should pass data from websocket to stored activities" time="0.002">
    </testcase>
    <testcase classname="WsConnectionHolder passing data from websocket to the activities should not pass data from websocket to completed activities" name="WsConnectionHolder passing data from websocket to the activities should not pass data from websocket to completed activities" time="0.001">
    </testcase>
    <testcase classname="WsConnectionHolder passing data from websocket to the activities should send data when the websocket is open" name="WsConnectionHolder passing data from websocket to the activities should send data when the websocket is open" time="0.001">
    </testcase>
    <testcase classname="WsConnectionHolder passing data from websocket to the activities should throw an error when the websocket is closed" name="WsConnectionHolder passing data from websocket to the activities should throw an error when the websocket is closed" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="ActionsView" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:28" time="0.891" tests="12">
    <testcase classname="ActionsView should render no button and no menu items when there are zero actions" name="ActionsView should render no button and no menu items when there are zero actions" time="0.01">
    </testcase>
    <testcase classname="ActionsView should render a button and zero menu items when there is one action" name="ActionsView should render a button and zero menu items when there is one action" time="0.004">
    </testcase>
    <testcase classname="ActionsView should render a two buttons and zero menu items when there is two actions" name="ActionsView should render a two buttons and zero menu items when there is two actions" time="0.001">
    </testcase>
    <testcase classname="ActionsView should render a button and two menu items when there are more than two actions" name="ActionsView should render a button and two menu items when there are more than two actions" time="0.071">
    </testcase>
    <testcase classname="ActionsView should render success message and no buttons" name="ActionsView should render success message and no buttons" time="0.03">
    </testcase>
    <testcase classname="ActionsView should render failure message and no buttons" name="ActionsView should render failure message and no buttons" time="0.014">
    </testcase>
    <testcase classname="ActionsView should render try again button with failure message and no buttons" name="ActionsView should render try again button with failure message and no buttons" time="0.024">
    </testcase>
    <testcase classname="ActionsView should reset failure state on clicking try again button" name="ActionsView should reset failure state on clicking try again button" time="0.024">
    </testcase>
    <testcase classname="ActionsView should pass action and progress handlers to callback on button click" name="ActionsView should pass action and progress handlers to callback on button click" time="0.016">
    </testcase>
    <testcase classname="ActionsView should update state on progress handler execution" name="ActionsView should update state on progress handler execution" time="0.048">
    </testcase>
    <testcase classname="ActionsView should update state on success handler execution" name="ActionsView should update state on success handler execution" time="0.018">
    </testcase>
    <testcase classname="ActionsView should update state on failure handler execution" name="ActionsView should update state on failure handler execution" time="0.067">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema media node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:29" time="0.707" tests="9">
    <testcase classname="@atlaskit/editor-common/schema media node should parse html" name="@atlaskit/editor-common/schema media node should parse html" time="0.024">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema media node should parse html (with occurrenceKey)" name="@atlaskit/editor-common/schema media node should parse html (with occurrenceKey)" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema media node should encode to html" name="@atlaskit/editor-common/schema media node should encode to html" time="0.009">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema media node should encode to html (with occurrenceKey)" name="@atlaskit/editor-common/schema media node should encode to html (with occurrenceKey)" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema media node should strip optional attrs during JSON serialization" name="@atlaskit/editor-common/schema media node should strip optional attrs during JSON serialization" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema media node should serialize occurrenceKey when available" name="@atlaskit/editor-common/schema media node should serialize occurrenceKey when available" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema media node should not serialize optional key with null value" name="@atlaskit/editor-common/schema media node should not serialize optional key with null value" time="0">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema media node should not serialize optional string key with empty string" name="@atlaskit/editor-common/schema media node should not serialize optional string key with empty string" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema media node should serialize optional number keys with value 0" name="@atlaskit/editor-common/schema media node should serialize optional number keys with value 0" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Actions" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:29" time="0.724" tests="9">
    <testcase classname="Actions should render zero actions as null" name="Actions should render zero actions as null" time="0.006">
    </testcase>
    <testcase classname="Actions should render a single action as a drop down menu when compact=true" name="Actions should render a single action as a drop down menu when compact=true" time="0.018">
    </testcase>
    <testcase classname="Actions should render a single action as a single button when compact=false" name="Actions should render a single action as a single button when compact=false" time="0.065">
    </testcase>
    <testcase classname="Actions should render two actions as two buttons when compact=false" name="Actions should render two actions as two buttons when compact=false" time="0.008">
    </testcase>
    <testcase classname="Actions should render three actions as one button and a drop down menu when compact=false" name="Actions should render three actions as one button and a drop down menu when compact=false" time="0.024">
    </testcase>
    <testcase classname="Actions should call the handler for the first action when it is a button" name="Actions should call the handler for the first action when it is a button" time="0.001">
    </testcase>
    <testcase classname="Actions should call the handler for the first action when it is a drop down item" name="Actions should call the handler for the first action when it is a drop down item" time="0.003">
    </testcase>
    <testcase classname="Actions should call the handler for the second action when it is a button" name="Actions should call the handler for the second action when it is a button" time="0.002">
    </testcase>
    <testcase classname="Actions should call the handler for the second action when it is a drop down item" name="Actions should call the handler for the second action when it is a drop down item" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="LinkCardGenericView" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:29" time="0.859" tests="20">
    <testcase classname="LinkCardGenericView should render a link when a link is provided" name="LinkCardGenericView should render a link when a link is provided" time="0.003">
    </testcase>
    <testcase classname="LinkCardGenericView should not render a link when a link is not provided" name="LinkCardGenericView should not render a link when a link is not provided" time="0.001">
    </testcase>
    <testcase classname="LinkCardGenericView should have a minWidth of 400 when appearance=horizontal" name="LinkCardGenericView should have a minWidth of 400 when appearance=horizontal" time="0.001">
    </testcase>
    <testcase classname="LinkCardGenericView should have a minWidth of 272 when appearance!=horizontal" name="LinkCardGenericView should have a minWidth of 272 when appearance!=horizontal" time="0.001">
    </testcase>
    <testcase classname="LinkCardGenericView should have a maxWidth of 400 when appearance=horizontal" name="LinkCardGenericView should have a maxWidth of 400 when appearance=horizontal" time="0.001">
    </testcase>
    <testcase classname="LinkCardGenericView should have a maxWidth of 400 when appearance!=horizontal" name="LinkCardGenericView should have a maxWidth of 400 when appearance!=horizontal" time="0.001">
    </testcase>
    <testcase classname="LinkCardGenericView should not render an icon when isLoading=true" name="LinkCardGenericView should not render an icon when isLoading=true" time="0.001">
    </testcase>
    <testcase classname="LinkCardGenericView should render the LinkIcon when isLoading=false" name="LinkCardGenericView should render the LinkIcon when isLoading=false" time="0.003">
    </testcase>
    <testcase classname="LinkCardGenericView should render the ErrorCard when there is an errorMessage" name="LinkCardGenericView should render the ErrorCard when there is an errorMessage" time="0.003">
    </testcase>
    <testcase classname="LinkCardGenericView should not render ErrorWrapper when there is not an errorMessage" name="LinkCardGenericView should not render ErrorWrapper when there is not an errorMessage" time="0.003">
    </testcase>
    <testcase classname="LinkCardGenericView should not render CardDetails when there is an errorMessage" name="LinkCardGenericView should not render CardDetails when there is an errorMessage" time="0.001">
    </testcase>
    <testcase classname="LinkCardGenericView should render CardDetails when there is not an errorMessage" name="LinkCardGenericView should render CardDetails when there is not an errorMessage" time="0.001">
    </testcase>
    <testcase classname="LinkCardGenericView should not render CardPreview when there is an errorMessage" name="LinkCardGenericView should not render CardPreview when there is an errorMessage" time="0.001">
    </testcase>
    <testcase classname="LinkCardGenericView should render CardPreview when there is not an errorMessage" name="LinkCardGenericView should render CardPreview when there is not an errorMessage" time="0.001">
    </testcase>
    <testcase classname="LinkCardGenericView should render the preview when isHorizontal=false" name="LinkCardGenericView should render the preview when isHorizontal=false" time="0.001">
    </testcase>
    <testcase classname="LinkCardGenericView should not render the preview when isHorizontal=true" name="LinkCardGenericView should not render the preview when isHorizontal=true" time="0.001">
    </testcase>
    <testcase classname="LinkCardGenericView should render the site name when the site name is provided" name="LinkCardGenericView should render the site name when the site name is provided" time="0.001">
    </testcase>
    <testcase classname="LinkCardGenericView should render the site URL when the site name is not provided" name="LinkCardGenericView should render the site URL when the site name is not provided" time="0.001">
    </testcase>
    <testcase classname="LinkCardGenericView should render the thumnail when isHorizontal=true" name="LinkCardGenericView should render the thumnail when isHorizontal=true" time="0.001">
    </testcase>
    <testcase classname="LinkCardGenericView should rnot ender the thumnail when isHorizontal=false" name="LinkCardGenericView should rnot ender the thumnail when isHorizontal=false" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="RemoteMediaCollectionProvider" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:30" time="0.684" tests="9">
    <testcase classname="RemoteMediaCollectionProvider should load the first page on construction" name="RemoteMediaCollectionProvider should load the first page on construction" time="0.011">
    </testcase>
    <testcase classname="RemoteMediaCollectionProvider should load the next page" name="RemoteMediaCollectionProvider should load the next page" time="0.008">
    </testcase>
    <testcase classname="RemoteMediaCollectionProvider should load all the pages until it finds occurrence key" name="RemoteMediaCollectionProvider should load all the pages until it finds occurrence key" time="0.007">
    </testcase>
    <testcase classname="RemoteMediaCollectionProvider should load all the pages if it can&apos;t find the occurrence key" name="RemoteMediaCollectionProvider should load all the pages if it can&apos;t find the occurrence key" time="0.007">
    </testcase>
    <testcase classname="RemoteMediaCollectionProvider refresh should fetch and not add any new items to the collection when there are no new items" name="RemoteMediaCollectionProvider refresh should fetch and not add any new items to the collection when there are no new items" time="0.004">
    </testcase>
    <testcase classname="RemoteMediaCollectionProvider refresh should fetch and add new items from the first page to the collection when we have loaded the first page" name="RemoteMediaCollectionProvider refresh should fetch and add new items from the first page to the collection when we have loaded the first page" time="0.002">
    </testcase>
    <testcase classname="RemoteMediaCollectionProvider refresh should fetch and add new items from the first page to the collection when we have loaded the first page and multiple items have the same ID" name="RemoteMediaCollectionProvider refresh should fetch and add new items from the first page to the collection when we have loaded the first page and multiple items have the same ID" time="0.002">
    </testcase>
    <testcase classname="RemoteMediaCollectionProvider refresh should fetch and add new items from the first page to the collection when we have loaded the second page" name="RemoteMediaCollectionProvider refresh should fetch and add new items from the first page to the collection when we have loaded the second page" time="0.002">
    </testcase>
    <testcase classname="RemoteMediaCollectionProvider refresh should fetch and add new items from the first two pages to the collection when we have loaded the first page" name="RemoteMediaCollectionProvider refresh should fetch and add new items from the first two pages to the collection when we have loaded the first page" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/datetime-picker" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:30" time="0.505" tests="11">
    <testcase classname="@atlaskit/datetime-picker Picker renders a dialog and field with the correct properties" name="@atlaskit/datetime-picker Picker renders a dialog and field with the correct properties" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker Picker renders the icon if shouldShowIcon is true" name="@atlaskit/datetime-picker Picker renders the icon if shouldShowIcon is true" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker Picker does not render the icon if shouldShowIcon is false" name="@atlaskit/datetime-picker Picker does not render the icon if shouldShowIcon is false" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker Picker calls onIconClick on icon MouseDown event" name="@atlaskit/datetime-picker Picker calls onIconClick on icon MouseDown event" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker Picker does not call onIconClick on icon Mousedown event when isDisabled is true" name="@atlaskit/datetime-picker Picker does not call onIconClick on icon Mousedown event when isDisabled is true" time="0.078">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker Picker calls onFieldBlur when the field is blurred" name="@atlaskit/datetime-picker Picker calls onFieldBlur when the field is blurred" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker Picker calls onFieldChange when the field is changed" name="@atlaskit/datetime-picker Picker calls onFieldChange when the field is changed" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker Picker calls onFieldTriggerOpen when the field triggers a dialog open" name="@atlaskit/datetime-picker Picker calls onFieldTriggerOpen when the field triggers a dialog open" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker Picker calls onPickerBlur when the picker is blurred" name="@atlaskit/datetime-picker Picker calls onPickerBlur when the picker is blurred" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker Picker calls onPickerTriggerClose when the picker triggers a dialog close" name="@atlaskit/datetime-picker Picker calls onPickerTriggerClose when the picker triggers a dialog close" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker Picker calls onPickerUpdate when the picker is updated" name="@atlaskit/datetime-picker Picker calls onPickerUpdate when the picker is updated" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="GenericButton" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:30" time="0.615" tests="5">
    <testcase classname="GenericButton should display normal button by default" name="GenericButton should display normal button by default" time="0.069">
    </testcase>
    <testcase classname="GenericButton should display active button if isActive set" name="GenericButton should display active button if isActive set" time="0.001">
    </testcase>
    <testcase classname="GenericButton should have clicked state on mousedown-mouseup and left button" name="GenericButton should have clicked state on mousedown-mouseup and left button" time="0.005">
    </testcase>
    <testcase classname="GenericButton should have clicked state on mousedown-mouseleave and left button" name="GenericButton should have clicked state on mousedown-mouseleave and left button" time="0.003">
    </testcase>
    <testcase classname="GenericButton should not have clicked state on mousedown-mouseup and right button" name="GenericButton should not have clicked state on mousedown-mouseup and right button" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="MediaLinkService" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:30" time="0.607" tests="4">
    <testcase classname="MediaLinkService should resolve link item" name="MediaLinkService should resolve link item" time="0.031">
    </testcase>
    <testcase classname="MediaLinkService should reject get link when server responded with 500" name="MediaLinkService should reject get link when server responded with 500" time="0.003">
    </testcase>
    <testcase classname="MediaLinkService should add link" name="MediaLinkService should add link" time="0.005">
    </testcase>
    <testcase classname="MediaLinkService should reject add link when server responded with 500" name="MediaLinkService should reject add link when server responded with 500" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Navigation /&gt;" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:30" time="0.789" tests="11">
    <testcase classname="&lt;Navigation /&gt; Connected Navigation component should dispatch an action when onChangeAccount is called" name="&lt;Navigation /&gt; Connected Navigation component should dispatch an action when onChangeAccount is called" time="0.018">
    </testcase>
    <testcase classname="&lt;Navigation /&gt; Connected Navigation component should dispatch an action when onChangePath is called" name="&lt;Navigation /&gt; Connected Navigation component should dispatch an action when onChangePath is called" time="0.005">
    </testcase>
    <testcase classname="&lt;Navigation /&gt; Connected Navigation component should dispatch an action when onStartAuth is called" name="&lt;Navigation /&gt; Connected Navigation component should dispatch an action when onStartAuth is called" time="0.002">
    </testcase>
    <testcase classname="&lt;Navigation /&gt; Connected Navigation component should dispatch an action when onUnlinkAccount is called" name="&lt;Navigation /&gt; Connected Navigation component should dispatch an action when onUnlinkAccount is called" time="0.001">
    </testcase>
    <testcase classname="&lt;Navigation /&gt; Connected Navigation component should pass all required state through to component props" name="&lt;Navigation /&gt; Connected Navigation component should pass all required state through to component props" time="0.003">
    </testcase>
    <testcase classname="&lt;Navigation /&gt; #render() should render correct components" name="&lt;Navigation /&gt; #render() should render correct components" time="0.014">
    </testcase>
    <testcase classname="&lt;Navigation /&gt; #render() responds to click on Refresh" name="&lt;Navigation /&gt; #render() responds to click on Refresh" time="0.004">
    </testcase>
    <testcase classname="&lt;Navigation /&gt; #render() responds to openChange on Accounts DropDown" name="&lt;Navigation /&gt; #render() responds to openChange on Accounts DropDown" time="0.007">
    </testcase>
    <testcase classname="&lt;Navigation /&gt; #getAccountsDropdownItems() retrieves available Google Accounts" name="&lt;Navigation /&gt; #getAccountsDropdownItems() retrieves available Google Accounts" time="0.005">
    </testcase>
    <testcase classname="&lt;Navigation /&gt; #getAccountsDropdownItems() retrieves available Dropbox Accounts" name="&lt;Navigation /&gt; #getAccountsDropdownItems() retrieves available Dropbox Accounts" time="0.078">
    </testcase>
    <testcase classname="&lt;Navigation /&gt; #getAccountsDropdownItems() Should switch active account when clicking on inactive one" name="&lt;Navigation /&gt; #getAccountsDropdownItems() Should switch active account when clicking on inactive one" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="finalizeUploadMiddleware" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:31" time="0.571" tests="6">
    <testcase classname="finalizeUploadMiddleware should do nothing given unknown action" name="finalizeUploadMiddleware should do nothing given unknown action" time="0.003">
    </testcase>
    <testcase classname="finalizeUploadMiddleware should send upload end event without metadata given fetch metadata param false" name="finalizeUploadMiddleware should send upload end event without metadata given fetch metadata param false" time="0.006">
    </testcase>
    <testcase classname="finalizeUploadMiddleware should send upload end event with metadata given fetch metadata param true" name="finalizeUploadMiddleware should send upload end event with metadata given fetch metadata param true" time="0.001">
    </testcase>
    <testcase classname="finalizeUploadMiddleware should send upload processing event with metadata given fetch metadata param true" name="finalizeUploadMiddleware should send upload processing event with metadata given fetch metadata param true" time="0.002">
    </testcase>
    <testcase classname="finalizeUploadMiddleware should send upload finalize ready event given auto finalize param false" name="finalizeUploadMiddleware should send upload finalize ready event given auto finalize param false" time="0.001">
    </testcase>
    <testcase classname="finalizeUploadMiddleware should send upload error event given some error happens" name="finalizeUploadMiddleware should send upload error event given some error happens" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/TaskList" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:31" time="0.607" tests="2">
    <testcase classname="Renderer - React/Nodes/TaskList should wrap content with &lt;AkTaskList&gt;-tag with start prop" name="Renderer - React/Nodes/TaskList should wrap content with &lt;AkTaskList&gt;-tag with start prop" time="0.002">
    </testcase>
    <testcase classname="Renderer - React/Nodes/TaskList should not render if no children" name="Renderer - React/Nodes/TaskList should not render if no children" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Footer /&gt;" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:31" time="0.569" tests="12">
    <testcase classname="&lt;Footer /&gt; Connected Footer component should dispatch an action when onInsert is called" name="&lt;Footer /&gt; Connected Footer component should dispatch an action when onInsert is called" time="0.006">
    </testcase>
    <testcase classname="&lt;Footer /&gt; Connected Footer component should dispatch an action when onCancel is called" name="&lt;Footer /&gt; Connected Footer component should dispatch an action when onCancel is called" time="0.002">
    </testcase>
    <testcase classname="&lt;Footer /&gt; Connected Footer component should pass all required state through to component props" name="&lt;Footer /&gt; Connected Footer component should pass all required state through to component props" time="0.009">
    </testcase>
    <testcase classname="&lt;Footer /&gt; #render() should render Wrapper, CancelButton, AttachButton" name="&lt;Footer /&gt; #render() should render Wrapper, CancelButton, AttachButton" time="0.004">
    </testcase>
    <testcase classname="&lt;Footer /&gt; #render() should disable the cancel button when canCancel=false" name="&lt;Footer /&gt; #render() should disable the cancel button when canCancel=false" time="0.001">
    </testcase>
    <testcase classname="&lt;Footer /&gt; #render() should enable the cancel button when canCancel=true" name="&lt;Footer /&gt; #render() should enable the cancel button when canCancel=true" time="0.001">
    </testcase>
    <testcase classname="&lt;Footer /&gt; #render() should hide the insert button when itemCount=0" name="&lt;Footer /&gt; #render() should hide the insert button when itemCount=0" time="0.002">
    </testcase>
    <testcase classname="&lt;Footer /&gt; #render() should show the insert button when itemCount&gt;0" name="&lt;Footer /&gt; #render() should show the insert button when itemCount&gt;0" time="0">
    </testcase>
    <testcase classname="&lt;Footer /&gt; #render() should disable the insert button when canInsert=false" name="&lt;Footer /&gt; #render() should disable the insert button when canInsert=false" time="0">
    </testcase>
    <testcase classname="&lt;Footer /&gt; #render() should enable the insert button when canInsert=true" name="&lt;Footer /&gt; #render() should enable the insert button when canInsert=true" time="0.001">
    </testcase>
    <testcase classname="&lt;Footer /&gt; #render() should not pluralize the insert button text when itemCount=1" name="&lt;Footer /&gt; #render() should not pluralize the insert button text when itemCount=1" time="0.001">
    </testcase>
    <testcase classname="&lt;Footer /&gt; #render() should pluralize the insert button text when itemCount&gt;1" name="&lt;Footer /&gt; #render() should pluralize the insert button text when itemCount&gt;1" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema mediaGroup node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:31" time="0.71" tests="4">
    <testcase classname="@atlaskit/editor-common/schema mediaGroup node parse html gets attributes from html" name="@atlaskit/editor-common/schema mediaGroup node parse html gets attributes from html" time="0.016">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema mediaGroup node parse html auto creates a media node inside mediaSingle node" name="@atlaskit/editor-common/schema mediaGroup node parse html auto creates a media node inside mediaSingle node" time="0.078">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema mediaGroup node encode node converts attributes to related data attribute in html" name="@atlaskit/editor-common/schema mediaGroup node encode node converts attributes to related data attribute in html" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema mediaGroup node encodes and decodes to the same node" name="@atlaskit/editor-common/schema mediaGroup node encodes and decodes to the same node" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="sendUploadEvent middleware" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:32" time="0.843" tests="7">
    <testcase classname="sendUploadEvent middleware should do nothing given unknown action" name="sendUploadEvent middleware should do nothing given unknown action" time="0.008">
    </testcase>
    <testcase classname="sendUploadEvent middleware should emit finalize ready event" name="sendUploadEvent middleware should emit finalize ready event" time="0.002">
    </testcase>
    <testcase classname="sendUploadEvent middleware should emit upload status update event" name="sendUploadEvent middleware should emit upload status update event" time="0.001">
    </testcase>
    <testcase classname="sendUploadEvent middleware should emit upload preview update event" name="sendUploadEvent middleware should emit upload preview update event" time="0.001">
    </testcase>
    <testcase classname="sendUploadEvent middleware should emit upload processing event" name="sendUploadEvent middleware should emit upload processing event" time="0.002">
    </testcase>
    <testcase classname="sendUploadEvent middleware should emit upload end event" name="sendUploadEvent middleware should emit upload end event" time="0.003">
    </testcase>
    <testcase classname="sendUploadEvent middleware should emit upload error event" name="sendUploadEvent middleware should emit upload error event" time="0.352">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Marks/Link" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:32" time="0.676" tests="7">
    <testcase classname="Renderer - React/Marks/Link should wrap content with &lt;a&gt;-tag" name="Renderer - React/Marks/Link should wrap content with &lt;a&gt;-tag" time="0.024">
    </testcase>
    <testcase classname="Renderer - React/Marks/Link should set href to attrs.href" name="Renderer - React/Marks/Link should set href to attrs.href" time="0.004">
    </testcase>
    <testcase classname="Renderer - React/Marks/Link should set target to _blank" name="Renderer - React/Marks/Link should set target to _blank" time="0.003">
    </testcase>
    <testcase classname="Renderer - React/Marks/Link should set target to _blank by default" name="Renderer - React/Marks/Link should set target to _blank by default" time="0.003">
    </testcase>
    <testcase classname="Renderer - React/Marks/Link should set target to whatever props.target was" name="Renderer - React/Marks/Link should set target to whatever props.target was" time="0.002">
    </testcase>
    <testcase classname="Renderer - React/Marks/Link should set safety rel on links with target _blank" name="Renderer - React/Marks/Link should set safety rel on links with target _blank" time="0.003">
    </testcase>
    <testcase classname="Renderer - React/Marks/Link should not set safety rel on links with target _blank" name="Renderer - React/Marks/Link should not set safety rel on links with target _blank" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="MediaTypeIcon" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:32" time="0.552" tests="6">
    <testcase classname="MediaTypeIcon should render an image icon when type=image" name="MediaTypeIcon should render an image icon when type=image" time="0.002">
    </testcase>
    <testcase classname="MediaTypeIcon should render an audio icon when type=audio" name="MediaTypeIcon should render an audio icon when type=audio" time="0.001">
    </testcase>
    <testcase classname="MediaTypeIcon should render a video icon when type=video" name="MediaTypeIcon should render a video icon when type=video" time="0.001">
    </testcase>
    <testcase classname="MediaTypeIcon should render a doc icon when type=doc" name="MediaTypeIcon should render a doc icon when type=doc" time="0.001">
    </testcase>
    <testcase classname="MediaTypeIcon should render an unknown icon when type=unknown" name="MediaTypeIcon should render an unknown icon when type=unknown" time="0">
    </testcase>
    <testcase classname="MediaTypeIcon should render an unknown icon when type is not known" name="MediaTypeIcon should render an unknown icon when type is not known" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/layer-manager" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:33" time="0.773" tests="5">
    <testcase classname="@atlaskit/layer-manager should render Gateway in GatewayDest" name="@atlaskit/layer-manager should render Gateway in GatewayDest" time="0.013">
    </testcase>
    <testcase classname="@atlaskit/layer-manager should be able to customize the GatewayDest element" name="@atlaskit/layer-manager should be able to customize the GatewayDest element" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/layer-manager should be able to customize the GatewayDest with custom components" name="@atlaskit/layer-manager should be able to customize the GatewayDest with custom components" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/layer-manager should render into the correct GatewayDest" name="@atlaskit/layer-manager should render into the correct GatewayDest" time="0.009">
    </testcase>
    <testcase classname="@atlaskit/layer-manager should render multiple children into a single GatewayDest" name="@atlaskit/layer-manager should render multiple children into a single GatewayDest" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="createRequest()" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:33" time="0.825" tests="6">
    <testcase classname="createRequest() with clientId/token auth method should send the client ID and auth token in header fields by default" name="createRequest() with clientId/token auth method should send the client ID and auth token in header fields by default" time="0.038">
    </testcase>
    <testcase classname="createRequest() with clientId/token auth method should send auth arguments using queryParams when preventPreflight is true" name="createRequest() with clientId/token auth method should send auth arguments using queryParams when preventPreflight is true" time="0.021">
    </testcase>
    <testcase classname="createRequest() with asapIssuer/token auth method should send the asap issuer and auth token in header fields by default" name="createRequest() with asapIssuer/token auth method should send the asap issuer and auth token in header fields by default" time="0.018">
    </testcase>
    <testcase classname="createRequest() with asapIssuer/token auth method should send auth arguments using queryParams when preventPreflight is true" name="createRequest() with asapIssuer/token auth method should send auth arguments using queryParams when preventPreflight is true" time="0.018">
    </testcase>
    <testcase classname="createRequest() with responseType === image when webp support is enabled should add webp headers" name="createRequest() with responseType === image when webp support is enabled should add webp headers" time="0.026">
    </testcase>
    <testcase classname="createRequest() with responseType === image when webp support is disabled should not add webp headers" name="createRequest() with responseType === image when webp support is disabled should not add webp headers" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/field-radio-group" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:33" time="0.808" tests="11">
    <testcase classname="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) exports the AkFieldRadioGroup component" name="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) exports the AkFieldRadioGroup component" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) construction should be able to create a component" name="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) construction should be able to create a component" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) construction should render a FieldBase containing a Radio for each item" name="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) construction should render a FieldBase containing a Radio for each item" time="0.083">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) props items prop renders a Radio with correct props for each item in the array" name="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) props items prop renders a Radio with correct props for each item in the array" time="0.063">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) props label prop is reflected to the FieldBase" name="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) props label prop is reflected to the FieldBase" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) props isRequired prop is reflected to the FieldBase" name="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) props isRequired prop is reflected to the FieldBase" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) props isRequired prop is reflected to each Radio item" name="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) props isRequired prop is reflected to each Radio item" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) props onRadioChange prop is called when a radio item is changed" name="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) props onRadioChange prop is called when a radio item is changed" time="0.035">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) selection selects the radio with isSelected key" name="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) selection selects the radio with isSelected key" time="0">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) selection does not select an item if not specified" name="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) selection does not select an item if not specified" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) selection can select a radio which is disabled" name="@atlaskit/field-radio-group AkFieldRadioGroup (stateless) selection can select a radio which is disabled" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="BreadcrumbsItem" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:34" time="0.667" tests="13">
    <testcase classname="BreadcrumbsItem exports the BreadcrumbsItem component" name="BreadcrumbsItem exports the BreadcrumbsItem component" time="0.003">
    </testcase>
    <testcase classname="BreadcrumbsItem construction should be able to create a component" name="BreadcrumbsItem construction should be able to create a component" time="0.002">
    </testcase>
    <testcase classname="BreadcrumbsItem construction should set the initial state correctly" name="BreadcrumbsItem construction should set the initial state correctly" time="0.001">
    </testcase>
    <testcase classname="BreadcrumbsItem construction should render a link Button containing the content" name="BreadcrumbsItem construction should render a link Button containing the content" time="0.094">
    </testcase>
    <testcase classname="BreadcrumbsItem props item prop should be reflected to the Button content" name="BreadcrumbsItem props item prop should be reflected to the Button content" time="0.009">
    </testcase>
    <testcase classname="BreadcrumbsItem props href prop should be reflected to the Button" name="BreadcrumbsItem props href prop should be reflected to the Button" time="0.01">
    </testcase>
    <testcase classname="BreadcrumbsItem props iconAfter prop should be reflected to the Button" name="BreadcrumbsItem props iconAfter prop should be reflected to the Button" time="0.022">
    </testcase>
    <testcase classname="BreadcrumbsItem props iconBefore prop should be reflected to the Button" name="BreadcrumbsItem props iconBefore prop should be reflected to the Button" time="0.016">
    </testcase>
    <testcase classname="BreadcrumbsItem props target prop should be reflected to the Button" name="BreadcrumbsItem props target prop should be reflected to the Button" time="0.008">
    </testcase>
    <testcase classname="BreadcrumbsItem props onClick prop should be reflected to the Button" name="BreadcrumbsItem props onClick prop should be reflected to the Button" time="0.007">
    </testcase>
    <testcase classname="BreadcrumbsItem props component prop should be reflected to the Button" name="BreadcrumbsItem props component prop should be reflected to the Button" time="0.019">
    </testcase>
    <testcase classname="BreadcrumbsItem overflow calculation for an item which is truncated" name="BreadcrumbsItem overflow calculation for an item which is truncated" time="0.027">
    </testcase>
    <testcase classname="BreadcrumbsItem overflow calculation for an item which is not truncated" name="BreadcrumbsItem overflow calculation for an item which is not truncated" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="CloudAuthService" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:34" time="0.672" tests="4">
    <testcase classname="CloudAuthService should pass uuid as a hash in the redirect url" name="CloudAuthService should pass uuid as a hash in the redirect url" time="0.013">
    </testcase>
    <testcase classname="CloudAuthService should pass uuid as a scope for the created Postis channel" name="CloudAuthService should pass uuid as a scope for the created Postis channel" time="0.005">
    </testcase>
    <testcase classname="CloudAuthService should send &quot;auth-callback-done&quot;, destroy the channel, and get service list when receives &quot;auth-callback-received&quot; message" name="CloudAuthService should send &quot;auth-callback-done&quot;, destroy the channel, and get service list when receives &quot;auth-callback-received&quot; message" time="0.004">
    </testcase>
    <testcase classname="CloudAuthService should close newly opened window if auth has failed" name="CloudAuthService should close newly opened window if auth has failed" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="BreadcrumbsStateless" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:34" time="0.867" tests="8">
    <testcase classname="BreadcrumbsStateless exports the React component, and the Item component" name="BreadcrumbsStateless exports the React component, and the Item component" time="0.005">
    </testcase>
    <testcase classname="BreadcrumbsStateless construction should be able to create a component" name="BreadcrumbsStateless construction should be able to create a component" time="0.003">
    </testcase>
    <testcase classname="BreadcrumbsStateless construction should be able to render a single child" name="BreadcrumbsStateless construction should be able to render a single child" time="0.003">
    </testcase>
    <testcase classname="BreadcrumbsStateless construction should render multiple children" name="BreadcrumbsStateless construction should render multiple children" time="0.057">
    </testcase>
    <testcase classname="BreadcrumbsStateless construction should not count empty children" name="BreadcrumbsStateless construction should not count empty children" time="0.028">
    </testcase>
    <testcase classname="BreadcrumbsStateless construction with enough items to collapse and not expanded renders only the first and last items, and an ellipsis item" name="BreadcrumbsStateless construction with enough items to collapse and not expanded renders only the first and last items, and an ellipsis item" time="0.043">
    </testcase>
    <testcase classname="BreadcrumbsStateless construction with enough items to collapse and not expanded calls the onExpand handler when the ellipsis is clicked" name="BreadcrumbsStateless construction with enough items to collapse and not expanded calls the onExpand handler when the ellipsis is clicked" time="0.034">
    </testcase>
    <testcase classname="BreadcrumbsStateless construction with enough items to collapse and expanded renders all the items" name="BreadcrumbsStateless construction with enough items to collapse and expanded renders all the items" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="ErrorView" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:34" time="0.919" tests="2">
    <testcase classname="ErrorView should display one button in case of critical error" name="ErrorView should display one button in case of critical error" time="0.083">
    </testcase>
    <testcase classname="ErrorView should display two buttons in case of retriable error" name="ErrorView should display two buttons in case of retriable error" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="MainEditorView" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:34" time="0.73" tests="2">
    <testcase classname="MainEditorView should show spinner if no imageUrl, no error" name="MainEditorView should show spinner if no imageUrl, no error" time="0.006">
    </testcase>
    <testcase classname="MainEditorView should show error if no imageUrl, but error defined" name="MainEditorView should show error if no imageUrl, but error defined" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="cardDimensions.ts" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:34" time="0.805" tests="2">
    <testcase classname="cardDimensions.ts getCardMinHeight should return small min height if no appearance passed" name="cardDimensions.ts getCardMinHeight should return small min height if no appearance passed" time="0.007">
    </testcase>
    <testcase classname="cardDimensions.ts getCardMinHeight should return right height for each appearance" name="cardDimensions.ts getCardMinHeight should return right height for each appearance" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="hyperlink" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:35" time="0.8" tests="13">
    <testcase classname="hyperlink #normalizeUrl should convert from &quot;prettyandsimple@example.com&quot; -&gt; &quot;mailto:prettyandsimple@example.com&quot;" name="hyperlink #normalizeUrl should convert from &quot;prettyandsimple@example.com&quot; -&gt; &quot;mailto:prettyandsimple@example.com&quot;" time="0.063">
    </testcase>
    <testcase classname="hyperlink #normalizeUrl should convert from &quot;mailto:prettyandsimple@example.com&quot; -&gt; &quot;mailto:prettyandsimple@example.com&quot;" name="hyperlink #normalizeUrl should convert from &quot;mailto:prettyandsimple@example.com&quot; -&gt; &quot;mailto:prettyandsimple@example.com&quot;" time="0.017">
    </testcase>
    <testcase classname="hyperlink #normalizeUrl should convert from &quot;example.com&quot; -&gt; &quot;http://example.com&quot;" name="hyperlink #normalizeUrl should convert from &quot;example.com&quot; -&gt; &quot;http://example.com&quot;" time="0.001">
    </testcase>
    <testcase classname="hyperlink #normalizeUrl should convert from &quot;http://example.com&quot; -&gt; &quot;http://example.com&quot;" name="hyperlink #normalizeUrl should convert from &quot;http://example.com&quot; -&gt; &quot;http://example.com&quot;" time="0">
    </testcase>
    <testcase classname="hyperlink #normalizeUrl should convert from &quot;&quot; -&gt; &quot;&quot;" name="hyperlink #normalizeUrl should convert from &quot;&quot; -&gt; &quot;&quot;" time="0.001">
    </testcase>
    <testcase classname="hyperlink getLinkMatch should match web URLs" name="hyperlink getLinkMatch should match web URLs" time="0.002">
    </testcase>
    <testcase classname="hyperlink getLinkMatch should match only the link when surrounded with text" name="hyperlink getLinkMatch should match only the link when surrounded with text" time="0.005">
    </testcase>
    <testcase classname="hyperlink getLinkMatch should not match non-web schemes" name="hyperlink getLinkMatch should not match non-web schemes" time="0.041">
    </testcase>
    <testcase classname="hyperlink getLinkMatch should not match special characters" name="hyperlink getLinkMatch should not match special characters" time="0.005">
    </testcase>
    <testcase classname="hyperlink getLinkMatch should match EMAILs" name="hyperlink getLinkMatch should match EMAILs" time="0.002">
    </testcase>
    <testcase classname="hyperlink getLinkMatch should not match invalid EMAILs" name="hyperlink getLinkMatch should not match invalid EMAILs" time="0.001">
    </testcase>
    <testcase classname="hyperlink getLinkMatch should match only the EMAIL when surrounded with text" name="hyperlink getLinkMatch should match only the EMAIL when surrounded with text" time="0.002">
    </testcase>
    <testcase classname="hyperlink getLinkMatch should not match filename extensions" name="hyperlink getLinkMatch should not match filename extensions" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="FilmstripApplicationCardView" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:35" time="0.976" tests="12">
    <testcase classname="FilmstripApplicationCardView should render a link when link is provided" name="FilmstripApplicationCardView should render a link when link is provided" time="0.005">
    </testcase>
    <testcase classname="FilmstripApplicationCardView should not render a link when link is not provided" name="FilmstripApplicationCardView should not render a link when link is not provided" time="0.003">
    </testcase>
    <testcase classname="FilmstripApplicationCardView should render an icon in the frame when context is provided" name="FilmstripApplicationCardView should render an icon in the frame when context is provided" time="0.001">
    </testcase>
    <testcase classname="FilmstripApplicationCardView should not render an icon in the frame when context is not provided" name="FilmstripApplicationCardView should not render an icon in the frame when context is not provided" time="0.001">
    </testcase>
    <testcase classname="FilmstripApplicationCardView should render text in the frame when context is provided" name="FilmstripApplicationCardView should render text in the frame when context is provided" time="0.002">
    </testcase>
    <testcase classname="FilmstripApplicationCardView should not render text in the frame when context is not provided" name="FilmstripApplicationCardView should not render text in the frame when context is not provided" time="0.001">
    </testcase>
    <testcase classname="FilmstripApplicationCardView it should render a thumbnail when there is a preview" name="FilmstripApplicationCardView it should render a thumbnail when there is a preview" time="0.001">
    </testcase>
    <testcase classname="FilmstripApplicationCardView it should not render a thumbnail when there is no preview" name="FilmstripApplicationCardView it should not render a thumbnail when there is no preview" time="0.003">
    </testcase>
    <testcase classname="FilmstripApplicationCardView should have a minWidth of 240 when there is a preview" name="FilmstripApplicationCardView should have a minWidth of 240 when there is a preview" time="0.002">
    </testcase>
    <testcase classname="FilmstripApplicationCardView should have a minWidth of 240 when there is no preview" name="FilmstripApplicationCardView should have a minWidth of 240 when there is no preview" time="0.001">
    </testcase>
    <testcase classname="FilmstripApplicationCardView should have a maxWidth of 400 when there is a preview" name="FilmstripApplicationCardView should have a maxWidth of 400 when there is a preview" time="0.001">
    </testcase>
    <testcase classname="FilmstripApplicationCardView should have a maxWidth of 400 when there is no preview" name="FilmstripApplicationCardView should have a maxWidth of 400 when there is no preview" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - Validator" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:35" time="1.053" tests="112">
    <testcase classname="Renderer - Validator isSafeUrl should return true if URL starts with http://, https://, ftp://, ftps:// etc" name="Renderer - Validator isSafeUrl should return true if URL starts with http://, https://, ftp://, ftps:// etc" time="0.002">
    </testcase>
    <testcase classname="Renderer - Validator isSafeUrl should return false for &quot;unsafe&quot; URLs" name="Renderer - Validator isSafeUrl should return false for &quot;unsafe&quot; URLs" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator isSubSupType should return false if type is not &quot;sub&quot; or &quot;sup&quot;" name="Renderer - Validator isSubSupType should return false if type is not &quot;sub&quot; or &quot;sup&quot;" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator isSubSupType should return true if type is &quot;sub&quot;" name="Renderer - Validator isSubSupType should return true if type is &quot;sub&quot;" time="0">
    </testcase>
    <testcase classname="Renderer - Validator isSubSupType should return true if type is &quot;sup&quot;" name="Renderer - Validator isSubSupType should return true if type is &quot;sup&quot;" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs is missing" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs is missing" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.text is missing" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.text is missing" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.title is missing" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.title is missing" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.title.text is missing" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.title.text is missing" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.title.user.icon is missing" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.title.user.icon is missing" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.title.user.icon.url is missing" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.title.user.icon.url is missing" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.title.user.icon.label is missing" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.title.user.icon.label is missing" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.link.url is missing" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.link.url is missing" time="0.003">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.background.url is missing" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.background.url is missing" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.preview.url is missing" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.preview.url is missing" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.description.text is missing" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.description.text is missing" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.actions is not an array" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.actions is not an array" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.actions is an empty array" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.actions is an empty array" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.actions[].tilte is missing" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.actions[].tilte is missing" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.actions[].target.key is missing" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.actions[].target.key is missing" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.actions[].target.receiver is not valid string" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.actions[].target.receiver is not valid string" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.actions[].parameters is not object" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.actions[].parameters is not object" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;applicationCard&quot; if attrs.actions is a valid array" name="Renderer - Validator getValidNode applicationCard should return &quot;applicationCard&quot; if attrs.actions is a valid array" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.details is not an array" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.details is not an array" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.details[].badge.value is missing" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.details[].badge.value is missing" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.details[].lozenge.text is missing" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.details[].lozenge.text is missing" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.details[].users is not an array" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.details[].users is not an array" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.details[].users[].icon is missing" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.details[].users[].icon is missing" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.context.text is missing" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.context.text is missing" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.context.icon.url is missing" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.context.icon.url is missing" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.context.icon.label is missing" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.context.icon.label is missing" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.text is not a string" name="Renderer - Validator getValidNode applicationCard should return &quot;text&quot; if attrs.text is not a string" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode applicationCard should return &quot;applicationCard&quot; if attrs.text is an empty string" name="Renderer - Validator getValidNode applicationCard should return &quot;applicationCard&quot; if attrs.text is an empty string" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode doc should return &quot;text&quot; if version-field is missing" name="Renderer - Validator getValidNode doc should return &quot;text&quot; if version-field is missing" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode doc should return &quot;text&quot; if content-field is missing" name="Renderer - Validator getValidNode doc should return &quot;text&quot; if content-field is missing" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode doc should return &quot;text&quot; if content-field is empty-array" name="Renderer - Validator getValidNode doc should return &quot;text&quot; if content-field is empty-array" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode doc should return &quot;doc&quot; with content field and without version" name="Renderer - Validator getValidNode doc should return &quot;doc&quot; with content field and without version" time="0.002">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode emoji should pass through attrs as emoji" name="Renderer - Validator getValidNode emoji should pass through attrs as emoji" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode emoji should pass through attrs with only shortName as emoji" name="Renderer - Validator getValidNode emoji should pass through attrs with only shortName as emoji" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode emoji should reject emoji without shortName" name="Renderer - Validator getValidNode emoji should reject emoji without shortName" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode bodiedExtension should pass through attrs as extension" name="Renderer - Validator getValidNode bodiedExtension should pass through attrs as extension" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode bodiedExtension should reject extensions without extensionType" name="Renderer - Validator getValidNode bodiedExtension should reject extensions without extensionType" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode bodiedExtension should reject extensions without extensionKey" name="Renderer - Validator getValidNode bodiedExtension should reject extensions without extensionKey" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode extension should pass through attrs as extension" name="Renderer - Validator getValidNode extension should pass through attrs as extension" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode extension should reject extensions without extensionType" name="Renderer - Validator getValidNode extension should reject extensions without extensionType" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode extension should reject extensions without extensionKey" name="Renderer - Validator getValidNode extension should reject extensions without extensionKey" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode inlineExtension should pass through attrs as inlineExtension" name="Renderer - Validator getValidNode inlineExtension should pass through attrs as inlineExtension" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode inlineExtension should reject inlineExtension without extensionType" name="Renderer - Validator getValidNode inlineExtension should reject inlineExtension without extensionType" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode inlineExtension should reject inlineExtension without extensionKey" name="Renderer - Validator getValidNode inlineExtension should reject inlineExtension without extensionKey" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode hardBreak should return &quot;hardBreak&quot;" name="Renderer - Validator getValidNode hardBreak should return &quot;hardBreak&quot;" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode hardBreak should discard any extranous attributes" name="Renderer - Validator getValidNode hardBreak should discard any extranous attributes" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode mention should return &quot;unknown&quot; if it can not find an ID " name="Renderer - Validator getValidNode mention should return &quot;unknown&quot; if it can not find an ID " time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode mention should use attrs.text if present" name="Renderer - Validator getValidNode mention should use attrs.text if present" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode mention should use attrs.displayName if present and attrs.text is missing" name="Renderer - Validator getValidNode mention should use attrs.displayName if present and attrs.text is missing" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode mention should use .text if present and attrs.text and attrs.displayName is missing" name="Renderer - Validator getValidNode mention should use .text if present and attrs.text and attrs.displayName is missing" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode mention should set attrs.text to &quot;@unknown&quot; if no valid text-property is available" name="Renderer - Validator getValidNode mention should set attrs.text to &quot;@unknown&quot; if no valid text-property is available" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode paragraph should return &quot;text&quot; if content-field is missing" name="Renderer - Validator getValidNode paragraph should return &quot;text&quot; if content-field is missing" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode paragraph should return &quot;paragraph&quot; if content-field is empty array" name="Renderer - Validator getValidNode paragraph should return &quot;paragraph&quot; if content-field is empty array" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode paragraph should return &quot;paragraph&quot; with content" name="Renderer - Validator getValidNode paragraph should return &quot;paragraph&quot; with content" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode action should return &quot;action&quot;" name="Renderer - Validator getValidNode action should return &quot;action&quot;" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode action should return null if attrs is missing" name="Renderer - Validator getValidNode action should return null if attrs is missing" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode action should return null if attrs.target is missing" name="Renderer - Validator getValidNode action should return null if attrs.target is missing" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode action should return null if attrs.target.key is missing" name="Renderer - Validator getValidNode action should return null if attrs.target.key is missing" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode text should return &quot;text&quot; with text" name="Renderer - Validator getValidNode text should return &quot;text&quot; with text" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode mediaGroup should return &quot;mediaGroup&quot; with type and content" name="Renderer - Validator getValidNode mediaGroup should return &quot;mediaGroup&quot; with type and content" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode mediaGroup should return &quot;unknownBlock&quot; if some of it&apos;s content is not media" name="Renderer - Validator getValidNode mediaGroup should return &quot;unknownBlock&quot; if some of it&apos;s content is not media" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode media should return &quot;media&quot; with attrs and type" name="Renderer - Validator getValidNode media should return &quot;media&quot; with attrs and type" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode media should return &quot;media&quot; with attrs and type if collection is empty" name="Renderer - Validator getValidNode media should return &quot;media&quot; with attrs and type if collection is empty" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode decisions should pass through attrs for decisionList" name="Renderer - Validator getValidNode decisions should pass through attrs for decisionList" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode decisions should generate localId for decisionList if missing" name="Renderer - Validator getValidNode decisions should generate localId for decisionList if missing" time="0.004">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode decisions should pass through attrs for decisionItem" name="Renderer - Validator getValidNode decisions should pass through attrs for decisionItem" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode decisions should generate localId for decisionItem if missing" name="Renderer - Validator getValidNode decisions should generate localId for decisionItem if missing" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode tasks should pass through attrs for taskList" name="Renderer - Validator getValidNode tasks should pass through attrs for taskList" time="0.002">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode tasks should generate localId for taskList if missing" name="Renderer - Validator getValidNode tasks should generate localId for taskList if missing" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode tasks should pass through attrs for taskItem" name="Renderer - Validator getValidNode tasks should pass through attrs for taskItem" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode tasks should generate localId for taskItem if missing" name="Renderer - Validator getValidNode tasks should generate localId for taskItem if missing" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode image should pass through attrs as image" name="Renderer - Validator getValidNode image should pass through attrs as image" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode image should pass through attrs with only src as image" name="Renderer - Validator getValidNode image should pass through attrs with only src as image" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode image should reject image without src" name="Renderer - Validator getValidNode image should reject image without src" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidNode should overwrite the default schema if it gets a docSchema parameter" name="Renderer - Validator getValidNode should overwrite the default schema if it gets a docSchema parameter" time="0.002">
    </testcase>
    <testcase classname="Renderer - Validator getValidUnknownNode unknown inline nodes should return &quot;text&quot; node if content is absent" name="Renderer - Validator getValidUnknownNode unknown inline nodes should return &quot;text&quot; node if content is absent" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidUnknownNode unknown inline nodes should return &quot;text&quot; node if content is empty" name="Renderer - Validator getValidUnknownNode unknown inline nodes should return &quot;text&quot; node if content is empty" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidUnknownNode unknown inline nodes should store textUrl attribute in &quot;href&quot; attribute" name="Renderer - Validator getValidUnknownNode unknown inline nodes should store textUrl attribute in &quot;href&quot; attribute" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidUnknownNode unknown inline nodes should use default text" name="Renderer - Validator getValidUnknownNode unknown inline nodes should use default text" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidUnknownNode unknown inline nodes should use node.attrs.text if text is missing" name="Renderer - Validator getValidUnknownNode unknown inline nodes should use node.attrs.text if text is missing" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidUnknownNode unknown inline nodes should use original type in square brackets if neither text nor attrs.text is missing" name="Renderer - Validator getValidUnknownNode unknown inline nodes should use original type in square brackets if neither text nor attrs.text is missing" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidUnknownNode unknown block nodes should build flattened tree from unknown block node #1" name="Renderer - Validator getValidUnknownNode unknown block nodes should build flattened tree from unknown block node #1" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidUnknownNode unknown block nodes should build flattened tree from unknown block node #2" name="Renderer - Validator getValidUnknownNode unknown block nodes should build flattened tree from unknown block node #2" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidUnknownNode unknown block nodes should build flattened tree from unknown block node #3" name="Renderer - Validator getValidUnknownNode unknown block nodes should build flattened tree from unknown block node #3" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidMark unknown should return null if type is unkown" name="Renderer - Validator getValidMark unknown should return null if type is unkown" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidMark em should return &quot;em&quot;" name="Renderer - Validator getValidMark em should return &quot;em&quot;" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidMark link should return null if attrs is missing" name="Renderer - Validator getValidMark link should return null if attrs is missing" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidMark link should return null if both attrs.href and attrs.url are missing" name="Renderer - Validator getValidMark link should return null if both attrs.href and attrs.url are missing" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidMark link should use attrs.href if present" name="Renderer - Validator getValidMark link should use attrs.href if present" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidMark link should add protocol to a url if it doesn`t exist" name="Renderer - Validator getValidMark link should add protocol to a url if it doesn`t exist" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidMark link should use attrs.url if present and attrs.href is missing" name="Renderer - Validator getValidMark link should use attrs.url if present and attrs.href is missing" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidMark strike should return &quot;strike&quot;" name="Renderer - Validator getValidMark strike should return &quot;strike&quot;" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidMark strong should return &quot;strong&quot;" name="Renderer - Validator getValidMark strong should return &quot;strong&quot;" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidMark subsup should return null if attrs is missing" name="Renderer - Validator getValidMark subsup should return null if attrs is missing" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidMark subsup should return null if attrs.type is not sub or sup" name="Renderer - Validator getValidMark subsup should return null if attrs.type is not sub or sup" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidMark subsup should return &quot;subsup&quot; with correct type" name="Renderer - Validator getValidMark subsup should return &quot;subsup&quot; with correct type" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator getValidMark textColor should return &quot;textColor&quot;" name="Renderer - Validator getValidMark textColor should return &quot;textColor&quot;" time="0.002">
    </testcase>
    <testcase classname="Renderer - Validator getValidMark textColor should return &quot;textColor&quot; for uppercase color" name="Renderer - Validator getValidMark textColor should return &quot;textColor&quot; for uppercase color" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidMark textColor should skip nodes if color attribute is missing" name="Renderer - Validator getValidMark textColor should skip nodes if color attribute is missing" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidMark textColor should skip nodes if color attribute doesn&apos;t match RGB pattern" name="Renderer - Validator getValidMark textColor should skip nodes if color attribute doesn&apos;t match RGB pattern" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidMark underline should return &quot;underline&quot;" name="Renderer - Validator getValidMark underline should return &quot;underline&quot;" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getMarksByOrder should return marks in right order" name="Renderer - Validator getMarksByOrder should return marks in right order" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator isSameMark should return false if mark is null or otherMark is null" name="Renderer - Validator isSameMark should return false if mark is null or otherMark is null" time="0">
    </testcase>
    <testcase classname="Renderer - Validator isSameMark should return false if type is not the same" name="Renderer - Validator isSameMark should return false if type is not the same" time="0">
    </testcase>
    <testcase classname="Renderer - Validator isSameMark should return false if mark-type is the same but attributes is not" name="Renderer - Validator isSameMark should return false if mark-type is the same but attributes is not" time="0.001">
    </testcase>
    <testcase classname="Renderer - Validator isSameMark should return true if type is the same and attributes match" name="Renderer - Validator isSameMark should return true if type is the same and attributes match" time="0">
    </testcase>
    <testcase classname="Renderer - Validator getValidDocument should not mutate original document" name="Renderer - Validator getValidDocument should not mutate original document" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="sliceByChunks" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:36" time="1.112" tests="2">
    <testcase classname="sliceByChunks returns one chunk if array is less or equal then MaxSize" name="sliceByChunks returns one chunk if array is less or equal then MaxSize" time="0.002">
    </testcase>
    <testcase classname="sliceByChunks returns more then one chunk if array is bigger then MaxSize" name="sliceByChunks returns more then one chunk if array is bigger then MaxSize" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/icon" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:36" time="1.68" tests="17">
    <testcase classname="@atlaskit/icon Icon glyph prop should render an SVG provided via JSX" name="@atlaskit/icon Icon glyph prop should render an SVG provided via JSX" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/icon Icon dangerouslySetGlyph prop should render an SVG provided as a string" name="@atlaskit/icon Icon dangerouslySetGlyph prop should render an SVG provided as a string" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/icon Icon dangerouslySetGlyph prop should replace idPlaceholders with a unique ID generated at runtime" name="@atlaskit/icon Icon dangerouslySetGlyph prop should replace idPlaceholders with a unique ID generated at runtime" time="0.015">
    </testcase>
    <testcase classname="@atlaskit/icon Icon exports exports the React component, and size" name="@atlaskit/icon Icon exports exports the React component, and size" time="0.006">
    </testcase>
    <testcase classname="@atlaskit/icon Icon should be possible to create an Icon via a subclass" name="@atlaskit/icon Icon should be possible to create an Icon via a subclass" time="0.009">
    </testcase>
    <testcase classname="@atlaskit/icon Icon label property is accessed by glyph" name="@atlaskit/icon Icon label property is accessed by glyph" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/icon Icon size property with value small" name="@atlaskit/icon Icon size property with value small" time="0">
    </testcase>
    <testcase classname="@atlaskit/icon Icon size property with value medium" name="@atlaskit/icon Icon size property with value medium" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/icon Icon size property with value large" name="@atlaskit/icon Icon size property with value large" time="0">
    </testcase>
    <testcase classname="@atlaskit/icon Icon size property with value xlarge" name="@atlaskit/icon Icon size property with value xlarge" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/icon Icon primaryColor property is set to inherit the text color by default" name="@atlaskit/icon Icon primaryColor property is set to inherit the text color by default" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/icon Icon primaryColor property can be changed to a hex value" name="@atlaskit/icon Icon primaryColor property can be changed to a hex value" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/icon Icon primaryColor property can be changed to a named color" name="@atlaskit/icon Icon primaryColor property can be changed to a named color" time="0.01">
    </testcase>
    <testcase classname="@atlaskit/icon Icon secondaryColor property is set to the default theme background color by default" name="@atlaskit/icon Icon secondaryColor property is set to the default theme background color by default" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/icon Icon secondaryColor property can be changed to a hex value" name="@atlaskit/icon Icon secondaryColor property can be changed to a hex value" time="0.009">
    </testcase>
    <testcase classname="@atlaskit/icon Icon secondaryColor property can be changed to a named color" name="@atlaskit/icon Icon secondaryColor property can be changed to a named color" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/icon Icon onClick property should set a click handler" name="@atlaskit/icon Icon onClick property should set a click handler" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="URLEmbedCard" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:37" time="1.421" tests="1">
    <testcase classname="URLEmbedCard should render an iframe with src when a URL is provided" name="URLEmbedCard should render an iframe with src when a URL is provided" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="FileCard" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:38" time="1.14" tests="6">
    <testcase classname="FileCard should render cardFileView with details passed through to props" name="FileCard should render cardFileView with details passed through to props" time="0.005">
    </testcase>
    <testcase classname="FileCard should render CardGenericViewSmall with file details passed through to props" name="FileCard should render CardGenericViewSmall with file details passed through to props" time="0.002">
    </testcase>
    <testcase classname="FileCard should render fileCardView with dataUri when passed" name="FileCard should render fileCardView with dataUri when passed" time="0.001">
    </testcase>
    <testcase classname="FileCard should render CardGenericViewSmall with dataUri when passed" name="FileCard should render CardGenericViewSmall with dataUri when passed" time="0.004">
    </testcase>
    <testcase classname="FileCard should pass &quot;Failed to load&quot; copy to &quot;small&quot; card view" name="FileCard should pass &quot;Failed to load&quot; copy to &quot;small&quot; card view" time="0.002">
    </testcase>
    <testcase classname="FileCard should pass &quot;Failed to load&quot; copy to &quot;image&quot; card view" name="FileCard should pass &quot;Failed to load&quot; copy to &quot;image&quot; card view" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="containsPixelUnit" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:38" time="1.918" tests="3">
    <testcase classname="containsPixelUnit should return false when passing not a pixel value" name="containsPixelUnit should return false when passing not a pixel value" time="0.005">
    </testcase>
    <testcase classname="containsPixelUnit should return false when passing an invalid percentage value" name="containsPixelUnit should return false when passing an invalid percentage value" time="0.004">
    </testcase>
    <testcase classname="containsPixelUnit should return false when passing an random string" name="containsPixelUnit should return false when passing an random string" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema unsupportedBlock node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:39" time="1.019" tests="2">
    <testcase classname="@atlaskit/editor-common/schema unsupportedBlock node should parse unsupported block nodes" name="@atlaskit/editor-common/schema unsupportedBlock node should parse unsupported block nodes" time="0.014">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema unsupportedBlock node should encode unsupported block nodes to html" name="@atlaskit/editor-common/schema unsupportedBlock node should encode unsupported block nodes to html" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="UploadingView" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:40" time="0.954" tests="5">
    <testcase classname="UploadingView should not render the cancel action when deleteAction is not provided" name="UploadingView should not render the cancel action when deleteAction is not provided" time="0.009">
    </testcase>
    <testcase classname="UploadingView should not render the cancel action when an action that is not type delete is provided" name="UploadingView should not render the cancel action when an action that is not type delete is provided" time="0.002">
    </testcase>
    <testcase classname="UploadingView should render the cancel action when a deleteAction is provided" name="UploadingView should render the cancel action when a deleteAction is provided" time="0.001">
    </testcase>
    <testcase classname="UploadingView should not render the image when dataURI is not provided" name="UploadingView should not render the image when dataURI is not provided" time="0.002">
    </testcase>
    <testcase classname="UploadingView should render the image when dataURI is provided" name="UploadingView should render the image when dataURI is provided" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/datetime-picker" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:40" time="0.694" tests="3">
    <testcase classname="@atlaskit/datetime-picker TimeField should render an Input with a default placeholder" name="@atlaskit/datetime-picker TimeField should render an Input with a default placeholder" time="0.017">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker TimeField should call onKeyDown when a key is pressed" name="@atlaskit/datetime-picker TimeField should call onKeyDown when a key is pressed" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker TimeField passing down props should pass autoFocus down to the underlying Input" name="@atlaskit/datetime-picker TimeField passing down props should pass autoFocus down to the underlying Input" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/DecisionList" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:41" time="0.758" tests="2">
    <testcase classname="Renderer - React/Nodes/DecisionList should wrap content with &lt;AkDecisionList&gt;-tag with start prop" name="Renderer - React/Nodes/DecisionList should wrap content with &lt;AkDecisionList&gt;-tag with start prop" time="0.002">
    </testcase>
    <testcase classname="Renderer - React/Nodes/DecisionList should not render if no children" name="Renderer - React/Nodes/DecisionList should not render if no children" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="fetchToken" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:41" time="0.853" tests="3">
    <testcase classname="fetchToken should add token and client query parameters" name="fetchToken should add token and client query parameters" time="0.024">
    </testcase>
    <testcase classname="fetchToken should add token and client query parameters correctly respecting previous url params" name="fetchToken should add token and client query parameters correctly respecting previous url params" time="0.006">
    </testcase>
    <testcase classname="fetchToken should refresh token of pre authenticated file" name="fetchToken should refresh token of pre authenticated file" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="banner" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:42" time="0.69" tests="10">
    <testcase classname="banner basic sanity check" name="banner basic sanity check" time="0.006">
    </testcase>
    <testcase classname="banner props appearance prop should default to warning appearance" name="banner props appearance prop should default to warning appearance" time="0.021">
    </testcase>
    <testcase classname="banner props appearance prop should apply error styles when error appearance supplied" name="banner props appearance prop should apply error styles when error appearance supplied" time="0">
    </testcase>
    <testcase classname="banner props should render children prop" name="banner props should render children prop" time="0.007">
    </testcase>
    <testcase classname="banner props should render icon prop" name="banner props should render icon prop" time="0.002">
    </testcase>
    <testcase classname="banner props isOpen prop should default to not being open" name="banner props isOpen prop should default to not being open" time="0.006">
    </testcase>
    <testcase classname="banner props isOpen prop should apply a max-height of 52px when isOpen" name="banner props isOpen prop should apply a max-height of 52px when isOpen" time="0.001">
    </testcase>
    <testcase classname="banner a11y should have role=alert" name="banner a11y should have role=alert" time="0.002">
    </testcase>
    <testcase classname="banner a11y should be aria-hidden=false when isOpen is true" name="banner a11y should be aria-hidden=false when isOpen is true" time="0">
    </testcase>
    <testcase classname="banner a11y should be aria-hidden=true when isOpen is false" name="banner a11y should be aria-hidden=true when isOpen is false" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Wrapper" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:43" time="0.537" tests="4">
    <testcase classname="Wrapper should have the default width and height when no width, height or aspectRatio props are passed" name="Wrapper should have the default width and height when no width, height or aspectRatio props are passed" time="0.039">
    </testcase>
    <testcase classname="Wrapper should have the passed width when the width prop is passed" name="Wrapper should have the passed width when the width prop is passed" time="0.011">
    </testcase>
    <testcase classname="Wrapper should have the passed height when the height prop is passed" name="Wrapper should have the passed height when the height prop is passed" time="0.004">
    </testcase>
    <testcase classname="Wrapper should have the default width and a calculated height when aspectRatio is passed" name="Wrapper should have the default width and a calculated height when aspectRatio is passed" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="isValidPercentageUnit" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:42" time="1.059" tests="4">
    <testcase classname="isValidPercentageUnit should return true when passing a valid percentage value" name="isValidPercentageUnit should return true when passing a valid percentage value" time="0.002">
    </testcase>
    <testcase classname="isValidPercentageUnit should return false when passing an invalid percentage value" name="isValidPercentageUnit should return false when passing an invalid percentage value" time="0.003">
    </testcase>
    <testcase classname="isValidPercentageUnit should return false when passing an random string" name="isValidPercentageUnit should return false when passing an random string" time="0.001">
    </testcase>
    <testcase classname="isValidPercentageUnit should return false when passing number" name="isValidPercentageUnit should return false when passing number" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="proxyUploadEvents middleware" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:43" time="1.693" tests="2">
    <testcase classname="proxyUploadEvents middleware should do nothing and call next with action for the action of the other type" name="proxyUploadEvents middleware should do nothing and call next with action for the action of the other type" time="0.005">
    </testcase>
    <testcase classname="proxyUploadEvents middleware should dispatch FINALIZE_UPLOAD for upload-processing event" name="proxyUploadEvents middleware should dispatch FINALIZE_UPLOAD for upload-processing event" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="CardDetails" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:38" time="7.414" tests="16">
    <testcase classname="CardDetails should render the title" name="CardDetails should render the title" time="0.043">
    </testcase>
    <testcase classname="CardDetails should render the description" name="CardDetails should render the description" time="0.01">
    </testcase>
    <testcase classname="CardDetails should render the icon when there is an icon, a user and a thumbnail" name="CardDetails should render the icon when there is an icon, a user and a thumbnail" time="0.003">
    </testcase>
    <testcase classname="CardDetails should render the user when there is a user and a thumbnail" name="CardDetails should render the user when there is a user and a thumbnail" time="0.006">
    </testcase>
    <testcase classname="CardDetails should render the user when there is a user" name="CardDetails should render the user when there is a user" time="0.003">
    </testcase>
    <testcase classname="CardDetails should render the thumbnail when there is a thumbnail" name="CardDetails should render the thumbnail when there is a thumbnail" time="0.003">
    </testcase>
    <testcase classname="CardDetails should render the icon when there is an icon and a user" name="CardDetails should render the icon when there is an icon and a user" time="0.006">
    </testcase>
    <testcase classname="CardDetails should render the icon when there is an icon and a thumbnail" name="CardDetails should render the icon when there is an icon and a thumbnail" time="0.005">
    </testcase>
    <testcase classname="CardDetails should render the icon when there is an icon" name="CardDetails should render the icon when there is an icon" time="0.002">
    </testcase>
    <testcase classname="CardDetails should padLeft when there is an icon" name="CardDetails should padLeft when there is an icon" time="0.002">
    </testcase>
    <testcase classname="CardDetails should padLeft when there is a user" name="CardDetails should padLeft when there is a user" time="0.002">
    </testcase>
    <testcase classname="CardDetails should padLeft when there is a thumbnail" name="CardDetails should padLeft when there is a thumbnail" time="0.002">
    </testcase>
    <testcase classname="CardDetails should not padLeft when there is no icon, user or preview" name="CardDetails should not padLeft when there is no icon, user or preview" time="0.003">
    </testcase>
    <testcase classname="CardDetails should use compact actions when width is &lt;384" name="CardDetails should use compact actions when width is &lt;384" time="0.006">
    </testcase>
    <testcase classname="CardDetails should not use compact actions when width is undefined" name="CardDetails should not use compact actions when width is undefined" time="0.005">
    </testcase>
    <testcase classname="CardDetails should not use compact actions when width is &gt;=384" name="CardDetails should not use compact actions when width is &gt;=384" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="deselectItem() reducer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:45" time="0.748" tests="5">
    <testcase classname="deselectItem() reducer should return original state for unknown action" name="deselectItem() reducer should return original state for unknown action" time="0.005">
    </testcase>
    <testcase classname="deselectItem() reducer should not change selectedItems if it is empty" name="deselectItem() reducer should not change selectedItems if it is empty" time="0">
    </testcase>
    <testcase classname="deselectItem() reducer should not add selectedItems if it is not defined" name="deselectItem() reducer should not add selectedItems if it is not defined" time="0.001">
    </testcase>
    <testcase classname="deselectItem() reducer should preserve selected items if their id is not specified" name="deselectItem() reducer should preserve selected items if their id is not specified" time="0.002">
    </testcase>
    <testcase classname="deselectItem() reducer should remove item from selected" name="deselectItem() reducer should remove item from selected" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Widgets" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:45" time="0.96" tests="7">
    <testcase classname="Widgets should render zero details as null" name="Widgets should render zero details as null" time="0.014">
    </testcase>
    <testcase classname="Widgets should render a title and some text" name="Widgets should render a title and some text" time="0.021">
    </testcase>
    <testcase classname="Widgets should render an icon" name="Widgets should render an icon" time="0.002">
    </testcase>
    <testcase classname="Widgets should render a badge" name="Widgets should render a badge" time="0.004">
    </testcase>
    <testcase classname="Widgets should render a lozenge" name="Widgets should render a lozenge" time="0.003">
    </testcase>
    <testcase classname="Widgets should render widget details in order" name="Widgets should render widget details in order" time="0.091">
    </testcase>
    <testcase classname="Widgets should render a number of widgets" name="Widgets should render a number of widgets" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="MediaClientPool" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:44" time="3.056" tests="9">
    <testcase classname="MediaClientPool should create a new client for the first time" name="MediaClientPool should create a new client for the first time" time="0.004">
    </testcase>
    <testcase classname="MediaClientPool should return the stored client for the same collection second time" name="MediaClientPool should return the stored client for the same collection second time" time="0.001">
    </testcase>
    <testcase classname="MediaClientPool should create a new client for different collection" name="MediaClientPool should create a new client for different collection" time="0.003">
    </testcase>
    <testcase classname="MediaClientPool should create and return the stored client for the undefined value as a collection name" name="MediaClientPool should create and return the stored client for the undefined value as a collection name" time="0.001">
    </testcase>
    <testcase classname="MediaClientPool should create and return the stored client for the empty string as a collection name" name="MediaClientPool should create and return the stored client for the empty string as a collection name" time="0.006">
    </testcase>
    <testcase classname="MediaClientPool should provide different clients for undefined, null, empty and non-empty collection names" name="MediaClientPool should provide different clients for undefined, null, empty and non-empty collection names" time="0.001">
    </testcase>
    <testcase classname="MediaClientPool should provide different client for an undefined collection and collection named &quot;undefined&quot;" name="MediaClientPool should provide different client for an undefined collection and collection named &quot;undefined&quot;" time="0.001">
    </testcase>
    <testcase classname="MediaClientPool should pass collection name to the media client constructor if the collection is defined" name="MediaClientPool should pass collection name to the media client constructor if the collection is defined" time="0.001">
    </testcase>
    <testcase classname="MediaClientPool should pass undefined as collection name to the media client constructor if the collection was not provided" name="MediaClientPool should pass undefined as collection name to the media client constructor if the collection was not provided" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Wrapper" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:46" time="0.654" tests="16">
    <testcase classname="Wrapper should render with minWidth when there is a minWidth" name="Wrapper should render with minWidth when there is a minWidth" time="0.022">
    </testcase>
    <testcase classname="Wrapper should not render with minWidth when there is no minWidth" name="Wrapper should not render with minWidth when there is no minWidth" time="0.01">
    </testcase>
    <testcase classname="Wrapper should render with minWidth when there is a minWidth" name="Wrapper should render with minWidth when there is a minWidth" time="0.009">
    </testcase>
    <testcase classname="Wrapper should not render with minWidth when there is no minWidth" name="Wrapper should not render with minWidth when there is no minWidth" time="0.009">
    </testcase>
    <testcase classname="Wrapper should have hover styles when isInteractive=true" name="Wrapper should have hover styles when isInteractive=true" time="0.017">
    </testcase>
    <testcase classname="Wrapper should not have hover styles when isInteractive=false" name="Wrapper should not have hover styles when isInteractive=false" time="0.007">
    </testcase>
    <testcase classname="LinkWrapper should render with minWidth when there is a minWidth" name="LinkWrapper should render with minWidth when there is a minWidth" time="0.007">
    </testcase>
    <testcase classname="LinkWrapper should not render with minWidth when there is no minWidth" name="LinkWrapper should not render with minWidth when there is no minWidth" time="0.01">
    </testcase>
    <testcase classname="LinkWrapper should render with minWidth when there is a minWidth" name="LinkWrapper should render with minWidth when there is a minWidth" time="0.009">
    </testcase>
    <testcase classname="LinkWrapper should not render with minWidth when there is no minWidth" name="LinkWrapper should not render with minWidth when there is no minWidth" time="0.004">
    </testcase>
    <testcase classname="LinkWrapper should have hover styles when isInteractive=true" name="LinkWrapper should have hover styles when isInteractive=true" time="0.008">
    </testcase>
    <testcase classname="LinkWrapper should not have hover styles when isInteractive=false" name="LinkWrapper should not have hover styles when isInteractive=false" time="0.007">
    </testcase>
    <testcase classname="IconWrapper should look like a placeholder when isPlaceholder=true" name="IconWrapper should look like a placeholder when isPlaceholder=true" time="0.009">
    </testcase>
    <testcase classname="IconWrapper should look like a placeholder when isPlaceholder=false" name="IconWrapper should look like a placeholder when isPlaceholder=false" time="0.011">
    </testcase>
    <testcase classname="TextWrapper should look like a placeholder when isPlaceholder=true" name="TextWrapper should look like a placeholder when isPlaceholder=true" time="0.01">
    </testcase>
    <testcase classname="TextWrapper should look like a placeholder when isPlaceholder=false" name="TextWrapper should look like a placeholder when isPlaceholder=false" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/ToolbarButton" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:46" time="0.768" tests="4">
    <testcase classname="@atlaskit/editor-core/ui/ToolbarButton should not render tooltip if title is not set" name="@atlaskit/editor-core/ui/ToolbarButton should not render tooltip if title is not set" time="0.061">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarButton should render tooltip if title is set" name="@atlaskit/editor-core/ui/ToolbarButton should render tooltip if title is set" time="0.012">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarButton should not display tooltip if hideTooltip prop is passed in" name="@atlaskit/editor-core/ui/ToolbarButton should not display tooltip if hideTooltip prop is passed in" time="0.013">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/ToolbarButton should pass titlePosition to tooltip position" name="@atlaskit/editor-core/ui/ToolbarButton should pass titlePosition to tooltip position" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="isWebGLAvailable helper method" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:47" time="0.484" tests="2">
    <testcase classname="isWebGLAvailable helper method should create only 1 canvas context and cache the return value from getContext" name="isWebGLAvailable helper method should create only 1 canvas context and cache the return value from getContext" time="0.005">
    </testcase>
    <testcase classname="isWebGLAvailable helper method should return false when the canvas context is not available" name="isWebGLAvailable helper method should return false when the canvas context is not available" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="WithProviders" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:47" time="0.696" tests="1">
    <testcase classname="WithProviders should pass multiple providers to UI component" name="WithProviders should pass multiple providers to UI component" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema listItem node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:47" time="1.103" tests="5">
    <testcase classname="@atlaskit/editor-common/schema listItem node should be possible to create a list item with a single paragraph" name="@atlaskit/editor-common/schema listItem node should be possible to create a list item with a single paragraph" time="0.009">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema listItem node should not be possible to have blockquote inside list" name="@atlaskit/editor-common/schema listItem node should not be possible to have blockquote inside list" time="0.04">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema listItem node should be possible to have paragraph inside list" name="@atlaskit/editor-common/schema listItem node should be possible to have paragraph inside list" time="0.006">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema listItem node should be possible to have sublist inside list" name="@atlaskit/editor-common/schema listItem node should be possible to have sublist inside list" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema listItem node should not be possible to have sublist and first child inside list" name="@atlaskit/editor-common/schema listItem node should not be possible to have sublist and first child inside list" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="cleanProps" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:47" time="0.687" tests="1">
    <testcase classname="cleanProps should remove fireAnalyticsEvent and firePrivateAnalyticsEvent" name="cleanProps should remove fireAnalyticsEvent and firePrivateAnalyticsEvent" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/DecisionItem" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:48" time="0.866" tests="2">
    <testcase classname="Renderer - React/Nodes/DecisionItem should wrap content with &lt;AkDecisionItem&gt;-tag" name="Renderer - React/Nodes/DecisionItem should wrap content with &lt;AkDecisionItem&gt;-tag" time="0.001">
    </testcase>
    <testcase classname="Renderer - React/Nodes/DecisionItem should not render if no children" name="Renderer - React/Nodes/DecisionItem should not render if no children" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/CodeBlock" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:48" time="1.125" tests="1">
    <testcase classname="Renderer - React/Nodes/CodeBlock should render @atlaskit/code component" name="Renderer - React/Nodes/CodeBlock should render @atlaskit/code component" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="UrlPreviewService" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:48" time="1.464" tests="2">
    <testcase classname="UrlPreviewService should resolve a preview" name="UrlPreviewService should resolve a preview" time="0.04">
    </testcase>
    <testcase classname="UrlPreviewService should resolve an error when iFramely fails to process provided link" name="UrlPreviewService should resolve an error when iFramely fails to process provided link" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="ErrorCard" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:49" time="0.656" tests="4">
    <testcase classname="ErrorCard should render the retry button when there is a retry fn" name="ErrorCard should render the retry button when there is a retry fn" time="0.075">
    </testcase>
    <testcase classname="ErrorCard should not render the retry button when there is no retry fn" name="ErrorCard should not render the retry button when there is no retry fn" time="0.01">
    </testcase>
    <testcase classname="ErrorCard should have an image when hasPreview=true" name="ErrorCard should have an image when hasPreview=true" time="0.018">
    </testcase>
    <testcase classname="ErrorCard should not have an image when hasPreview=false" name="ErrorCard should not have an image when hasPreview=false" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="Lozenge" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:49" time="0.752" tests="5">
    <testcase classname="Lozenge isBold property should not be the default" name="Lozenge isBold property should not be the default" time="0.17">
    </testcase>
    <testcase classname="Lozenge isBold property should change when toggled" name="Lozenge isBold property should change when toggled" time="0.01">
    </testcase>
    <testcase classname="Lozenge appearance property should be &quot;default&quot; when not set" name="Lozenge appearance property should be &quot;default&quot; when not set" time="0.004">
    </testcase>
    <testcase classname="Lozenge appearance property should change when set to an approved value" name="Lozenge appearance property should change when set to an approved value" time="0.04">
    </testcase>
    <testcase classname="Lozenge appearance property should revert to &quot;default&quot; when set to an invalid value" name="Lozenge appearance property should revert to &quot;default&quot; when set to an invalid value" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Marks/ConfluenceInlineComment" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:50" time="0.676" tests="2">
    <testcase classname="Renderer - React/Marks/ConfluenceInlineComment should wrap content with &lt;span&gt;-tag" name="Renderer - React/Marks/ConfluenceInlineComment should wrap content with &lt;span&gt;-tag" time="0.017">
    </testcase>
    <testcase classname="Renderer - React/Marks/ConfluenceInlineComment should set data-reference to attrs.reference" name="Renderer - React/Marks/ConfluenceInlineComment should set data-reference to attrs.reference" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Users" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:50" time="1.006" tests="2">
    <testcase classname="Users should render zero users as null" name="Users should render zero users as null" time="0.005">
    </testcase>
    <testcase classname="Users should render avatars" name="Users should render avatars" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Avatar List" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:50" time="1.084" tests="3">
    <testcase classname="Avatar List should not select avatar by default" name="Avatar List should not select avatar by default" time="0.012">
    </testcase>
    <testcase classname="Avatar List should select avatar when giving one via props" name="Avatar List should select avatar when giving one via props" time="0.003">
    </testcase>
    <testcase classname="Avatar List should call props click handler when avatar is clicked" name="Avatar List should call props click handler when avatar is clicked" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="WsConnection" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:51" time="1.101" tests="9">
    <testcase classname="WsConnection should make only one call to Ws constructor if it returns successfully" name="WsConnection should make only one call to Ws constructor if it returns successfully" time="0.009">
    </testcase>
    <testcase classname="WsConnection should make only 4 calls to Ws constructor with 1 second interval if it returns successfully only on the fourth call" name="WsConnection should make only 4 calls to Ws constructor with 1 second interval if it returns successfully only on the fourth call" time="0.005">
    </testcase>
    <testcase classname="WsConnection should make 10 calls to Ws constructor if Ws constructor permanently fails" name="WsConnection should make 10 calls to Ws constructor if Ws constructor permanently fails" time="0.001">
    </testcase>
    <testcase classname="WsConnection should stop making calls after teardown was called and Ws the constructor permanently fails" name="WsConnection should stop making calls after teardown was called and Ws the constructor permanently fails" time="0.002">
    </testcase>
    <testcase classname="WsConnection should report about the connection as lost after 5 minutes of idle" name="WsConnection should report about the connection as lost after 5 minutes of idle" time="0.002">
    </testcase>
    <testcase classname="WsConnection should reset idle timeout when data comes to the websocket" name="WsConnection should reset idle timeout when data comes to the websocket" time="0.002">
    </testcase>
    <testcase classname="WsConnection should cancel idle timeout when teardown is called" name="WsConnection should cancel idle timeout when teardown is called" time="0.001">
    </testcase>
    <testcase classname="WsConnection should send data when the websocket is open" name="WsConnection should send data when the websocket is open" time="0.002">
    </testcase>
    <testcase classname="WsConnection should throw an error when the websocket is closed" name="WsConnection should throw an error when the websocket is closed" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="editorClose action creator" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:51" time="1.511" tests="1">
    <testcase classname="editorClose action creator should return only action type" name="editorClose action creator should return only action type" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema blockquote node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:51" time="1.441" tests="4">
    <testcase classname="@atlaskit/editor-common/schema blockquote node should be possible to create a blockquote with a paragraph" name="@atlaskit/editor-common/schema blockquote node should be possible to create a blockquote with a paragraph" time="0.011">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema blockquote node should not be possible to have heading inside blockquote" name="@atlaskit/editor-common/schema blockquote node should not be possible to have heading inside blockquote" time="0.042">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema blockquote node should be possible to have paragraph inside blockquote" name="@atlaskit/editor-common/schema blockquote node should be possible to have paragraph inside blockquote" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema blockquote node should not be possible to have list inside blockquote" name="@atlaskit/editor-common/schema blockquote node should not be possible to have list inside blockquote" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Connected SidebarItem component" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:52" time="1.085" tests="4">
    <testcase classname="Connected SidebarItem component should dispatch an action when onChangeService is called" name="Connected SidebarItem component should dispatch an action when onChangeService is called" time="0.009">
    </testcase>
    <testcase classname="StatelessSidebarItem component should call onChangeService cb when item is clicked" name="StatelessSidebarItem component should call onChangeService cb when item is clicked" time="0.004">
    </testcase>
    <testcase classname="StatelessSidebarItem component #render() should render ServiceIcon, ServiceName and props.children" name="StatelessSidebarItem component #render() should render ServiceIcon, ServiceName and props.children" time="0.003">
    </testcase>
    <testcase classname="StatelessSidebarItem component #render() should pass isActive prop through to ServiceName component" name="StatelessSidebarItem component #render() should pass isActive prop through to ServiceName component" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AtlaskitThemeProvider" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:53" time="0.893" tests="3">
    <testcase classname="AtlaskitThemeProvider should mount" name="AtlaskitThemeProvider should mount" time="0.03">
    </testcase>
    <testcase classname="themed should return a function" name="themed should return a function" time="0.001">
    </testcase>
    <testcase classname="themed should default to the light theme" name="themed should default to the light theme" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/TableCell" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:52" time="1.806" tests="1">
    <testcase classname="Renderer - React/Nodes/TableCell should create a &lt;td&gt;-tag" name="Renderer - React/Nodes/TableCell should create a &lt;td&gt;-tag" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Badge" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:54" time="0.701" tests="11">
    <testcase classname="Badge value property should be visibly displayed" name="Badge value property should be visibly displayed" time="0.031">
    </testcase>
    <testcase classname="Badge value property should only accept positive numbers" name="Badge value property should only accept positive numbers" time="0.006">
    </testcase>
    <testcase classname="Badge value property should show Infinity as the ∞ character" name="Badge value property should show Infinity as the ∞ character" time="0.006">
    </testcase>
    <testcase classname="Badge value property should trigger onValueUpdated when value prop changed with a number" name="Badge value property should trigger onValueUpdated when value prop changed with a number" time="0.007">
    </testcase>
    <testcase classname="Badge max property should constrain to 99+ when not specified" name="Badge max property should constrain to 99+ when not specified" time="0.008">
    </testcase>
    <testcase classname="Badge max property should constrain the value when set" name="Badge max property should constrain the value when set" time="0.004">
    </testcase>
    <testcase classname="Badge max property should pass the value through when max === 0" name="Badge max property should pass the value through when max === 0" time="0.007">
    </testcase>
    <testcase classname="Badge max property should not constrain if equal to value" name="Badge max property should not constrain if equal to value" time="0.005">
    </testcase>
    <testcase classname="Badge appearance property should be &quot;default&quot; when not set" name="Badge appearance property should be &quot;default&quot; when not set" time="0.003">
    </testcase>
    <testcase classname="Badge appearance property should change when set to an approved value" name="Badge appearance property should change when set to an approved value" time="0.033">
    </testcase>
    <testcase classname="Badge appearance property should revert to &quot;default&quot; when set to an invalid value" name="Badge appearance property should revert to &quot;default&quot; when set to an invalid value" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="changePath" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:53" time="2.208" tests="3">
    <testcase classname="changePath should skip fetching for different action type" name="changePath should skip fetching for different action type" time="0.004">
    </testcase>
    <testcase classname="changePath should dispatch path change when fetching successful" name="changePath should dispatch path change when fetching successful" time="0.002">
    </testcase>
    <testcase classname="changePath should dispatch account unlink if fetching ended with 401 error" name="changePath should dispatch account unlink if fetching ended with 401 error" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/BulletList" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:55" time="0.586" tests="1">
    <testcase classname="Renderer - React/Nodes/BulletList should wrap content with &lt;ul&gt;-tag" name="Renderer - React/Nodes/BulletList should wrap content with &lt;ul&gt;-tag" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/Image" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:55" time="0.534" tests="1">
    <testcase classname="Renderer - React/Nodes/Image should render a &lt;img&gt;-tag" name="Renderer - React/Nodes/Image should render a &lt;img&gt;-tag" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="editorShowError() reducer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:56" time="0.638" tests="3">
    <testcase classname="editorShowError() reducer returns same state if action has different type" name="editorShowError() reducer returns same state if action has different type" time="0.001">
    </testcase>
    <testcase classname="editorShowError() reducer sets the error to the state" name="editorShowError() reducer sets the error to the state" time="0">
    </testcase>
    <testcase classname="editorShowError() reducer replaces the previous error in the state" name="editorShowError() reducer replaces the previous error in the state" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="WsProvider" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:55" time="0.848" tests="3">
    <testcase classname="WsProvider should create a new instance of WsConnection holder for a client" name="WsProvider should create a new instance of WsConnection holder for a client" time="0.009">
    </testcase>
    <testcase classname="WsProvider should reuse a WsConnectionHolder for the same client" name="WsProvider should reuse a WsConnectionHolder for the same client" time="0.003">
    </testcase>
    <testcase classname="WsProvider should create a new instance for the second client" name="WsProvider should create a new instance for the second client" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getParentAnalyticsData" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:57" time="2.662" tests="13">
    <testcase classname="getParentAnalyticsData should return empty object if no parent decorators" name="getParentAnalyticsData should return empty object if no parent decorators" time="0.019">
    </testcase>
    <testcase classname="getParentAnalyticsData should return parentData from immediate parent decorator" name="getParentAnalyticsData should return parentData from immediate parent decorator" time="0.009">
    </testcase>
    <testcase classname="getParentAnalyticsData should return parentData from multiple parent decorators" name="getParentAnalyticsData should return parentData from multiple parent decorators" time="0.011">
    </testcase>
    <testcase classname="getParentAnalyticsData should override fields with parent decorator data" name="getParentAnalyticsData should override fields with parent decorator data" time="0.007">
    </testcase>
    <testcase classname="getParentAnalyticsData should return parentData provided by the getData function" name="getParentAnalyticsData should return parentData provided by the getData function" time="0.009">
    </testcase>
    <testcase classname="getParentAnalyticsData should not return parentData when matchPrivate is true" name="getParentAnalyticsData should not return parentData when matchPrivate is true" time="0.005">
    </testcase>
    <testcase classname="getParentAnalyticsData should return parentData when partial string match is true" name="getParentAnalyticsData should return parentData when partial string match is true" time="0.891">
    </testcase>
    <testcase classname="getParentAnalyticsData should return parentData when full string match is true" name="getParentAnalyticsData should return parentData when full string match is true" time="0.005">
    </testcase>
    <testcase classname="getParentAnalyticsData should not return parentData when string match is false" name="getParentAnalyticsData should not return parentData when string match is false" time="0.007">
    </testcase>
    <testcase classname="getParentAnalyticsData should return parentData when regex match is true" name="getParentAnalyticsData should return parentData when regex match is true" time="0.007">
    </testcase>
    <testcase classname="getParentAnalyticsData should return parentData when regex match is false" name="getParentAnalyticsData should return parentData when regex match is false" time="0.004">
    </testcase>
    <testcase classname="getParentAnalyticsData should return parentData when function match is true" name="getParentAnalyticsData should return parentData when function match is true" time="0.004">
    </testcase>
    <testcase classname="getParentAnalyticsData should not return parentData when function match is false" name="getParentAnalyticsData should not return parentData when function match is false" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="MediaEditor cursor positions" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:59" time="0.905" tests="30">
    <testcase classname="MediaEditor cursor positions isWhiteSpace should return true for space" name="MediaEditor cursor positions isWhiteSpace should return true for space" time="0.003">
    </testcase>
    <testcase classname="MediaEditor cursor positions isWhiteSpace should return true for tab character" name="MediaEditor cursor positions isWhiteSpace should return true for tab character" time="0.001">
    </testcase>
    <testcase classname="MediaEditor cursor positions isWhiteSpace should return false for letter character" name="MediaEditor cursor positions isWhiteSpace should return false for letter character" time="0">
    </testcase>
    <testcase classname="MediaEditor cursor positions isClose should return true for same values" name="MediaEditor cursor positions isClose should return true for same values" time="0">
    </testcase>
    <testcase classname="MediaEditor cursor positions isClose should return true for values that are closer that 1 screen unit" name="MediaEditor cursor positions isClose should return true for values that are closer that 1 screen unit" time="0.001">
    </testcase>
    <testcase classname="MediaEditor cursor positions isClose should return false for values that differ in 1 screen unit" name="MediaEditor cursor positions isClose should return false for values that differ in 1 screen unit" time="0">
    </testcase>
    <testcase classname="MediaEditor cursor positions isClose should return false for values that differ in more thatn 1 unit" name="MediaEditor cursor positions isClose should return false for values that differ in more thatn 1 unit" time="0">
    </testcase>
    <testcase classname="MediaEditor cursor positions getDirection should return undefined for index below zero" name="MediaEditor cursor positions getDirection should return undefined for index below zero" time="0.002">
    </testcase>
    <testcase classname="MediaEditor cursor positions getDirection should return undefined for index larger than length" name="MediaEditor cursor positions getDirection should return undefined for index larger than length" time="0.001">
    </testcase>
    <testcase classname="MediaEditor cursor positions getDirection should return undefined for index equal to length" name="MediaEditor cursor positions getDirection should return undefined for index equal to length" time="0">
    </testcase>
    <testcase classname="MediaEditor cursor positions getDirection should return undefined for index equal to 0" name="MediaEditor cursor positions getDirection should return undefined for index equal to 0" time="0">
    </testcase>
    <testcase classname="MediaEditor cursor positions getDirection should return ltr if previous character is to the left and close" name="MediaEditor cursor positions getDirection should return ltr if previous character is to the left and close" time="0.001">
    </testcase>
    <testcase classname="MediaEditor cursor positions getDirection should return undefined if previous character is to the left but far" name="MediaEditor cursor positions getDirection should return undefined if previous character is to the left but far" time="0.001">
    </testcase>
    <testcase classname="MediaEditor cursor positions getDirection should return rtl if previous character is to the right and close" name="MediaEditor cursor positions getDirection should return rtl if previous character is to the right and close" time="0">
    </testcase>
    <testcase classname="MediaEditor cursor positions getDirection should return undefined if previous character is to the right but far" name="MediaEditor cursor positions getDirection should return undefined if previous character is to the right but far" time="0.004">
    </testcase>
    <testcase classname="MediaEditor cursor positions getGroupStartIndices should return empty array for empty array of groups" name="MediaEditor cursor positions getGroupStartIndices should return empty array for empty array of groups" time="0">
    </testcase>
    <testcase classname="MediaEditor cursor positions getGroupStartIndices should return zero for one group" name="MediaEditor cursor positions getGroupStartIndices should return zero for one group" time="0.001">
    </testcase>
    <testcase classname="MediaEditor cursor positions getGroupStartIndices should return correct indices for multiple groups" name="MediaEditor cursor positions getGroupStartIndices should return correct indices for multiple groups" time="0.001">
    </testcase>
    <testcase classname="MediaEditor cursor positions createSpansForCharacters should return empty array for empty text" name="MediaEditor cursor positions createSpansForCharacters should return empty array for empty text" time="0.002">
    </testcase>
    <testcase classname="MediaEditor cursor positions createSpansForCharacters should return spans for each character in text" name="MediaEditor cursor positions createSpansForCharacters should return spans for each character in text" time="0.016">
    </testcase>
    <testcase classname="MediaEditor cursor positions createSpansForGroups should return empty array for empty array of groups" name="MediaEditor cursor positions createSpansForGroups should return empty array for empty array of groups" time="0.001">
    </testcase>
    <testcase classname="MediaEditor cursor positions createSpansForGroups should return spans for each group" name="MediaEditor cursor positions createSpansForGroups should return spans for each group" time="0.003">
    </testcase>
    <testcase classname="MediaEditor cursor positions calculateTotalLength should return 0 for empty group array" name="MediaEditor cursor positions calculateTotalLength should return 0 for empty group array" time="0.001">
    </testcase>
    <testcase classname="MediaEditor cursor positions calculateTotalLength should return length of group for one group" name="MediaEditor cursor positions calculateTotalLength should return length of group for one group" time="0">
    </testcase>
    <testcase classname="MediaEditor cursor positions calculateTotalLength should return total length of groups" name="MediaEditor cursor positions calculateTotalLength should return total length of groups" time="0">
    </testcase>
    <testcase classname="MediaEditor cursor positions putInternalPositions should do nothing if the text is empty" name="MediaEditor cursor positions putInternalPositions should do nothing if the text is empty" time="0.001">
    </testcase>
    <testcase classname="MediaEditor cursor positions putInternalPositions should do nothing if the text contains one character" name="MediaEditor cursor positions putInternalPositions should do nothing if the text contains one character" time="0.002">
    </testcase>
    <testcase classname="MediaEditor cursor positions putInternalPositions should add one position if the text contains two characters" name="MediaEditor cursor positions putInternalPositions should add one position if the text contains two characters" time="0.005">
    </testcase>
    <testcase classname="MediaEditor cursor positions putInternalPositions should add multiple positions if the the text contains multiple characters" name="MediaEditor cursor positions putInternalPositions should add multiple positions if the the text contains multiple characters" time="0.001">
    </testcase>
    <testcase classname="MediaEditor cursor positions putInternalPositions should add multiple positions if the the text contains multiple characters and apply limiter" name="MediaEditor cursor positions putInternalPositions should add multiple positions if the the text contains multiple characters and apply limiter" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/Doc" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:00" time="0.629" tests="2">
    <testcase classname="Renderer - React/Nodes/Doc should wrap content with &lt;div&gt;-tag" name="Renderer - React/Nodes/Doc should wrap content with &lt;div&gt;-tag" time="0.001">
    </testcase>
    <testcase classname="Renderer - React/Nodes/Doc should output correct html" name="Renderer - React/Nodes/Doc should output correct html" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="MediaFileService" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:01" time="0.697" tests="6">
    <testcase classname="MediaFileService should resolve file item from collection given or not" name="MediaFileService should resolve file item from collection given or not" time="0.032">
    </testcase>
    <testcase classname="MediaFileService should resolve file item from collection given" name="MediaFileService should resolve file item from collection given" time="0.006">
    </testcase>
    <testcase classname="MediaFileService should reject server responded with 500" name="MediaFileService should reject server responded with 500" time="0.003">
    </testcase>
    <testcase classname="MediaFileService cache should cache processed files" name="MediaFileService cache should cache processed files" time="0.004">
    </testcase>
    <testcase classname="MediaFileService cache should not cache processed files if caching is disabled" name="MediaFileService cache should not cache processed files if caching is disabled" time="0.006">
    </testcase>
    <testcase classname="MediaFileService cache should not cache unprocessed files" name="MediaFileService cache should not cache unprocessed files" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="handleCloudFetchingEvent" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:02" time="0.667" tests="5">
    <testcase classname="handleCloudFetchingEvent should report upload-status-update to the parent channel when receives RemoteUploadProgress event" name="handleCloudFetchingEvent should report upload-status-update to the parent channel when receives RemoteUploadProgress event" time="0.009">
    </testcase>
    <testcase classname="handleCloudFetchingEvent should dispatch finalizeUpload and getPreview when receives RemoteUploadEnd event" name="handleCloudFetchingEvent should dispatch finalizeUpload and getPreview when receives RemoteUploadEnd event" time="0.006">
    </testcase>
    <testcase classname="handleCloudFetchingEvent should report upload-error to the parent channel when receives RemoteUploadFail event" name="handleCloudFetchingEvent should report upload-error to the parent channel when receives RemoteUploadFail event" time="0.002">
    </testcase>
    <testcase classname="handleCloudFetchingEvent should call next(action) if the action type matches" name="handleCloudFetchingEvent should call next(action) if the action type matches" time="0.001">
    </testcase>
    <testcase classname="handleCloudFetchingEvent should call next(action) if the action type does not match" name="handleCloudFetchingEvent should call next(action) if the action type does not match" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getElementDimension" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:03" time="0.773" tests="1">
    <testcase classname="getElementDimension should return a rounded value for the passed dimension" name="getElementDimension should return a rounded value for the passed dimension" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="Auto dismiss flag" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:57" time="8.447" tests="9">
    <testcase classname="Auto dismiss flag AutoDismissFlag should instantiate" name="Auto dismiss flag AutoDismissFlag should instantiate" time="0.125">
    </testcase>
    <testcase classname="Auto dismiss flag AutoDismissFlag should render a &lt;Flag /&gt;" name="Auto dismiss flag AutoDismissFlag should render a &lt;Flag /&gt;" time="0.031">
    </testcase>
    <testcase classname="Auto dismiss flag AutoDismissFlag should use 15 seconds as the timer value" name="Auto dismiss flag AutoDismissFlag should use 15 seconds as the timer value" time="0.001">
    </testcase>
    <testcase classname="Auto dismiss flag AutoDismissFlag timer tests should auto dismiss after 15 seconds if isDismissAllowed and onDismissed are set on mount" name="Auto dismiss flag AutoDismissFlag timer tests should auto dismiss after 15 seconds if isDismissAllowed and onDismissed are set on mount" time="0.102">
    </testcase>
    <testcase classname="Auto dismiss flag AutoDismissFlag timer tests should not auto dismiss after 15 seconds if isDismissAllowed is not set on mount" name="Auto dismiss flag AutoDismissFlag timer tests should not auto dismiss after 15 seconds if isDismissAllowed is not set on mount" time="0.017">
    </testcase>
    <testcase classname="Auto dismiss flag AutoDismissFlag timer tests should auto dismiss after 15 seconds if isDismissAllowed and onDismissed props are set after mount" name="Auto dismiss flag AutoDismissFlag timer tests should auto dismiss after 15 seconds if isDismissAllowed and onDismissed props are set after mount" time="0.085">
    </testcase>
    <testcase classname="Auto dismiss flag AutoDismissFlag timer tests should not auto dismiss after 15 seconds if isDismissAllowed prop is set on mount but then removed" name="Auto dismiss flag AutoDismissFlag timer tests should not auto dismiss after 15 seconds if isDismissAllowed prop is set on mount but then removed" time="0.235">
    </testcase>
    <testcase classname="Auto dismiss flag AutoDismissFlag timer tests should pause the dismiss timer on Flag mouseover, and resume on mouseout" name="Auto dismiss flag AutoDismissFlag timer tests should pause the dismiss timer on Flag mouseover, and resume on mouseout" time="0.025">
    </testcase>
    <testcase classname="Auto dismiss flag AutoDismissFlag timer tests should pause the dismiss timer on Flag focus, and resume on blur" name="Auto dismiss flag AutoDismissFlag timer tests should pause the dismiss timer on Flag focus, and resume on blur" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="ak-progress-tracker/progress-tracker-stage" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:04" time="2.189" tests="7">
    <testcase classname="ak-progress-tracker/progress-tracker-stage should render the component" name="ak-progress-tracker/progress-tracker-stage should render the component" time="0.018">
    </testcase>
    <testcase classname="ak-progress-tracker/progress-tracker-stage should render unvisited stage with correct props" name="ak-progress-tracker/progress-tracker-stage should render unvisited stage with correct props" time="0.003">
    </testcase>
    <testcase classname="ak-progress-tracker/progress-tracker-stage should render current stage with correct props" name="ak-progress-tracker/progress-tracker-stage should render current stage with correct props" time="0.003">
    </testcase>
    <testcase classname="ak-progress-tracker/progress-tracker-stage should render disabled stage with correct props" name="ak-progress-tracker/progress-tracker-stage should render disabled stage with correct props" time="0.002">
    </testcase>
    <testcase classname="ak-progress-tracker/progress-tracker-stage should render visited stage with default link and correct props" name="ak-progress-tracker/progress-tracker-stage should render visited stage with default link and correct props" time="0.821">
    </testcase>
    <testcase classname="ak-progress-tracker/progress-tracker-stage should render visited stage without link if noLink is true" name="ak-progress-tracker/progress-tracker-stage should render visited stage without link if noLink is true" time="0.002">
    </testcase>
    <testcase classname="ak-progress-tracker/progress-tracker-stage should render transitions with correct props" name="ak-progress-tracker/progress-tracker-stage should render transitions with correct props" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="changeAccount" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:40:55" time="11.363" tests="2">
    <testcase classname="changeAccount should dispatch changeCloudAccountFolder action given changeAccount action" name="changeAccount should dispatch changeCloudAccountFolder action given changeAccount action" time="0.005">
    </testcase>
    <testcase classname="changeAccount should not dispatch given not a changeAccount action" name="changeAccount should not dispatch given not a changeAccount action" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="analytics decorator" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:06" time="1.725" tests="6">
    <testcase classname="analytics decorator tracks events after class method is called" name="analytics decorator tracks events after class method is called" time="0.013">
    </testcase>
    <testcase classname="analytics decorator tracks events after bound method (instance property) is called" name="analytics decorator tracks events after bound method (instance property) is called" time="0.003">
    </testcase>
    <testcase classname="analytics decorator returns unique decorated bound method (property) per instance" name="analytics decorator returns unique decorated bound method (property) per instance" time="0.002">
    </testcase>
    <testcase classname="analytics decorator returns property value if decorating a non-function property" name="analytics decorator returns property value if decorating a non-function property" time="0.001">
    </testcase>
    <testcase classname="analytics decorator can track private methods being called" name="analytics decorator can track private methods being called" time="0.002">
    </testcase>
    <testcase classname="analytics decorator should not track event if it returns false" name="analytics decorator should not track event if it returns false" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CardFrame" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:07" time="1.341" tests="10">
    <testcase classname="CardFrame should render as a link when there is a href" name="CardFrame should render as a link when there is a href" time="0.003">
    </testcase>
    <testcase classname="CardFrame should not render as a link when there is no href" name="CardFrame should not render as a link when there is no href" time="0.001">
    </testcase>
    <testcase classname="CardFrame should not render an icon when isPlaceholder=true" name="CardFrame should not render an icon when isPlaceholder=true" time="0.002">
    </testcase>
    <testcase classname="CardFrame should render an icon when isPlaceholder=false" name="CardFrame should render an icon when isPlaceholder=false" time="0.001">
    </testcase>
    <testcase classname="CardFrame should not render text when isPlaceholder=true" name="CardFrame should not render text when isPlaceholder=true" time="0.001">
    </testcase>
    <testcase classname="CardFrame should render text when isPlaceholder=false" name="CardFrame should render text when isPlaceholder=false" time="0.001">
    </testcase>
    <testcase classname="CardFrame should not be interactive when isPlaceholder=true and href is defined" name="CardFrame should not be interactive when isPlaceholder=true and href is defined" time="0.008">
    </testcase>
    <testcase classname="CardFrame should not be interactive when isPlaceholder=true and onClick is defined" name="CardFrame should not be interactive when isPlaceholder=true and onClick is defined" time="0.001">
    </testcase>
    <testcase classname="CardFrame should be interactive when isPlaceholder=false and href is defined" name="CardFrame should be interactive when isPlaceholder=false and href is defined" time="0.002">
    </testcase>
    <testcase classname="CardFrame should be interactive when isPlaceholder=false and onClick is defined" name="CardFrame should be interactive when isPlaceholder=false and onClick is defined" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="createHasher" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:05" time="2.808" tests="2">
    <testcase classname="createHasher should create WorkerHasher by default" name="createHasher should create WorkerHasher by default" time="0.114">
    </testcase>
    <testcase classname="createHasher should create SimpleHasher if WorkerHasher throws an exception" name="createHasher should create SimpleHasher if WorkerHasher throws an exception" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="MediaEditor BitmapExporter" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:08" time="0.619" tests="6">
    <testcase classname="MediaEditor BitmapExporter prepare method should return false for negative width" name="MediaEditor BitmapExporter prepare method should return false for negative width" time="0.002">
    </testcase>
    <testcase classname="MediaEditor BitmapExporter prepare method should return false for negative height" name="MediaEditor BitmapExporter prepare method should return false for negative height" time="0.001">
    </testcase>
    <testcase classname="MediaEditor BitmapExporter prepare method should return false for zero width" name="MediaEditor BitmapExporter prepare method should return false for zero width" time="0">
    </testcase>
    <testcase classname="MediaEditor BitmapExporter prepare method should return false for zero height" name="MediaEditor BitmapExporter prepare method should return false for zero height" time="0.001">
    </testcase>
    <testcase classname="MediaEditor BitmapExporter prepare method should return true for correct width and height" name="MediaEditor BitmapExporter prepare method should return true for correct width and height" time="0.001">
    </testcase>
    <testcase classname="MediaEditor BitmapExporter should return data from canvas" name="MediaEditor BitmapExporter should return data from canvas" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/page-header" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:08" time="0.557" tests="4">
    <testcase classname="@atlaskit/page-header should render passed children" name="@atlaskit/page-header should render passed children" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/page-header should render passed breadcrumbs" name="@atlaskit/page-header should render passed breadcrumbs" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/page-header should render passed actions" name="@atlaskit/page-header should render passed actions" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/page-header should render passed bottom bar" name="@atlaskit/page-header should render passed bottom bar" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema unsupportedInline node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:08" time="1.318" tests="2">
    <testcase classname="@atlaskit/editor-common/schema unsupportedInline node should parse unsupported inline nodes" name="@atlaskit/editor-common/schema unsupportedInline node should parse unsupported inline nodes" time="0.021">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema unsupportedInline node should encode unsupported inline nodes to html" name="@atlaskit/editor-common/schema unsupportedInline node should encode unsupported inline nodes to html" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="MediaEditor ResourceManager" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:09" time="1.196" tests="5">
    <testcase classname="MediaEditor ResourceManager should successfully releaseAll if holds no resources" name="MediaEditor ResourceManager should successfully releaseAll if holds no resources" time="0.003">
    </testcase>
    <testcase classname="MediaEditor ResourceManager should successfully release resource" name="MediaEditor ResourceManager should successfully release resource" time="0.005">
    </testcase>
    <testcase classname="MediaEditor ResourceManager should not release resource twice" name="MediaEditor ResourceManager should not release resource twice" time="0.002">
    </testcase>
    <testcase classname="MediaEditor ResourceManager should successfully release with release function" name="MediaEditor ResourceManager should successfully release with release function" time="0.003">
    </testcase>
    <testcase classname="MediaEditor ResourceManager should release in reverse order" name="MediaEditor ResourceManager should release in reverse order" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Dropzone&gt;" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:09" time="1.591" tests="2">
    <testcase classname="&lt;Dropzone&gt; #render() should render correct components" name="&lt;Dropzone&gt; #render() should render correct components" time="0.021">
    </testcase>
    <testcase classname="&lt;Dropzone&gt; #render() should pass through isActive to Wrapper" name="&lt;Dropzone&gt; #render() should pass through isActive to Wrapper" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="hidePopupMiddleware" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:10" time="0.693" tests="2">
    <testcase classname="hidePopupMiddleware should emit closed event given HIDE_POPUP action" name="hidePopupMiddleware should emit closed event given HIDE_POPUP action" time="0.012">
    </testcase>
    <testcase classname="hidePopupMiddleware should do nothing given other action" name="hidePopupMiddleware should do nothing given other action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="resetView reducer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:11" time="0.589" tests="8">
    <testcase classname="resetView reducer should not change the state for an unknown action" name="resetView reducer should not change the state for an unknown action" time="0.001">
    </testcase>
    <testcase classname="resetView reducer should not change uploads if they were empty" name="resetView reducer should not change uploads if they were empty" time="0.001">
    </testcase>
    <testcase classname="resetView reducer should not drop upload with progress 0" name="resetView reducer should not drop upload with progress 0" time="0">
    </testcase>
    <testcase classname="resetView reducer should drop upload with progress undefined" name="resetView reducer should drop upload with progress undefined" time="0.001">
    </testcase>
    <testcase classname="resetView reducer should leave only uncompleted uploads" name="resetView reducer should leave only uncompleted uploads" time="0">
    </testcase>
    <testcase classname="resetView reducer should set the new view" name="resetView reducer should set the new view" time="0">
    </testcase>
    <testcase classname="resetView reducer should set empty selectedItems" name="resetView reducer should set empty selectedItems" time="0.001">
    </testcase>
    <testcase classname="resetView reducer should preserve the unrelated state fields" name="resetView reducer should preserve the unrelated state fields" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/reduced-ui-pack" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:10" time="1.213" tests="1">
    <testcase classname="@atlaskit/reduced-ui-pack icon export should contain expected SVG symbol ids" name="@atlaskit/reduced-ui-pack icon export should contain expected SVG symbol ids" time="0.144">
    </testcase>
  </testsuite>
  <testsuite name="Avatar" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:11" time="1.028" tests="14">
    <testcase classname="Avatar Image should render an image span when the src is set&quot;" name="Avatar Image should render an image span when the src is set&quot;" time="0.026">
    </testcase>
    <testcase classname="Avatar Image should not render an image span when the src is not set&quot;" name="Avatar Image should not render an image span when the src is not set&quot;" time="0.007">
    </testcase>
    <testcase classname="Avatar Image default avatar should render default avatar when no properties are provided" name="Avatar Image default avatar should render default avatar when no properties are provided" time="0.005">
    </testcase>
    <testcase classname="Avatar Image default avatar should render default avatar when there is an error" name="Avatar Image default avatar should render default avatar when there is an error" time="0.003">
    </testcase>
    <testcase classname="Avatar Image default avatar should render default avatar when src is set and there is an error" name="Avatar Image default avatar should render default avatar when src is set and there is an error" time="0.003">
    </testcase>
    <testcase classname="Avatar Image default avatar should not render default avatar when loading=true and no src" name="Avatar Image default avatar should not render default avatar when loading=true and no src" time="0.002">
    </testcase>
    <testcase classname="Avatar Image default avatar should not render default avatar when src is set" name="Avatar Image default avatar should not render default avatar when src is set" time="0.001">
    </testcase>
    <testcase classname="Avatar Image src property set at mount time should set the background image on the internal span to src" name="Avatar Image src property set at mount time should set the background image on the internal span to src" time="0.01">
    </testcase>
    <testcase classname="Avatar Image src property set at mount time should render an image span when src is set" name="Avatar Image src property set at mount time should render an image span when src is set" time="0.004">
    </testcase>
    <testcase classname="Avatar Image src property set at mount time should set isLoading=false when a same src is provided as the src already loaded" name="Avatar Image src property set at mount time should set isLoading=false when a same src is provided as the src already loaded" time="0.004">
    </testcase>
    <testcase classname="Avatar Image src property set at mount time should set isLoading=true when a new src is provided" name="Avatar Image src property set at mount time should set isLoading=true when a new src is provided" time="0.013">
    </testcase>
    <testcase classname="Avatar Image src property set at mount time should set isLoading=false &amp; hasError=false when src is loaded without errors" name="Avatar Image src property set at mount time should set isLoading=false &amp; hasError=false when src is loaded without errors" time="0.004">
    </testcase>
    <testcase classname="Avatar Image src property set at mount time should set isLoading=false &amp; hasError=true when a new invalid src is provided" name="Avatar Image src property set at mount time should set isLoading=false &amp; hasError=true when a new invalid src is provided" time="0.03">
    </testcase>
    <testcase classname="Avatar Image src property set after mount time should load image successfully when src set" name="Avatar Image src property set after mount time should load image successfully when src set" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/datetime-picker" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:11" time="0.56" tests="21">
    <testcase classname="@atlaskit/datetime-picker parseDate returns an object containing a date, display value, and value of the parsed date" name="@atlaskit/datetime-picker parseDate returns an object containing a date, display value, and value of the parsed date" time="0.017">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseDate returns null if the input value is not a valid date string" name="@atlaskit/datetime-picker parseDate returns null if the input value is not a valid date string" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseTime parsing time &quot;9:00am&quot; should output &quot;9:00am&quot;" name="@atlaskit/datetime-picker parseTime parsing time &quot;9:00am&quot; should output &quot;9:00am&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseTime parsing time &quot;09:00am&quot; should output &quot;9:00am&quot;" name="@atlaskit/datetime-picker parseTime parsing time &quot;09:00am&quot; should output &quot;9:00am&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseTime parsing time &quot;3:21pm&quot; should output &quot;3:21pm&quot;" name="@atlaskit/datetime-picker parseTime parsing time &quot;3:21pm&quot; should output &quot;3:21pm&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseTime parsing time &quot;12:00&quot; should output &quot;12:00pm&quot;" name="@atlaskit/datetime-picker parseTime parsing time &quot;12:00&quot; should output &quot;12:00pm&quot;" time="0">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseTime parsing time &quot;0:00&quot; should output &quot;12:00am&quot;" name="@atlaskit/datetime-picker parseTime parsing time &quot;0:00&quot; should output &quot;12:00am&quot;" time="0">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseTime parsing time &quot;11:59&quot; should output &quot;11:59am&quot;" name="@atlaskit/datetime-picker parseTime parsing time &quot;11:59&quot; should output &quot;11:59am&quot;" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseTime parsing time &quot;23:59&quot; should output &quot;11:59pm&quot;" name="@atlaskit/datetime-picker parseTime parsing time &quot;23:59&quot; should output &quot;11:59pm&quot;" time="0">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseTime parsing time &quot; 9:00am &quot; should output &quot;9:00am&quot;" name="@atlaskit/datetime-picker parseTime parsing time &quot; 9:00am &quot; should output &quot;9:00am&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseTime parsing time &quot;13:00pm&quot; should output &quot;null&quot;" name="@atlaskit/datetime-picker parseTime parsing time &quot;13:00pm&quot; should output &quot;null&quot;" time="0">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseTime parsing time &quot;09:0am&quot; should output &quot;null&quot;" name="@atlaskit/datetime-picker parseTime parsing time &quot;09:0am&quot; should output &quot;null&quot;" time="0">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseTime parsing time &quot;9:0am&quot; should output &quot;null&quot;" name="@atlaskit/datetime-picker parseTime parsing time &quot;9:0am&quot; should output &quot;null&quot;" time="0">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseTime parsing time &quot;9:60am&quot; should output &quot;null&quot;" name="@atlaskit/datetime-picker parseTime parsing time &quot;9:60am&quot; should output &quot;null&quot;" time="0">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseTime parsing time &quot;23:60&quot; should output &quot;null&quot;" name="@atlaskit/datetime-picker parseTime parsing time &quot;23:60&quot; should output &quot;null&quot;" time="0">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseTime parsing time &quot;24:00&quot; should output &quot;null&quot;" name="@atlaskit/datetime-picker parseTime parsing time &quot;24:00&quot; should output &quot;null&quot;" time="0">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseTime parsing time &quot;0:00am&quot; should output &quot;null&quot;" name="@atlaskit/datetime-picker parseTime parsing time &quot;0:00am&quot; should output &quot;null&quot;" time="0">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseTime parsing time &quot;3.00&quot; should output &quot;null&quot;" name="@atlaskit/datetime-picker parseTime parsing time &quot;3.00&quot; should output &quot;null&quot;" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseTime parsing time &quot;3:123&quot; should output &quot;null&quot;" name="@atlaskit/datetime-picker parseTime parsing time &quot;3:123&quot; should output &quot;null&quot;" time="0">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseTime parsing time &quot;invalid string&quot; should output &quot;null&quot;" name="@atlaskit/datetime-picker parseTime parsing time &quot;invalid string&quot; should output &quot;null&quot;" time="0">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker parseTime parsing time &quot;&quot; should output &quot;null&quot;" name="@atlaskit/datetime-picker parseTime parsing time &quot;&quot; should output &quot;null&quot;" time="0">
    </testcase>
  </testsuite>
  <testsuite name="AnalyticsDecorator" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:12" time="0.79" tests="17">
    <testcase classname="AnalyticsDecorator should create a decorator component" name="AnalyticsDecorator should create a decorator component" time="0.006">
    </testcase>
    <testcase classname="AnalyticsDecorator should not create a component with multiple children" name="AnalyticsDecorator should not create a component with multiple children" time="0.002">
    </testcase>
    <testcase classname="AnalyticsDecorator should extend eventData for analytics events" name="AnalyticsDecorator should extend eventData for analytics events" time="0.025">
    </testcase>
    <testcase classname="AnalyticsDecorator should override existing eventData fields" name="AnalyticsDecorator should override existing eventData fields" time="0.007">
    </testcase>
    <testcase classname="AnalyticsDecorator should be nestable with other AnalyticsDecorators" name="AnalyticsDecorator should be nestable with other AnalyticsDecorators" time="0.006">
    </testcase>
    <testcase classname="AnalyticsDecorator should extend eventData by calling a function" name="AnalyticsDecorator should extend eventData by calling a function" time="0.004">
    </testcase>
    <testcase classname="AnalyticsDecorator should not extend public eventData when matchPrivate is true" name="AnalyticsDecorator should not extend public eventData when matchPrivate is true" time="0.005">
    </testcase>
    <testcase classname="AnalyticsDecorator should extend private eventData when matchPrivate is true" name="AnalyticsDecorator should extend private eventData when matchPrivate is true" time="0.006">
    </testcase>
    <testcase classname="AnalyticsDecorator should not extend private eventData when matchPrivate is false" name="AnalyticsDecorator should not extend private eventData when matchPrivate is false" time="0.004">
    </testcase>
    <testcase classname="AnalyticsDecorator should not extend public eventData when match is true" name="AnalyticsDecorator should not extend public eventData when match is true" time="0.006">
    </testcase>
    <testcase classname="AnalyticsDecorator should extend eventData when partial string match is true" name="AnalyticsDecorator should extend eventData when partial string match is true" time="0.004">
    </testcase>
    <testcase classname="AnalyticsDecorator should extend eventData when full string match is true" name="AnalyticsDecorator should extend eventData when full string match is true" time="0.004">
    </testcase>
    <testcase classname="AnalyticsDecorator should not extend eventData when string match is false" name="AnalyticsDecorator should not extend eventData when string match is false" time="0.005">
    </testcase>
    <testcase classname="AnalyticsDecorator should extend eventData when regex match is true" name="AnalyticsDecorator should extend eventData when regex match is true" time="0.009">
    </testcase>
    <testcase classname="AnalyticsDecorator should not extend eventData when regex match is false" name="AnalyticsDecorator should not extend eventData when regex match is false" time="0.005">
    </testcase>
    <testcase classname="AnalyticsDecorator should extend eventData when function match is true" name="AnalyticsDecorator should extend eventData when function match is true" time="0.007">
    </testcase>
    <testcase classname="AnalyticsDecorator should not extend eventData when function match is false" name="AnalyticsDecorator should not extend eventData when function match is false" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="isImageRemote" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:12" time="0.956" tests="5">
    <testcase classname="isImageRemote should return false for local resource (true in IE)" name="isImageRemote should return false for local resource (true in IE)" time="0.011">
    </testcase>
    <testcase classname="isImageRemote should retun false for same host, port and protocol (true in IE)" name="isImageRemote should retun false for same host, port and protocol (true in IE)" time="0.003">
    </testcase>
    <testcase classname="isImageRemote should return true for the same host, port, but different protocols" name="isImageRemote should return true for the same host, port, but different protocols" time="0.001">
    </testcase>
    <testcase classname="isImageRemote should return true for the same host, protocol, but different ports" name="isImageRemote should return true for the same host, protocol, but different ports" time="0.001">
    </testcase>
    <testcase classname="isImageRemote should return true for the same port, protocol, but different hosts" name="isImageRemote should return true for the same port, protocol, but different hosts" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="createReleaseCommit" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:13" time="0.629" tests="4">
    <testcase classname="createReleaseCommit should handle a single simple releaseObject with one released package" name="createReleaseCommit should handle a single simple releaseObject with one released package" time="0.007">
    </testcase>
    <testcase classname="createReleaseCommit should handle a single simple releaseObject with deleted package" name="createReleaseCommit should handle a single simple releaseObject with deleted package" time="0.001">
    </testcase>
    <testcase classname="createReleaseCommit should handle a multiple releases from one changeset" name="createReleaseCommit should handle a multiple releases from one changeset" time="0">
    </testcase>
    <testcase classname="createReleaseCommit should handle a merging releases from multiple changesets" name="createReleaseCommit should handle a merging releases from multiple changesets" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ProviderFactory" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:12" time="1.389" tests="11">
    <testcase classname="ProviderFactory setProvider should update map with new provider" name="ProviderFactory setProvider should update map with new provider" time="0.003">
    </testcase>
    <testcase classname="ProviderFactory setProvider should remove provider from map if undefined" name="ProviderFactory setProvider should remove provider from map if undefined" time="0.005">
    </testcase>
    <testcase classname="ProviderFactory setProvider should trigger notifyUpdated" name="ProviderFactory setProvider should trigger notifyUpdated" time="0.009">
    </testcase>
    <testcase classname="ProviderFactory removeProvider should remove provider from map" name="ProviderFactory removeProvider should remove provider from map" time="0.002">
    </testcase>
    <testcase classname="ProviderFactory removeProvider should trigger notifyUpdated" name="ProviderFactory removeProvider should trigger notifyUpdated" time="0.001">
    </testcase>
    <testcase classname="ProviderFactory subscribe should update map with new handler" name="ProviderFactory subscribe should update map with new handler" time="0.001">
    </testcase>
    <testcase classname="ProviderFactory subscribe should trigger handler" name="ProviderFactory subscribe should trigger handler" time="0.001">
    </testcase>
    <testcase classname="ProviderFactory unsubscribe should remove handler from subscriber map" name="ProviderFactory unsubscribe should remove handler from subscriber map" time="0.001">
    </testcase>
    <testcase classname="ProviderFactory unsubscribe should remove provider subscription if there are no handlers left" name="ProviderFactory unsubscribe should remove provider subscription if there are no handlers left" time="0.001">
    </testcase>
    <testcase classname="ProviderFactory notifyUpdated should call all handlers for provider" name="ProviderFactory notifyUpdated should call all handlers for provider" time="0.002">
    </testcase>
    <testcase classname="ProviderFactory destroy should clear all handlers and providers" name="ProviderFactory destroy should clear all handlers and providers" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Inline Message" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:13" time="0.783" tests="9">
    <testcase classname="Inline Message basic sanity check" name="Inline Message basic sanity check" time="0.006">
    </testcase>
    <testcase classname="Inline Message isOpen state should default to false" name="Inline Message isOpen state should default to false" time="0.002">
    </testcase>
    <testcase classname="Inline Message isOpen state should toggle when the button is clicked" name="Inline Message isOpen state should toggle when the button is clicked" time="0.009">
    </testcase>
    <testcase classname="Inline Message props title supplied title should be rendered" name="Inline Message props title supplied title should be rendered" time="0.063">
    </testcase>
    <testcase classname="Inline Message props secondaryText supplied secondary text should be rendered" name="Inline Message props secondaryText supplied secondary text should be rendered" time="0.016">
    </testcase>
    <testcase classname="Inline Message props type should default to &quot;connectivity&quot;" name="Inline Message props type should default to &quot;connectivity&quot;" time="0.018">
    </testcase>
    <testcase classname="Inline Message props type should be passed to IconForType component" name="Inline Message props type should be passed to IconForType component" time="0.002">
    </testcase>
    <testcase classname="Inline Message props position should default to &quot;bottom left&quot;" name="Inline Message props position should default to &quot;bottom left&quot;" time="0.014">
    </testcase>
    <testcase classname="Inline Message props position should be passed to InlineDialog component" name="Inline Message props position should be passed to InlineDialog component" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/OrderedList" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:13" time="0.6" tests="2">
    <testcase classname="Renderer - React/Nodes/OrderedList should wrap content with &lt;ol&gt;-tag with no start prop" name="Renderer - React/Nodes/OrderedList should wrap content with &lt;ol&gt;-tag with no start prop" time="0.003">
    </testcase>
    <testcase classname="Renderer - React/Nodes/OrderedList should wrap content with &lt;ol&gt;-tag with start prop" name="Renderer - React/Nodes/OrderedList should wrap content with &lt;ol&gt;-tag with start prop" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="modal-dialog" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:13" time="0.965" tests="23">
    <testcase classname="modal-dialog should be possible to create a component" name="modal-dialog should be possible to create a component" time="0.005">
    </testcase>
    <testcase classname="modal-dialog props height should be passed to Dialog" name="modal-dialog props height should be passed to Dialog" time="0.008">
    </testcase>
    <testcase classname="modal-dialog props height should return px if number" name="modal-dialog props height should return px if number" time="0.003">
    </testcase>
    <testcase classname="modal-dialog props height should return raw value if string" name="modal-dialog props height should return raw value if string" time="0.001">
    </testcase>
    <testcase classname="modal-dialog props height should return &quot;auto&quot; if not supplied" name="modal-dialog props height should return &quot;auto&quot; if not supplied" time="0.001">
    </testcase>
    <testcase classname="modal-dialog props width should be passed to Dialog" name="modal-dialog props width should be passed to Dialog" time="0.004">
    </testcase>
    <testcase classname="modal-dialog props width should return px if number" name="modal-dialog props width should return px if number" time="0.001">
    </testcase>
    <testcase classname="modal-dialog props width should return raw value if string" name="modal-dialog props width should return raw value if string" time="0.001">
    </testcase>
    <testcase classname="modal-dialog props width should return &quot;auto&quot; if not supplied" name="modal-dialog props width should return &quot;auto&quot; if not supplied" time="0.001">
    </testcase>
    <testcase classname="modal-dialog props width width = &quot;small&quot; is applied uniquely" name="modal-dialog props width width = &quot;small&quot; is applied uniquely" time="0.001">
    </testcase>
    <testcase classname="modal-dialog props width width = &quot;medium&quot; is applied uniquely" name="modal-dialog props width width = &quot;medium&quot; is applied uniquely" time="0.001">
    </testcase>
    <testcase classname="modal-dialog props width width = &quot;large&quot; is applied uniquely" name="modal-dialog props width width = &quot;large&quot; is applied uniquely" time="0">
    </testcase>
    <testcase classname="modal-dialog props width width = &quot;x-large&quot; is applied uniquely" name="modal-dialog props width width = &quot;x-large&quot; is applied uniquely" time="0">
    </testcase>
    <testcase classname="modal-dialog props header should render when set" name="modal-dialog props header should render when set" time="0.002">
    </testcase>
    <testcase classname="modal-dialog props footer should render when set" name="modal-dialog props footer should render when set" time="0.097">
    </testcase>
    <testcase classname="modal-dialog props children should render when set" name="modal-dialog props children should render when set" time="0.001">
    </testcase>
    <testcase classname="modal-dialog props onClose should trigger when blanket clicked" name="modal-dialog props onClose should trigger when blanket clicked" time="0.006">
    </testcase>
    <testcase classname="modal-dialog props onClose should trigger when blanket clicked below dialog (modalPositioner)" name="modal-dialog props onClose should trigger when blanket clicked below dialog (modalPositioner)" time="0.002">
    </testcase>
    <testcase classname="modal-dialog props onClose should not trigger when blanket content clicked" name="modal-dialog props onClose should not trigger when blanket content clicked" time="0.002">
    </testcase>
    <testcase classname="modal-dialog scrolling header/footer keylines should enable header keyline only when header provided" name="modal-dialog scrolling header/footer keylines should enable header keyline only when header provided" time="0.003">
    </testcase>
    <testcase classname="modal-dialog scrolling header/footer keylines should enable footer keyline only when footer provided" name="modal-dialog scrolling header/footer keylines should enable footer keyline only when footer provided" time="0.003">
    </testcase>
    <testcase classname="modal-dialog chromeless header should not render if dialog is chromeless" name="modal-dialog chromeless header should not render if dialog is chromeless" time="0.002">
    </testcase>
    <testcase classname="modal-dialog chromeless footer should not render if dialog is chromeless" name="modal-dialog chromeless footer should not render if dialog is chromeless" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/Blockquote" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:14" time="0.493" tests="1">
    <testcase classname="Renderer - React/Nodes/Blockquote should wrap content with &lt;blockquote&gt;-tag" name="Renderer - React/Nodes/Blockquote should wrap content with &lt;blockquote&gt;-tag" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Marks/Subsup" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:14" time="0.771" tests="4">
    <testcase classname="Renderer - React/Marks/Subsup &lt;Sub /&gt; should wrap content with &lt;sub&gt;-tag" name="Renderer - React/Marks/Subsup &lt;Sub /&gt; should wrap content with &lt;sub&gt;-tag" time="0.001">
    </testcase>
    <testcase classname="Renderer - React/Marks/Subsup &lt;Sub /&gt; should output correct html" name="Renderer - React/Marks/Subsup &lt;Sub /&gt; should output correct html" time="0.011">
    </testcase>
    <testcase classname="Renderer - React/Marks/Subsup &lt;Sup /&gt; should wrap content with &lt;sup&gt;-tag" name="Renderer - React/Marks/Subsup &lt;Sup /&gt; should wrap content with &lt;sup&gt;-tag" time="0.001">
    </testcase>
    <testcase classname="Renderer - React/Marks/Subsup &lt;Sup /&gt; should output correct html" name="Renderer - React/Marks/Subsup &lt;Sup /&gt; should output correct html" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="FilmstripView" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:14" time="0.832" tests="22">
    <testcase classname="FilmstripView .minOffset should return minOffset" name="FilmstripView .minOffset should return minOffset" time="0.014">
    </testcase>
    <testcase classname="FilmstripView .maxOffset should return maxOffset" name="FilmstripView .maxOffset should return maxOffset" time="0.003">
    </testcase>
    <testcase classname="FilmstripView .offset should return minOffset when not defined" name="FilmstripView .offset should return minOffset when not defined" time="0.004">
    </testcase>
    <testcase classname="FilmstripView .offset should return minOffset when less than minOffset" name="FilmstripView .offset should return minOffset when less than minOffset" time="0.004">
    </testcase>
    <testcase classname="FilmstripView .offset should return maxOffset when greater than maxOffset" name="FilmstripView .offset should return maxOffset when greater than maxOffset" time="0.006">
    </testcase>
    <testcase classname="FilmstripView .getClosestForLeft() should return the offset where the child that intesects at the specified offset is flush with the left edge of the window" name="FilmstripView .getClosestForLeft() should return the offset where the child that intesects at the specified offset is flush with the left edge of the window" time="0.006">
    </testcase>
    <testcase classname="FilmstripView .getClosestForLeft() should return the minOffset when the offset is less than minOffset" name="FilmstripView .getClosestForLeft() should return the minOffset when the offset is less than minOffset" time="0.005">
    </testcase>
    <testcase classname="FilmstripView .getClosestForLeft() should return the left offset of the first card offscreen at maxOffset when the offset is greater than maxOffset" name="FilmstripView .getClosestForLeft() should return the left offset of the first card offscreen at maxOffset when the offset is greater than maxOffset" time="0.003">
    </testcase>
    <testcase classname="FilmstripView .getClosestForRight() should return the offset where the child that intesects at the specified offset is flush with the right edge of the window" name="FilmstripView .getClosestForRight() should return the offset where the child that intesects at the specified offset is flush with the right edge of the window" time="0.008">
    </testcase>
    <testcase classname="FilmstripView .getClosestForRight() should return the right offset of the card at minOffset when the offset is less than minOffset" name="FilmstripView .getClosestForRight() should return the right offset of the card at minOffset when the offset is less than minOffset" time="0.005">
    </testcase>
    <testcase classname="FilmstripView .getClosestForRight() should return the maxOffset when the offset is greater than maxOffset" name="FilmstripView .getClosestForRight() should return the maxOffset when the offset is greater than maxOffset" time="0.003">
    </testcase>
    <testcase classname="FilmstripView .handleLeftClick() should call onScroll() with an updated offset on the previous page" name="FilmstripView .handleLeftClick() should call onScroll() with an updated offset on the previous page" time="0.006">
    </testcase>
    <testcase classname="FilmstripView .handleRightClick() should call onScroll() with an updated offset on the next page" name="FilmstripView .handleRightClick() should call onScroll() with an updated offset on the next page" time="0.01">
    </testcase>
    <testcase classname="FilmstripView .handleScroll() should not call onScroll() when the user is scrolling up or down" name="FilmstripView .handleScroll() should not call onScroll() when the user is scrolling up or down" time="0.006">
    </testcase>
    <testcase classname="FilmstripView .handleScroll() should call onScroll() with an updated offset when the user is scrolling left" name="FilmstripView .handleScroll() should call onScroll() with an updated offset when the user is scrolling left" time="0.005">
    </testcase>
    <testcase classname="FilmstripView .handleScroll() should call onScroll() with an updated offset when the user is scrolling right" name="FilmstripView .handleScroll() should call onScroll() with an updated offset when the user is scrolling right" time="0.003">
    </testcase>
    <testcase classname="FilmstripView .handleSizeChange() should call onSize() when the width has changed and after the state has been set" name="FilmstripView .handleSizeChange() should call onSize() when the width has changed and after the state has been set" time="0.004">
    </testcase>
    <testcase classname="FilmstripView .render() should not render the left arrow when offset is equal to minOffset" name="FilmstripView .render() should not render the left arrow when offset is equal to minOffset" time="0.008">
    </testcase>
    <testcase classname="FilmstripView .render() should render the left arrow when offset is greater than minOffset" name="FilmstripView .render() should render the left arrow when offset is greater than minOffset" time="0.005">
    </testcase>
    <testcase classname="FilmstripView .render() should not render the right arrow when offset is equal to maxOffset" name="FilmstripView .render() should not render the right arrow when offset is equal to maxOffset" time="0.003">
    </testcase>
    <testcase classname="FilmstripView .render() should render the right arrow when offset is less than maxOffset" name="FilmstripView .render() should render the right arrow when offset is less than maxOffset" time="0.005">
    </testcase>
    <testcase classname="FilmstripView .render() should wrap each of the children" name="FilmstripView .render() should wrap each of the children" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:14" time="1.291" tests="1">
    <testcase classname="@atlaskit/editor-core EditorServicesConfig interface should compile with TypeScript." name="@atlaskit/editor-core EditorServicesConfig interface should compile with TypeScript." time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="editorShowLoading action creator" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:15" time="1.004" tests="1">
    <testcase classname="editorShowLoading action creator should create action with type and file" name="editorShowLoading action creator should create action with type and file" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Empty state" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:15" time="0.744" tests="7">
    <testcase classname="Empty state should render primary action when primaryAction prop is not empty" name="Empty state should render primary action when primaryAction prop is not empty" time="0.006">
    </testcase>
    <testcase classname="Empty state should render secondary action when secondaryAction prop is not empty" name="Empty state should render secondary action when secondaryAction prop is not empty" time="0.003">
    </testcase>
    <testcase classname="Empty state should render tertiary action when tertiaryAction prop is not empty" name="Empty state should render tertiary action when tertiaryAction prop is not empty" time="0.003">
    </testcase>
    <testcase classname="Empty state should render no action when no action prop is provided" name="Empty state should render no action when no action prop is provided" time="0.001">
    </testcase>
    <testcase classname="Empty state should render image when imageUrl prop is not empty" name="Empty state should render image when imageUrl prop is not empty" time="0.002">
    </testcase>
    <testcase classname="Empty state should render description when description prop is not empty" name="Empty state should render description when description prop is not empty" time="0.001">
    </testcase>
    <testcase classname="Empty state should render spinner when isLoading prop is true" name="Empty state should render spinner when isLoading prop is true" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Badge" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:16" time="0.677" tests="11">
    <testcase classname="Badge value property should be visibly displayed" name="Badge value property should be visibly displayed" time="0.019">
    </testcase>
    <testcase classname="Badge value property should only accept positive numbers" name="Badge value property should only accept positive numbers" time="0.003">
    </testcase>
    <testcase classname="Badge value property should show Infinity as the ∞ character" name="Badge value property should show Infinity as the ∞ character" time="0.002">
    </testcase>
    <testcase classname="Badge value property should trigger onValueUpdated when value prop changed with a number" name="Badge value property should trigger onValueUpdated when value prop changed with a number" time="0.005">
    </testcase>
    <testcase classname="Badge max property should constrain to 99+ when not specified" name="Badge max property should constrain to 99+ when not specified" time="0.002">
    </testcase>
    <testcase classname="Badge max property should constrain the value when set" name="Badge max property should constrain the value when set" time="0.002">
    </testcase>
    <testcase classname="Badge max property should pass the value through when max === 0" name="Badge max property should pass the value through when max === 0" time="0.002">
    </testcase>
    <testcase classname="Badge max property should not constrain if equal to value" name="Badge max property should not constrain if equal to value" time="0.002">
    </testcase>
    <testcase classname="Badge appearance property should be &quot;default&quot; when not set" name="Badge appearance property should be &quot;default&quot; when not set" time="0.003">
    </testcase>
    <testcase classname="Badge appearance property should change when set to an approved value" name="Badge appearance property should change when set to an approved value" time="0.022">
    </testcase>
    <testcase classname="Badge appearance property should revert to &quot;default&quot; when set to an invalid value" name="Badge appearance property should revert to &quot;default&quot; when set to an invalid value" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="editorShowImage() reducer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:16" time="0.735" tests="4">
    <testcase classname="editorShowImage() reducer returns same state if action has different type" name="editorShowImage() reducer returns same state if action has different type" time="0.006">
    </testcase>
    <testcase classname="editorShowImage() reducer sets imageUrl and originalFile" name="editorShowImage() reducer sets imageUrl and originalFile" time="0.003">
    </testcase>
    <testcase classname="editorShowImage() reducer sets imageUrl and replaces originalFile if both provided" name="editorShowImage() reducer sets imageUrl and replaces originalFile if both provided" time="0.006">
    </testcase>
    <testcase classname="editorShowImage() reducer sets imageUrl and preserves originalFile if only imageUrl provided" name="editorShowImage() reducer sets imageUrl and preserves originalFile if only imageUrl provided" time="0">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-common/schema mediaSingle node" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:16" time="1.035" tests="5">
    <testcase classname="@atlaskit/editor-common/schema mediaSingle node parse html gets attributes from html" name="@atlaskit/editor-common/schema mediaSingle node parse html gets attributes from html" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema mediaSingle node parse html defaults to align center" name="@atlaskit/editor-common/schema mediaSingle node parse html defaults to align center" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema mediaSingle node parse html auto creates a media node inside mediaSingle node" name="@atlaskit/editor-common/schema mediaSingle node parse html auto creates a media node inside mediaSingle node" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema mediaSingle node encode node converts attributes to related data attribute in html" name="@atlaskit/editor-common/schema mediaSingle node encode node converts attributes to related data attribute in html" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/editor-common/schema mediaSingle node encodes and decodes to the same node" name="@atlaskit/editor-common/schema mediaSingle node encodes and decodes to the same node" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="MediaCollectionService" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:16" time="1.033" tests="3">
    <testcase classname="MediaCollectionService should have correct url" name="MediaCollectionService should have correct url" time="0.009">
    </testcase>
    <testcase classname="MediaCollectionService should have correct query parameters" name="MediaCollectionService should have correct query parameters" time="0.002">
    </testcase>
    <testcase classname="MediaCollectionService should have correct response" name="MediaCollectionService should have correct response" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="fixDoc" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:17" time="0.877" tests="6">
    <testcase classname="fixDoc should match case 1" name="fixDoc should match case 1" time="0.032">
    </testcase>
    <testcase classname="fixDoc should match case 3" name="fixDoc should match case 3" time="0.014">
    </testcase>
    <testcase classname="fixDoc should match case 3 - v2" name="fixDoc should match case 3 - v2" time="0.006">
    </testcase>
    <testcase classname="fixDoc should not match case 4" name="fixDoc should not match case 4" time="0.009">
    </testcase>
    <testcase classname="fixDoc should not match case 5" name="fixDoc should not match case 5" time="0.004">
    </testcase>
    <testcase classname="fixDoc should maintain the position of other nodes" name="fixDoc should maintain the position of other nodes" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="ak-progress-tracker/progress-tracker" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:18" time="0.855" tests="6">
    <testcase classname="ak-progress-tracker/progress-tracker should render the component" name="ak-progress-tracker/progress-tracker should render the component" time="0.038">
    </testcase>
    <testcase classname="ak-progress-tracker/progress-tracker should create default theme correctly" name="ak-progress-tracker/progress-tracker should create default theme correctly" time="0.005">
    </testcase>
    <testcase classname="ak-progress-tracker/progress-tracker should set initial transition" name="ak-progress-tracker/progress-tracker should set initial transition" time="0.015">
    </testcase>
    <testcase classname="ak-progress-tracker/progress-tracker should set backwards transition" name="ak-progress-tracker/progress-tracker should set backwards transition" time="0.005">
    </testcase>
    <testcase classname="ak-progress-tracker/progress-tracker should set multistep transition" name="ak-progress-tracker/progress-tracker should set multistep transition" time="0.014">
    </testcase>
    <testcase classname="ak-progress-tracker/progress-tracker should set single step transitions" name="ak-progress-tracker/progress-tracker should set single step transitions" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="unsupportedInline - React component" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:18" time="0.911" tests="2">
    <testcase classname="unsupportedInline - React component should return a node of type span" name="unsupportedInline - React component should return a node of type span" time="0.02">
    </testcase>
    <testcase classname="unsupportedInline - React component should have text content as string &quot;Unsupported content&quot;" name="unsupportedInline - React component should have text content as string &quot;Unsupported content&quot;" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="createChangesetCommit" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:19" time="0.863" tests="4">
    <testcase classname="createChangesetCommit should create a valid changeset commit message" name="createChangesetCommit should create a valid changeset commit message" time="0.004">
    </testcase>
    <testcase classname="createChangesetCommit should create commit messages without releaseNotes" name="createChangesetCommit should create commit messages without releaseNotes" time="0">
    </testcase>
    <testcase classname="createChangesetCommit should create commit messages without dependents" name="createChangesetCommit should create commit messages without dependents" time="0.001">
    </testcase>
    <testcase classname="createChangesetCommit should truncate the summary line to 100 characters" name="createChangesetCommit should truncate the summary line to 100 characters" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Root Wrapper" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:20" time="0.89" tests="7">
    <testcase classname="Root Wrapper File should render properly with default properties" name="Root Wrapper File should render properly with default properties" time="0.043">
    </testcase>
    <testcase classname="Root Wrapper File should render properly with passed dimensions" name="Root Wrapper File should render properly with passed dimensions" time="0.019">
    </testcase>
    <testcase classname="Root Wrapper File should render properly with different appeareances" name="Root Wrapper File should render properly with different appeareances" time="0.023">
    </testcase>
    <testcase classname="Root Wrapper File should apply breakpoint rules bassed on breakpointSize" name="Root Wrapper File should apply breakpoint rules bassed on breakpointSize" time="0.037">
    </testcase>
    <testcase classname="Root Wrapper Link should render properly with default properties" name="Root Wrapper Link should render properly with default properties" time="0.011">
    </testcase>
    <testcase classname="Root Wrapper Link should render properly with passed dimensions" name="Root Wrapper Link should render properly with passed dimensions" time="0.024">
    </testcase>
    <testcase classname="Root Wrapper Link should render properly with different appeareances" name="Root Wrapper Link should render properly with different appeareances" time="0.042">
    </testcase>
  </testsuite>
  <testsuite name="AnalyticsListener" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:21" time="0.647" tests="13">
    <testcase classname="AnalyticsListener should create a listener component" name="AnalyticsListener should create a listener component" time="0.005">
    </testcase>
    <testcase classname="AnalyticsListener should not create a component with multiple children" name="AnalyticsListener should not create a component with multiple children" time="0.003">
    </testcase>
    <testcase classname="AnalyticsListener should send public event" name="AnalyticsListener should send public event" time="0.011">
    </testcase>
    <testcase classname="AnalyticsListener should be nestable with other AnalyticsListeners" name="AnalyticsListener should be nestable with other AnalyticsListeners" time="0.009">
    </testcase>
    <testcase classname="AnalyticsListener should send private event when matchPrivate is true" name="AnalyticsListener should send private event when matchPrivate is true" time="0.004">
    </testcase>
    <testcase classname="AnalyticsListener should send private and public events when nested" name="AnalyticsListener should send private and public events when nested" time="0.005">
    </testcase>
    <testcase classname="AnalyticsListener should send event when partial string match is true" name="AnalyticsListener should send event when partial string match is true" time="0.004">
    </testcase>
    <testcase classname="AnalyticsListener should send event when full string match is true" name="AnalyticsListener should send event when full string match is true" time="0.005">
    </testcase>
    <testcase classname="AnalyticsListener should not send event when string match is false" name="AnalyticsListener should not send event when string match is false" time="0.004">
    </testcase>
    <testcase classname="AnalyticsListener should send event when regex match is true" name="AnalyticsListener should send event when regex match is true" time="0.004">
    </testcase>
    <testcase classname="AnalyticsListener should not send event when regex match is false" name="AnalyticsListener should not send event when regex match is false" time="0.005">
    </testcase>
    <testcase classname="AnalyticsListener should send event when function match is true" name="AnalyticsListener should send event when function match is true" time="0.003">
    </testcase>
    <testcase classname="AnalyticsListener should not send event when function match is false" name="AnalyticsListener should not send event when function match is false" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="MediaFileAttributes" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:17" time="4.82" tests="8">
    <testcase classname="MediaFileAttributes fromFileItem should return binary url given no artifacts" name="MediaFileAttributes fromFileItem should return binary url given no artifacts" time="0.007">
    </testcase>
    <testcase classname="MediaFileAttributes fromFileItem should return binary url given gif file" name="MediaFileAttributes fromFileItem should return binary url given gif file" time="0.007">
    </testcase>
    <testcase classname="MediaFileAttributes fromFileItem should return image url given jpg file" name="MediaFileAttributes fromFileItem should return image url given jpg file" time="0.006">
    </testcase>
    <testcase classname="MediaFileAttributes fromFileItem should return type video/mp4 given SD video" name="MediaFileAttributes fromFileItem should return type video/mp4 given SD video" time="0.015">
    </testcase>
    <testcase classname="MediaFileAttributes fromFileItem should return HD url and HD poster given HD artifacts exists" name="MediaFileAttributes fromFileItem should return HD url and HD poster given HD artifacts exists" time="0.013">
    </testcase>
    <testcase classname="MediaFileAttributes fromFileItem should handle artifacts with existent URL params" name="MediaFileAttributes fromFileItem should handle artifacts with existent URL params" time="0.003">
    </testcase>
    <testcase classname="MediaFileAttributes fromFileItem should return download url from binary" name="MediaFileAttributes fromFileItem should return download url from binary" time="0.001">
    </testcase>
    <testcase classname="MediaFileAttributes fromFileItem should handle files with no occurrenceKey" name="MediaFileAttributes fromFileItem should handle files with no occurrenceKey" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Marks/TextColor" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:21" time="1.092" tests="2">
    <testcase classname="Renderer - React/Marks/TextColor should wrap content with &lt;span&gt;-tag" name="Renderer - React/Marks/TextColor should wrap content with &lt;span&gt;-tag" time="0.001">
    </testcase>
    <testcase classname="Renderer - React/Marks/TextColor should output correct html" name="Renderer - React/Marks/TextColor should output correct html" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="ak-progress-tracker/progress-tracker-link" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:22" time="0.693" tests="2">
    <testcase classname="ak-progress-tracker/progress-tracker-link should render the component" name="ak-progress-tracker/progress-tracker-link should render the component" time="0.015">
    </testcase>
    <testcase classname="ak-progress-tracker/progress-tracker-link clicking visited link should trigger onClick" name="ak-progress-tracker/progress-tracker-link clicking visited link should trigger onClick" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="editRemoteImage" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:22" time="0.748" tests="2">
    <testcase classname="editRemoteImage should handle fetching failure" name="editRemoteImage should handle fetching failure" time="0.013">
    </testcase>
    <testcase classname="editRemoteImage should handle fetching success" name="editRemoteImage should handle fetching success" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Heading /&gt;" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:23" time="0.495" tests="6">
    <testcase classname="&lt;Heading /&gt; should wrap content with &lt;h1&gt;-tag" name="&lt;Heading /&gt; should wrap content with &lt;h1&gt;-tag" time="0">
    </testcase>
    <testcase classname="&lt;Heading /&gt; should wrap content with &lt;h2&gt;-tag" name="&lt;Heading /&gt; should wrap content with &lt;h2&gt;-tag" time="0.001">
    </testcase>
    <testcase classname="&lt;Heading /&gt; should wrap content with &lt;h3&gt;-tag" name="&lt;Heading /&gt; should wrap content with &lt;h3&gt;-tag" time="0">
    </testcase>
    <testcase classname="&lt;Heading /&gt; should wrap content with &lt;h4&gt;-tag" name="&lt;Heading /&gt; should wrap content with &lt;h4&gt;-tag" time="0">
    </testcase>
    <testcase classname="&lt;Heading /&gt; should wrap content with &lt;h5&gt;-tag" name="&lt;Heading /&gt; should wrap content with &lt;h5&gt;-tag" time="0">
    </testcase>
    <testcase classname="&lt;Heading /&gt; should wrap content with &lt;h6&gt;-tag" name="&lt;Heading /&gt; should wrap content with &lt;h6&gt;-tag" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Constraint Spec" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:23" time="0.606" tests="8">
    <testcase classname="Constraint Spec Position Constraint Unconstrained should return same coords when at origin position" name="Constraint Spec Position Constraint Unconstrained should return same coords when at origin position" time="0.002">
    </testcase>
    <testcase classname="Constraint Spec Position Constraint Unconstrained should return same coords when at middle position" name="Constraint Spec Position Constraint Unconstrained should return same coords when at middle position" time="0.002">
    </testcase>
    <testcase classname="Constraint Spec Position Constraint Unconstrained should return same coords when at corner position" name="Constraint Spec Position Constraint Unconstrained should return same coords when at corner position" time="0.001">
    </testcase>
    <testcase classname="Constraint Spec Position Constraint Constrained should return constrained coords when greater than origin position" name="Constraint Spec Position Constraint Constrained should return constrained coords when greater than origin position" time="0.001">
    </testcase>
    <testcase classname="Constraint Spec Position Constraint Constrained should return constrained coords when greater than corner position" name="Constraint Spec Position Constraint Constrained should return constrained coords when greater than corner position" time="0.001">
    </testcase>
    <testcase classname="Scale Constraint Unconstrained should return same scale when fully zoomed out" name="Scale Constraint Unconstrained should return same scale when fully zoomed out" time="0.001">
    </testcase>
    <testcase classname="Scale Constraint Unconstrained should return same scale when at min scale" name="Scale Constraint Unconstrained should return same scale when at min scale" time="0">
    </testcase>
    <testcase classname="Scale Constraint Constrained should return constrained scale when zoomed lower than min scale" name="Scale Constraint Constrained should return constrained scale when zoomed lower than min scale" time="0">
    </testcase>
  </testsuite>
  <testsuite name="LoadingContainer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:19" time="5.281" tests="6">
    <testcase classname="LoadingContainer should always wrap contents into the container with a relative position so absolute positioned elements inside the children behave consistently despite the loading mode" name="LoadingContainer should always wrap contents into the container with a relative position so absolute positioned elements inside the children behave consistently despite the loading mode" time="0.126">
    </testcase>
    <testcase classname="LoadingContainer when loading is disabled should render children as is right inside the container" name="LoadingContainer when loading is disabled should render children as is right inside the container" time="0.202">
    </testcase>
    <testcase classname="LoadingContainer when loading is disabled should not render the spinner container" name="LoadingContainer when loading is disabled should not render the spinner container" time="0.008">
    </testcase>
    <testcase classname="LoadingContainer when loading is enabled should render with a proper default values" name="LoadingContainer when loading is enabled should render with a proper default values" time="0.078">
    </testcase>
    <testcase classname="LoadingContainer when loading is enabled should wrap children into another container with a specified opacity" name="LoadingContainer when loading is enabled should wrap children into another container with a specified opacity" time="0.096">
    </testcase>
    <testcase classname="LoadingContainer when loading is enabled should render the spinner of a given size" name="LoadingContainer when loading is enabled should render the spinner of a given size" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="StandaloneApplicationCardView" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:24" time="0.864" tests="14">
    <testcase classname="StandaloneApplicationCardView should render a link when link is provided" name="StandaloneApplicationCardView should render a link when link is provided" time="0.016">
    </testcase>
    <testcase classname="StandaloneApplicationCardView should not render a link when link is not provided" name="StandaloneApplicationCardView should not render a link when link is not provided" time="0.002">
    </testcase>
    <testcase classname="StandaloneApplicationCardView should render text in the frame when context is provided" name="StandaloneApplicationCardView should render text in the frame when context is provided" time="0.001">
    </testcase>
    <testcase classname="StandaloneApplicationCardView should not render text in the frame when context is not provided" name="StandaloneApplicationCardView should not render text in the frame when context is not provided" time="0.001">
    </testcase>
    <testcase classname="StandaloneApplicationCardView should render icon URL in the frame when context is provided" name="StandaloneApplicationCardView should render icon URL in the frame when context is provided" time="0.001">
    </testcase>
    <testcase classname="StandaloneApplicationCardView should not render icon URL in the frame when context is not provided" name="StandaloneApplicationCardView should not render icon URL in the frame when context is not provided" time="0.001">
    </testcase>
    <testcase classname="StandaloneApplicationCardView it should render a preview when there is a preview" name="StandaloneApplicationCardView it should render a preview when there is a preview" time="0.004">
    </testcase>
    <testcase classname="StandaloneApplicationCardView it should not render a preview when there is no preview" name="StandaloneApplicationCardView it should not render a preview when there is no preview" time="0.001">
    </testcase>
    <testcase classname="StandaloneApplicationCardView it should not render a thumbnail when there is a preview" name="StandaloneApplicationCardView it should not render a thumbnail when there is a preview" time="0.001">
    </testcase>
    <testcase classname="StandaloneApplicationCardView it should not render a thumbnail when there is no preview" name="StandaloneApplicationCardView it should not render a thumbnail when there is no preview" time="0.001">
    </testcase>
    <testcase classname="StandaloneApplicationCardView should have a minWidth of 240 when there is a preview" name="StandaloneApplicationCardView should have a minWidth of 240 when there is a preview" time="0.001">
    </testcase>
    <testcase classname="StandaloneApplicationCardView should have a minWidth of 240 when there is no preview" name="StandaloneApplicationCardView should have a minWidth of 240 when there is no preview" time="0">
    </testcase>
    <testcase classname="StandaloneApplicationCardView should have a maxWidth of 400 when there is a preview" name="StandaloneApplicationCardView should have a maxWidth of 400 when there is a preview" time="0.001">
    </testcase>
    <testcase classname="StandaloneApplicationCardView should have a maxWidth of 664 when there is no preview" name="StandaloneApplicationCardView should have a maxWidth of 664 when there is no preview" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="editorShowLoading() reducer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:24" time="0.826" tests="3">
    <testcase classname="editorShowLoading() reducer returns same state if action has different type" name="editorShowLoading() reducer returns same state if action has different type" time="0.011">
    </testcase>
    <testcase classname="editorShowLoading() reducer sets the originalFile to the state" name="editorShowLoading() reducer sets the originalFile to the state" time="0.002">
    </testcase>
    <testcase classname="editorShowLoading() reducer replaces the original file with the new" name="editorShowLoading() reducer replaces the original file with the new" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Tag-group" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:24" time="0.656" tests="4">
    <testcase classname="Tag-group should export a base component" name="Tag-group should export a base component" time="0.004">
    </testcase>
    <testcase classname="Tag-group should render supplied tags" name="Tag-group should render supplied tags" time="0.042">
    </testcase>
    <testcase classname="Tag-group should justify to the start when alignment not set" name="Tag-group should justify to the start when alignment not set" time="0.013">
    </testcase>
    <testcase classname="Tag-group should justify to the end when alignment is set to end" name="Tag-group should justify to the end when alignment is set to end" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/HardBreak" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:25" time="0.449" tests="1">
    <testcase classname="Renderer - React/Nodes/HardBreak should render a &lt;br&gt;-tag" name="Renderer - React/Nodes/HardBreak should render a &lt;br&gt;-tag" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Logo component" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:25" time="0.471" tests="1">
    <testcase classname="Logo component should render an svg" name="Logo component should render an svg" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/RecentSearch/RecentList" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:25" time="0.564" tests="4">
    <testcase classname="@atlaskit/editor-core/ui/RecentSearch/RecentList should render the list when loaded" name="@atlaskit/editor-core/ui/RecentSearch/RecentList should render the list when loaded" time="0.03">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/RecentSearch/RecentList should render a spinner when loading" name="@atlaskit/editor-core/ui/RecentSearch/RecentList should render a spinner when loading" time="0.017">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/RecentSearch/RecentList should not render a spinner when not loading" name="@atlaskit/editor-core/ui/RecentSearch/RecentList should not render a spinner when not loading" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/RecentSearch/RecentList should select the item on selectedIndex" name="@atlaskit/editor-core/ui/RecentSearch/RecentList should select the item on selectedIndex" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/TableHeader" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:26" time="0.424" tests="1">
    <testcase classname="Renderer - React/Nodes/TableHeader should create a &lt;th&gt;-tag" name="Renderer - React/Nodes/TableHeader should create a &lt;th&gt;-tag" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Marks/Em" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:26" time="0.52" tests="2">
    <testcase classname="Renderer - React/Marks/Em should wrap content with &lt;em&gt;-tag" name="Renderer - React/Marks/Em should wrap content with &lt;em&gt;-tag" time="0.001">
    </testcase>
    <testcase classname="Renderer - React/Marks/Em should output correct html" name="Renderer - React/Marks/Em should output correct html" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Avatar Picker Styles" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:26" time="0.359" tests="2">
    <testcase classname="Avatar Picker Styles image-navigator DragZone is dropping file" name="Avatar Picker Styles image-navigator DragZone is dropping file" time="0.015">
    </testcase>
    <testcase classname="Avatar Picker Styles image-navigator DragZone is not dropping file" name="Avatar Picker Styles image-navigator DragZone is not dropping file" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/Panel" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:26" time="0.548" tests="8">
    <testcase classname="Renderer - React/Nodes/Panel info should wrap content with &lt;div&gt;-tag" name="Renderer - React/Nodes/Panel info should wrap content with &lt;div&gt;-tag" time="0.001">
    </testcase>
    <testcase classname="Renderer - React/Nodes/Panel info should have two children" name="Renderer - React/Nodes/Panel info should have two children" time="0.001">
    </testcase>
    <testcase classname="Renderer - React/Nodes/Panel note should wrap content with &lt;div&gt;-tag" name="Renderer - React/Nodes/Panel note should wrap content with &lt;div&gt;-tag" time="0">
    </testcase>
    <testcase classname="Renderer - React/Nodes/Panel note should have two children" name="Renderer - React/Nodes/Panel note should have two children" time="0.001">
    </testcase>
    <testcase classname="Renderer - React/Nodes/Panel tip should wrap content with &lt;div&gt;-tag" name="Renderer - React/Nodes/Panel tip should wrap content with &lt;div&gt;-tag" time="0">
    </testcase>
    <testcase classname="Renderer - React/Nodes/Panel tip should have two children" name="Renderer - React/Nodes/Panel tip should have two children" time="0.001">
    </testcase>
    <testcase classname="Renderer - React/Nodes/Panel warning should wrap content with &lt;div&gt;-tag" name="Renderer - React/Nodes/Panel warning should wrap content with &lt;div&gt;-tag" time="0">
    </testcase>
    <testcase classname="Renderer - React/Nodes/Panel warning should have two children" name="Renderer - React/Nodes/Panel warning should have two children" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:27" time="0.417" tests="5">
    <testcase classname=" should render the component" name=" should render the component" time="0.007">
    </testcase>
    <testcase classname=" should prevent default event actions on mouse down" name=" should prevent default event actions on mouse down" time="0.003">
    </testcase>
    <testcase classname=" should not call onClick prop when date is disabled" name=" should not call onClick prop when date is disabled" time="0.003">
    </testcase>
    <testcase classname=" should call onClick prop when date is enabled (default scenario)" name=" should call onClick prop when date is enabled (default scenario)" time="0.001">
    </testcase>
    <testcase classname=" DateDiv props" name=" DateDiv props" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/datetime-picker" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:27" time="0.404" tests="4">
    <testcase classname="@atlaskit/datetime-picker DateField should render an Input with a default placeholder" name="@atlaskit/datetime-picker DateField should render an Input with a default placeholder" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DateField should call onKeyDown and onTriggerOpen when the down arrow key is pressed" name="@atlaskit/datetime-picker DateField should call onKeyDown and onTriggerOpen when the down arrow key is pressed" time="0.002">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DateField should call onKeyDown and onTriggerValidate when the Enter key is pressed" name="@atlaskit/datetime-picker DateField should call onKeyDown and onTriggerValidate when the Enter key is pressed" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker DateField passing down props should pass autoFocus down to the underlying Input" name="@atlaskit/datetime-picker DateField passing down props should pass autoFocus down to the underlying Input" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="actions prop" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:25" time="2.614" tests="3">
    <testcase classname="actions prop actions should be rendered" name="actions prop actions should be rendered" time="0.056">
    </testcase>
    <testcase classname="actions prop action onClick should be triggered on click" name="actions prop action onClick should be triggered on click" time="0.021">
    </testcase>
    <testcase classname="actions prop should pass appearance value on to styled sub-components" name="actions prop should pass appearance value on to styled sub-components" time="0.069">
    </testcase>
  </testsuite>
  <testsuite name="cancelUpload" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:27" time="0.49" tests="3">
    <testcase classname="cancelUpload should cancel upload and remove proxy event given upload with one proxy" name="cancelUpload should cancel upload and remove proxy event given upload with one proxy" time="0.004">
    </testcase>
    <testcase classname="cancelUpload should not cancel upload and remove proxy event given upload with more than one proxy" name="cancelUpload should not cancel upload and remove proxy event given upload with more than one proxy" time="0.001">
    </testcase>
    <testcase classname="cancelUpload should not cancel upload and not remove proxy event given upload with no proxy" name="cancelUpload should not cancel upload and not remove proxy event given upload with no proxy" time="0">
    </testcase>
  </testsuite>
  <testsuite name="CardOverlay" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:27" time="0.458" tests="5">
    <testcase classname="CardOverlay should render the image preview when mediaType is &quot;video&quot;" name="CardOverlay should render the image preview when mediaType is &quot;video&quot;" time="0.006">
    </testcase>
    <testcase classname="CardOverlay should render the image preview when mediaType is &quot;audio&quot;" name="CardOverlay should render the image preview when mediaType is &quot;audio&quot;" time="0.001">
    </testcase>
    <testcase classname="CardOverlay should render the image preview when mediaType is &quot;image&quot;" name="CardOverlay should render the image preview when mediaType is &quot;image&quot;" time="0.001">
    </testcase>
    <testcase classname="CardOverlay should NOT render the image preview when mediaType is &quot;doc&quot;" name="CardOverlay should NOT render the image preview when mediaType is &quot;doc&quot;" time="0">
    </testcase>
    <testcase classname="CardOverlay should NOT render the image preview when data URI is undefined" name="CardOverlay should NOT render the image preview when data URI is undefined" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/Rule" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:28" time="0.464" tests="1">
    <testcase classname="Renderer - React/Nodes/Rule should create a &lt;hr&gt;-tag" name="Renderer - React/Nodes/Rule should create a &lt;hr&gt;-tag" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="fileUploadsAdd() reducer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:28" time="0.434" tests="4">
    <testcase classname="fileUploadsAdd() reducer returns same state if action has different type" name="fileUploadsAdd() reducer returns same state if action has different type" time="0.004">
    </testcase>
    <testcase classname="fileUploadsAdd() reducer should add new uploads items" name="fileUploadsAdd() reducer should add new uploads items" time="0.002">
    </testcase>
    <testcase classname="fileUploadsAdd() reducer should add new selected items" name="fileUploadsAdd() reducer should add new selected items" time="0.001">
    </testcase>
    <testcase classname="fileUploadsAdd() reducer should have new lastUploadIndex" name="fileUploadsAdd() reducer should have new lastUploadIndex" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="withAnalytics" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:28" time="0.5" tests="15">
    <testcase classname="withAnalytics should render the provided component" name="withAnalytics should render the provided component" time="0.003">
    </testcase>
    <testcase classname="withAnalytics should wrap the component in a WithAnalytics() component" name="withAnalytics should wrap the component in a WithAnalytics() component" time="0.001">
    </testcase>
    <testcase classname="withAnalytics wrapping callback props should call original callback props" name="withAnalytics wrapping callback props should call original callback props" time="0.002">
    </testcase>
    <testcase classname="withAnalytics wrapping callback props should fire analytics events" name="withAnalytics wrapping callback props should fire analytics events" time="0.006">
    </testcase>
    <testcase classname="withAnalytics wrapping callback props should fire analytics events when fireAnalyticsEvent is used directly" name="withAnalytics wrapping callback props should fire analytics events when fireAnalyticsEvent is used directly" time="0.004">
    </testcase>
    <testcase classname="withAnalytics wrapping callback props should pass eventData to analytics events" name="withAnalytics wrapping callback props should pass eventData to analytics events" time="0.003">
    </testcase>
    <testcase classname="withAnalytics wrapping callback props should use defaultProps for analyticsId and analyticsData" name="withAnalytics wrapping callback props should use defaultProps for analyticsId and analyticsData" time="0.004">
    </testcase>
    <testcase classname="withAnalytics wrapping callback props should override defaultProps with specified analyticsId and analyticsData" name="withAnalytics wrapping callback props should override defaultProps with specified analyticsId and analyticsData" time="0.003">
    </testcase>
    <testcase classname="withAnalytics wrapping callback props should not fire analytics if missing analyticsId" name="withAnalytics wrapping callback props should not fire analytics if missing analyticsId" time="0.004">
    </testcase>
    <testcase classname="withAnalytics withDelegation should not pass through callback when false" name="withAnalytics withDelegation should not pass through callback when false" time="0.007">
    </testcase>
    <testcase classname="withAnalytics withDelegation should pass through callback when true" name="withAnalytics withDelegation should pass through callback when true" time="0.004">
    </testcase>
    <testcase classname="withAnalytics withDelegation should pass through original public event (ignore analyticsId)" name="withAnalytics withDelegation should pass through original public event (ignore analyticsId)" time="0.004">
    </testcase>
    <testcase classname="withAnalytics withDelegation should pass through original private event (ignore analyticsId)" name="withAnalytics withDelegation should pass through original private event (ignore analyticsId)" time="0.005">
    </testcase>
    <testcase classname="withAnalytics integrated usage should fire analytics events" name="withAnalytics integrated usage should fire analytics events" time="0.003">
    </testcase>
    <testcase classname="withAnalytics integrated usage should fire private analytics events" name="withAnalytics integrated usage should fire private analytics events" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="template" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:28" time="0.333" tests="5">
    <testcase classname="template should generate template from a simple release object" name="template should generate template from a simple release object" time="0.003">
    </testcase>
    <testcase classname="template should generate template from a simple release object with release notes" name="template should generate template from a simple release object with release notes" time="0.001">
    </testcase>
    <testcase classname="template should generate template from a release object with multiple changesets" name="template should generate template from a release object with multiple changesets" time="0">
    </testcase>
    <testcase classname="template should generate template from a release with dependencies" name="template should generate template from a release with dependencies" time="0.006">
    </testcase>
    <testcase classname="template should generate full urls when given a repo url" name="template should generate full urls when given a repo url" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="MediaEditor Signal" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:28" time="0.431" tests="5">
    <testcase classname="MediaEditor Signal should successfully emit with no handler" name="MediaEditor Signal should successfully emit with no handler" time="0.001">
    </testcase>
    <testcase classname="MediaEditor Signal should successfully call reset with no handler" name="MediaEditor Signal should successfully call reset with no handler" time="0.001">
    </testcase>
    <testcase classname="MediaEditor Signal should successfully emit with handler" name="MediaEditor Signal should successfully emit with handler" time="0.002">
    </testcase>
    <testcase classname="MediaEditor Signal should not call handler after reset" name="MediaEditor Signal should not call handler after reset" time="0">
    </testcase>
    <testcase classname="MediaEditor Signal should call second handler after listen twice" name="MediaEditor Signal should call second handler after listen twice" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;StatelessAuth /&gt;" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:28" time="0.561" tests="3">
    <testcase classname="&lt;StatelessAuth /&gt; should call onStartAuth when button is clicked" name="&lt;StatelessAuth /&gt; should call onStartAuth when button is clicked" time="0.011">
    </testcase>
    <testcase classname="&lt;Auth /&gt; should deliver all required props to stateless component" name="&lt;Auth /&gt; should deliver all required props to stateless component" time="0.006">
    </testcase>
    <testcase classname="&lt;Auth /&gt; should call startAuth action when onStartAuth called" name="&lt;Auth /&gt; should call startAuth action when onStartAuth called" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="createPluginsList" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:29" time="0.444" tests="5">
    <testcase classname="createPluginsList should add helpDialogPlugin if allowHelpDialog is true" name="createPluginsList should add helpDialogPlugin if allowHelpDialog is true" time="0.006">
    </testcase>
    <testcase classname="createPluginsList should add placeholderCursorPlugin if allowPlaceholderCursor is true" name="createPluginsList should add placeholderCursorPlugin if allowPlaceholderCursor is true" time="0">
    </testcase>
    <testcase classname="createPluginsList should add tablePlugin if allowTables is true" name="createPluginsList should add tablePlugin if allowTables is true" time="0.001">
    </testcase>
    <testcase classname="createPluginsList should always add submitEditorPlugin to the editor" name="createPluginsList should always add submitEditorPlugin to the editor" time="0.001">
    </testcase>
    <testcase classname="createPluginsList should add mediaPlugin if media prop is provided" name="createPluginsList should add mediaPlugin if media prop is provided" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:29" time="0.383" tests="1">
    <testcase classname=" should call onUpdate with the iso value when a date is selected" name=" should call onUpdate with the iso value when a date is selected" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="mediaSingle - styled component" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:29" time="0.408" tests="10">
    <testcase classname="mediaSingle - styled component when align center should float none" name="mediaSingle - styled component when align center should float none" time="0.05">
    </testcase>
    <testcase classname="mediaSingle - styled component when align center should clear both" name="mediaSingle - styled component when align center should clear both" time="0.002">
    </testcase>
    <testcase classname="mediaSingle - styled component when wrap right should float none" name="mediaSingle - styled component when wrap right should float none" time="0.003">
    </testcase>
    <testcase classname="mediaSingle - styled component when wrap right should clear both" name="mediaSingle - styled component when wrap right should clear both" time="0.002">
    </testcase>
    <testcase classname="mediaSingle - styled component when wrap left should float none" name="mediaSingle - styled component when wrap left should float none" time="0.003">
    </testcase>
    <testcase classname="mediaSingle - styled component when wrap left should clear both" name="mediaSingle - styled component when wrap left should clear both" time="0.004">
    </testcase>
    <testcase classname="mediaSingle - styled component when wide should float none" name="mediaSingle - styled component when wide should float none" time="0.004">
    </testcase>
    <testcase classname="mediaSingle - styled component when wide should clear both" name="mediaSingle - styled component when wide should clear both" time="0.004">
    </testcase>
    <testcase classname="mediaSingle - styled component when full width should float none" name="mediaSingle - styled component when full width should float none" time="0.003">
    </testcase>
    <testcase classname="mediaSingle - styled component when full width should clear both" name="mediaSingle - styled component when full width should clear both" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/datetime-picker" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:29" time="0.449" tests="2">
    <testcase classname="@atlaskit/datetime-picker TimeDialogItem should render a Droplist Item" name="@atlaskit/datetime-picker TimeDialogItem should render a Droplist Item" time="0.007">
    </testcase>
    <testcase classname="@atlaskit/datetime-picker TimeDialogItem should call onSelect with the value when the Item is activated" name="@atlaskit/datetime-picker TimeDialogItem should call onSelect with the value when the Item is activated" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="getPreview helper method" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:29" time="0.461" tests="4">
    <testcase classname="getPreview helper method mediaType === &quot;image&quot; should return the img dimensions" name="getPreview helper method mediaType === &quot;image&quot; should return the img dimensions" time="0.004">
    </testcase>
    <testcase classname="getPreview helper method mediaType === &quot;image&quot; should return error if image failed to load" name="getPreview helper method mediaType === &quot;image&quot; should return error if image failed to load" time="0.002">
    </testcase>
    <testcase classname="getPreview helper method mediaType === &quot;image&quot; should return dimensions in addition to src" name="getPreview helper method mediaType === &quot;image&quot; should return dimensions in addition to src" time="0.002">
    </testcase>
    <testcase classname="getPreview helper method mediaType !== &quot;image&quot; should not return preview for non images" name="getPreview helper method mediaType !== &quot;image&quot; should not return preview for non images" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Marks/Strike" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:30" time="0.438" tests="2">
    <testcase classname="Renderer - React/Marks/Strike should wrap content with &lt;span&gt;-tag" name="Renderer - React/Marks/Strike should wrap content with &lt;span&gt;-tag" time="0.001">
    </testcase>
    <testcase classname="Renderer - React/Marks/Strike should output correct html" name="Renderer - React/Marks/Strike should output correct html" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Marks/Underline" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:30" time="0.43" tests="2">
    <testcase classname="Renderer - React/Marks/Underline should wrap content with &lt;u&gt;-tag" name="Renderer - React/Marks/Underline should wrap content with &lt;u&gt;-tag" time="0.001">
    </testcase>
    <testcase classname="Renderer - React/Marks/Underline should output correct html" name="Renderer - React/Marks/Underline should output correct html" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getUrlParameter helper method" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:30" time="0.46" tests="2">
    <testcase classname="getUrlParameter helper method returns value if parameter exists in url" name="getUrlParameter helper method returns value if parameter exists in url" time="0.001">
    </testcase>
    <testcase classname="getUrlParameter helper method returns undefined if parameter does not exist" name="getUrlParameter helper method returns undefined if parameter does not exist" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="paste util" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:30" time="0.373" tests="2">
    <testcase classname="paste util should return true for single line of text" name="paste util should return true for single line of text" time="0.001">
    </testcase>
    <testcase classname="paste util should return false for multiple lines of text" name="paste util should return false for multiple lines of text" time="0">
    </testcase>
  </testsuite>
  <testsuite name="editorClose() reducer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:30" time="0.405" tests="2">
    <testcase classname="editorClose() reducer returns same state if action has different type" name="editorClose() reducer returns same state if action has different type" time="0.001">
    </testcase>
    <testcase classname="editorClose() reducer sets editorData to null in the state" name="editorClose() reducer sets editorData to null in the state" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Promises" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:30" time="0.399" tests="5">
    <testcase classname="Promises retry should be fulfilled given 0 errors and 0 retries" name="Promises retry should be fulfilled given 0 errors and 0 retries" time="0.002">
    </testcase>
    <testcase classname="Promises retry should be rejected given 1 error and 0 retries" name="Promises retry should be rejected given 1 error and 0 retries" time="0.004">
    </testcase>
    <testcase classname="Promises retry should be fulfilled given 1 error and 5 retries" name="Promises retry should be fulfilled given 1 error and 5 retries" time="0.002">
    </testcase>
    <testcase classname="Promises retry should be fulfilled given 5 errors and 5 retries" name="Promises retry should be fulfilled given 5 errors and 5 retries" time="0.013">
    </testcase>
    <testcase classname="Promises retry should be rejected given 6 errors and 5 retries" name="Promises retry should be rejected given 6 errors and 5 retries" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="withAppearance" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:30" time="0.463" tests="1">
    <testcase classname="withAppearance Should return only" name="withAppearance Should return only" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="mediaCollectionProviderFromPool()" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:31" time="0.41" tests="5">
    <testcase classname="mediaCollectionProviderFromPool() should create a provider when called once" name="mediaCollectionProviderFromPool() should create a provider when called once" time="0.004">
    </testcase>
    <testcase classname="mediaCollectionProviderFromPool() should create one provider when called twice with the same ID" name="mediaCollectionProviderFromPool() should create one provider when called twice with the same ID" time="0.001">
    </testcase>
    <testcase classname="mediaCollectionProviderFromPool() should create one provider when called twice with the same ID and subscribed" name="mediaCollectionProviderFromPool() should create one provider when called twice with the same ID and subscribed" time="0.003">
    </testcase>
    <testcase classname="mediaCollectionProviderFromPool() should create two different providers when called twice with different IDs" name="mediaCollectionProviderFromPool() should create two different providers when called twice with different IDs" time="0.002">
    </testcase>
    <testcase classname="mediaCollectionProviderFromPool() should create two providers when called twice with the same ID but the first provider has been released" name="mediaCollectionProviderFromPool() should create two providers when called twice with the same ID but the first provider has been released" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Lozenge" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:31" time="0.5" tests="5">
    <testcase classname="Lozenge isBold property should not be the default" name="Lozenge isBold property should not be the default" time="0.016">
    </testcase>
    <testcase classname="Lozenge isBold property should change when toggled" name="Lozenge isBold property should change when toggled" time="0.007">
    </testcase>
    <testcase classname="Lozenge appearance property should be &quot;default&quot; when not set" name="Lozenge appearance property should be &quot;default&quot; when not set" time="0.006">
    </testcase>
    <testcase classname="Lozenge appearance property should change when set to an approved value" name="Lozenge appearance property should change when set to an approved value" time="0.033">
    </testcase>
    <testcase classname="Lozenge appearance property should revert to &quot;default&quot; when set to an invalid value" name="Lozenge appearance property should revert to &quot;default&quot; when set to an invalid value" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/Paragraph" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:31" time="0.427" tests="1">
    <testcase classname="Renderer - React/Nodes/Paragraph should wrap content with &lt;p&gt;-tag" name="Renderer - React/Nodes/Paragraph should wrap content with &lt;p&gt;-tag" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="removeEventProxy reducer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:31" time="0.454" tests="2">
    <testcase classname="removeEventProxy reducer returns same state if action have wrong type" name="removeEventProxy reducer returns same state if action have wrong type" time="0.001">
    </testcase>
    <testcase classname="removeEventProxy reducer returns same state if uploadId is not found" name="removeEventProxy reducer returns same state if uploadId is not found" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/PanelTextInput" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:31" time="0.477" tests="5">
    <testcase classname="@atlaskit/editor-core/ui/PanelTextInput should call onSubmit when ENTER key is pressed" name="@atlaskit/editor-core/ui/PanelTextInput should call onSubmit when ENTER key is pressed" time="0.021">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/PanelTextInput should prevent KeyDown event if ENTER key is pressed" name="@atlaskit/editor-core/ui/PanelTextInput should prevent KeyDown event if ENTER key is pressed" time="0.005">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/PanelTextInput should not prevent KeyDown event if any other key is pressed" name="@atlaskit/editor-core/ui/PanelTextInput should not prevent KeyDown event if any other key is pressed" time="0.004">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/PanelTextInput should call onCancel when ESC key is pressed" name="@atlaskit/editor-core/ui/PanelTextInput should call onCancel when ESC key is pressed" time="0.006">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/PanelTextInput should call onKeyDown when a key is pressed" name="@atlaskit/editor-core/ui/PanelTextInput should call onKeyDown when a key is pressed" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="SimpleHasher" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:31" time="0.421" tests="1">
    <testcase classname="SimpleHasher should calculate hash of chunk and call preprocessFinished()" name="SimpleHasher should calculate hash of chunk and call preprocessFinished()" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="MediaDataUriService" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:32" time="0.369" tests="4">
    <testcase classname="MediaDataUriService fetchImageDataUri() should allow animation by default" name="MediaDataUriService fetchImageDataUri() should allow animation by default" time="0.001">
    </testcase>
    <testcase classname="MediaDataUriService fetchImageDataUri() should allow consumers to disallow animation" name="MediaDataUriService fetchImageDataUri() should allow consumers to disallow animation" time="0.001">
    </testcase>
    <testcase classname="MediaDataUriService fetchImageDataUri() should use &quot;crop&quot; resize mode as default" name="MediaDataUriService fetchImageDataUri() should use &quot;crop&quot; resize mode as default" time="0">
    </testcase>
    <testcase classname="MediaDataUriService fetchImageDataUri() should allow consumers to specify a resize mode" name="MediaDataUriService fetchImageDataUri() should allow consumers to specify a resize mode" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Avatar" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:32" time="0.362" tests="5">
    <testcase classname="Avatar Presence when presence is busy should render content" name="Avatar Presence when presence is busy should render content" time="0.003">
    </testcase>
    <testcase classname="Avatar Presence when presence is focus should render content" name="Avatar Presence when presence is focus should render content" time="0.002">
    </testcase>
    <testcase classname="Avatar Presence when presence is offline should render content" name="Avatar Presence when presence is offline should render content" time="0.001">
    </testcase>
    <testcase classname="Avatar Presence when presence is online should render content" name="Avatar Presence when presence is online should render content" time="0.001">
    </testcase>
    <testcase classname="Avatar Presence should render children if provided" name="Avatar Presence should render children if provided" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="MediaEditor Util" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:32" time="0.457" tests="20">
    <testcase classname="MediaEditor Util getUtf32Codes should return empty array when the text is empty" name="MediaEditor Util getUtf32Codes should return empty array when the text is empty" time="0.002">
    </testcase>
    <testcase classname="MediaEditor Util getUtf32Codes should return one code for one 2-byte character" name="MediaEditor Util getUtf32Codes should return one code for one 2-byte character" time="0.002">
    </testcase>
    <testcase classname="MediaEditor Util getUtf32Codes should return two codes for two 2-byte characters" name="MediaEditor Util getUtf32Codes should return two codes for two 2-byte characters" time="0.001">
    </testcase>
    <testcase classname="MediaEditor Util getUtf32Codes should return one code for a surrogate pair" name="MediaEditor Util getUtf32Codes should return one code for a surrogate pair" time="0">
    </testcase>
    <testcase classname="MediaEditor Util getUtf32Codes should return correct codes for a string with surrogate pairs" name="MediaEditor Util getUtf32Codes should return correct codes for a string with surrogate pairs" time="0.001">
    </testcase>
    <testcase classname="MediaEditor Util getUtf32CodeUnits should return empty array when the text is empty" name="MediaEditor Util getUtf32CodeUnits should return empty array when the text is empty" time="0.001">
    </testcase>
    <testcase classname="MediaEditor Util getUtf32CodeUnits should return one character for one 2-byte character" name="MediaEditor Util getUtf32CodeUnits should return one character for one 2-byte character" time="0.001">
    </testcase>
    <testcase classname="MediaEditor Util getUtf32CodeUnits should return two characters for two 2-byte characters" name="MediaEditor Util getUtf32CodeUnits should return two characters for two 2-byte characters" time="0.001">
    </testcase>
    <testcase classname="MediaEditor Util getUtf32CodeUnits should return one character for a surrogate pair" name="MediaEditor Util getUtf32CodeUnits should return one character for a surrogate pair" time="0">
    </testcase>
    <testcase classname="MediaEditor Util getUtf32CodeUnits should return correct characters for a string with surrogate pairs" name="MediaEditor Util getUtf32CodeUnits should return correct characters for a string with surrogate pairs" time="0.001">
    </testcase>
    <testcase classname="MediaEditor Util adjustSize should do nothing if the array is empty and the required size is 0" name="MediaEditor Util adjustSize should do nothing if the array is empty and the required size is 0" time="0">
    </testcase>
    <testcase classname="MediaEditor Util adjustSize should do nothing if the array already has the required size" name="MediaEditor Util adjustSize should do nothing if the array already has the required size" time="0.001">
    </testcase>
    <testcase classname="MediaEditor Util adjustSize should add 1 element to empty" name="MediaEditor Util adjustSize should add 1 element to empty" time="0.001">
    </testcase>
    <testcase classname="MediaEditor Util adjustSize should add 3 elements to empty" name="MediaEditor Util adjustSize should add 3 elements to empty" time="0.001">
    </testcase>
    <testcase classname="MediaEditor Util adjustSize should add 1 element to not empty" name="MediaEditor Util adjustSize should add 1 element to not empty" time="0.001">
    </testcase>
    <testcase classname="MediaEditor Util adjustSize should add 3 elements to not empty" name="MediaEditor Util adjustSize should add 3 elements to not empty" time="0.003">
    </testcase>
    <testcase classname="MediaEditor Util adjustSize should make 1 element array empty" name="MediaEditor Util adjustSize should make 1 element array empty" time="0.003">
    </testcase>
    <testcase classname="MediaEditor Util adjustSize should make 5 element array empty" name="MediaEditor Util adjustSize should make 5 element array empty" time="0.001">
    </testcase>
    <testcase classname="MediaEditor Util adjustSize should remove 1 element" name="MediaEditor Util adjustSize should remove 1 element" time="0.001">
    </testcase>
    <testcase classname="MediaEditor Util adjustSize should remove 3 elements" name="MediaEditor Util adjustSize should remove 3 elements" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/editor-core/ui/LanguagePicker/languageList" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:32" time="0.406" tests="7">
    <testcase classname="@atlaskit/editor-core/ui/LanguagePicker/languageList findMatchedLanguage when language is in the list when case is not match returns matched language" name="@atlaskit/editor-core/ui/LanguagePicker/languageList findMatchedLanguage when language is in the list when case is not match returns matched language" time="0.003">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/LanguagePicker/languageList findMatchedLanguage when language is in the list when case is match returns matched language" name="@atlaskit/editor-core/ui/LanguagePicker/languageList findMatchedLanguage when language is in the list when case is match returns matched language" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/LanguagePicker/languageList findMatchedLanguage when language is found in alias returns the name of the language" name="@atlaskit/editor-core/ui/LanguagePicker/languageList findMatchedLanguage when language is found in alias returns the name of the language" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/LanguagePicker/languageList findMatchedLanguage when language is not in the list returns undefined" name="@atlaskit/editor-core/ui/LanguagePicker/languageList findMatchedLanguage when language is not in the list returns undefined" time="0">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/LanguagePicker/languageList findMatchedLanguage when language is null returns undefined" name="@atlaskit/editor-core/ui/LanguagePicker/languageList findMatchedLanguage when language is null returns undefined" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/LanguagePicker/languageList createLanguageList returns a sorted language list" name="@atlaskit/editor-core/ui/LanguagePicker/languageList createLanguageList returns a sorted language list" time="0.001">
    </testcase>
    <testcase classname="@atlaskit/editor-core/ui/LanguagePicker/languageList getLanguageIdentifier should use the first alias entry as the id for the language" name="@atlaskit/editor-core/ui/LanguagePicker/languageList getLanguageIdentifier should use the first alias entry as the id for the language" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="analytics service" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:32" time="0.426" tests="3">
    <testcase classname="analytics service auto-detects Herment" name="analytics service auto-detects Herment" time="0.002">
    </testcase>
    <testcase classname="analytics service allows setting the handler" name="analytics service allows setting the handler" time="0.001">
    </testcase>
    <testcase classname="analytics service allows removing the handler" name="analytics service allows removing the handler" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="MediaEditor DrawingArea" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:32" time="0.448" tests="3">
    <testcase classname="MediaEditor DrawingArea should return passed parameters" name="MediaEditor DrawingArea should return passed parameters" time="0.044">
    </testcase>
    <testcase classname="MediaEditor DrawingArea should provide resize event" name="MediaEditor DrawingArea should provide resize event" time="0.002">
    </testcase>
    <testcase classname="MediaEditor DrawingArea should trigger resize event on setSize" name="MediaEditor DrawingArea should trigger resize event on setSize" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="fileListUpdate() reducer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:32" time="0.473" tests="4">
    <testcase classname="fileListUpdate() reducer adding items to state for current folder" name="fileListUpdate() reducer adding items to state for current folder" time="0.004">
    </testcase>
    <testcase classname="fileListUpdate() reducer does nothing if results came for the wrong folder" name="fileListUpdate() reducer does nothing if results came for the wrong folder" time="0">
    </testcase>
    <testcase classname="fileListUpdate() reducer does nothing if results came for the wrong accountId" name="fileListUpdate() reducer does nothing if results came for the wrong accountId" time="0.001">
    </testcase>
    <testcase classname="fileListUpdate() reducer does nothing if action have different type" name="fileListUpdate() reducer does nothing if action have different type" time="0">
    </testcase>
  </testsuite>
  <testsuite name="#objectToQueryString" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:33" time="0.455" tests="2">
    <testcase classname="#objectToQueryString should convert simple object" name="#objectToQueryString should convert simple object" time="0.002">
    </testcase>
    <testcase classname="#objectToQueryString should convert complex object" name="#objectToQueryString should convert complex object" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="getShortDayName(index)" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:33" time="0.395" tests="27">
    <testcase classname="getShortDayName(index) case: 1" name="getShortDayName(index) case: 1" time="0.001">
    </testcase>
    <testcase classname="getShortDayName(index) case: 2" name="getShortDayName(index) case: 2" time="0.001">
    </testcase>
    <testcase classname="getShortDayName(index) case: 3" name="getShortDayName(index) case: 3" time="0.001">
    </testcase>
    <testcase classname="getShortDayName(index) case: 4" name="getShortDayName(index) case: 4" time="0">
    </testcase>
    <testcase classname="getShortDayName(index) case: 5" name="getShortDayName(index) case: 5" time="0.001">
    </testcase>
    <testcase classname="getShortDayName(index) case: 6" name="getShortDayName(index) case: 6" time="0.001">
    </testcase>
    <testcase classname="getShortDayName(index) case: 7" name="getShortDayName(index) case: 7" time="0.001">
    </testcase>
    <testcase classname="getMonthName(index) case: 1" name="getMonthName(index) case: 1" time="0">
    </testcase>
    <testcase classname="getMonthName(index) case: 2" name="getMonthName(index) case: 2" time="0.001">
    </testcase>
    <testcase classname="getMonthName(index) case: 3" name="getMonthName(index) case: 3" time="0">
    </testcase>
    <testcase classname="getMonthName(index) case: 4" name="getMonthName(index) case: 4" time="0.001">
    </testcase>
    <testcase classname="getMonthName(index) case: 5" name="getMonthName(index) case: 5" time="0">
    </testcase>
    <testcase classname="getMonthName(index) case: 6" name="getMonthName(index) case: 6" time="0.001">
    </testcase>
    <testcase classname="getMonthName(index) case: 7" name="getMonthName(index) case: 7" time="0">
    </testcase>
    <testcase classname="getMonthName(index) case: 8" name="getMonthName(index) case: 8" time="0.001">
    </testcase>
    <testcase classname="getMonthName(index) case: 9" name="getMonthName(index) case: 9" time="0">
    </testcase>
    <testcase classname="getMonthName(index) case: 10" name="getMonthName(index) case: 10" time="0.001">
    </testcase>
    <testcase classname="getMonthName(index) case: 11" name="getMonthName(index) case: 11" time="0">
    </testcase>
    <testcase classname="getMonthName(index) case: 12" name="getMonthName(index) case: 12" time="0.001">
    </testcase>
    <testcase classname="getMonthName(index) case: 13" name="getMonthName(index) case: 13" time="0">
    </testcase>
    <testcase classname="dateToString(date) case: 1" name="dateToString(date) case: 1" time="0.001">
    </testcase>
    <testcase classname="dateToString(date) case: 2" name="dateToString(date) case: 2" time="0">
    </testcase>
    <testcase classname="dateToString(date, { fixMonth: true }) case: 1" name="dateToString(date, { fixMonth: true }) case: 1" time="0.001">
    </testcase>
    <testcase classname="dateToString(date, { fixMonth: true }) case: 2" name="dateToString(date, { fixMonth: true }) case: 2" time="0">
    </testcase>
    <testcase classname="makeArrayFromNumber case: 1" name="makeArrayFromNumber case: 1" time="0.001">
    </testcase>
    <testcase classname="makeArrayFromNumber case: 2" name="makeArrayFromNumber case: 2" time="0.001">
    </testcase>
    <testcase classname="makeArrayFromNumber case: 3" name="makeArrayFromNumber case: 3" time="0">
    </testcase>
  </testsuite>
  <testsuite name="MediaEditor TimerFactory" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:33" time="0.47" tests="8">
    <testcase classname="MediaEditor TimerFactory should returns different ids for createTimer" name="MediaEditor TimerFactory should returns different ids for createTimer" time="0.004">
    </testcase>
    <testcase classname="MediaEditor TimerFactory should not start timer after createTimer" name="MediaEditor TimerFactory should not start timer after createTimer" time="0.001">
    </testcase>
    <testcase classname="MediaEditor TimerFactory should trigger ticks after timer starts" name="MediaEditor TimerFactory should trigger ticks after timer starts" time="0.001">
    </testcase>
    <testcase classname="MediaEditor TimerFactory should trigger ticks for correct timer" name="MediaEditor TimerFactory should trigger ticks for correct timer" time="0.002">
    </testcase>
    <testcase classname="MediaEditor TimerFactory should ignore stop for not started" name="MediaEditor TimerFactory should ignore stop for not started" time="0">
    </testcase>
    <testcase classname="MediaEditor TimerFactory should ignore stop for invalid id" name="MediaEditor TimerFactory should ignore stop for invalid id" time="0.001">
    </testcase>
    <testcase classname="MediaEditor TimerFactory should safely handle double stop" name="MediaEditor TimerFactory should safely handle double stop" time="0.001">
    </testcase>
    <testcase classname="MediaEditor TimerFactory should delete active timers at unload" name="MediaEditor TimerFactory should delete active timers at unload" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Context" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:33" time="0.527" tests="5">
    <testcase classname="Context .getMediaItemProvider() should return different mediaItemProviders for different fileIds" name="Context .getMediaItemProvider() should return different mediaItemProviders for different fileIds" time="0.002">
    </testcase>
    <testcase classname="Context .getMediaItemProvider() should return media item when a link media item is passed in" name="Context .getMediaItemProvider() should return media item when a link media item is passed in" time="0.003">
    </testcase>
    <testcase classname="Context .getMediaItemProvider() should return media item when a file media item is passed in and the media item processingStatus is not pending" name="Context .getMediaItemProvider() should return media item when a file media item is passed in and the media item processingStatus is not pending" time="0.001">
    </testcase>
    <testcase classname="Context .getMediaItemProvider() should return media item and then fetch media item when a file media item is passed in and the processingStatus is pending" name="Context .getMediaItemProvider() should return media item and then fetch media item when a file media item is passed in and the processingStatus is pending" time="0.003">
    </testcase>
    <testcase classname="Context .getMediaItemProvider() should fetch media item when no media item is passed in" name="Context .getMediaItemProvider() should fetch media item when no media item is passed in" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="editorShowImage action creator" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:33" time="0.429" tests="1">
    <testcase classname="editorShowImage action creator should create action with both imageUrl and originalFile if all parameters specified" name="editorShowImage action creator should create action with both imageUrl and originalFile if all parameters specified" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Layer" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:33" time="0.385" tests="4">
    <testcase classname="Layer helpers getFlipBehavior with autoFlip = true, returns null" name="Layer helpers getFlipBehavior with autoFlip = true, returns null" time="0.002">
    </testcase>
    <testcase classname="Layer helpers getFlipBehavior with autoFlip = false, returns null" name="Layer helpers getFlipBehavior with autoFlip = false, returns null" time="0.001">
    </testcase>
    <testcase classname="Layer helpers getFlipBehavior with single value in array" name="Layer helpers getFlipBehavior with single value in array" time="0.001">
    </testcase>
    <testcase classname="Layer helpers getFlipBehavior with multiple values in array" name="Layer helpers getFlipBehavior with multiple values in array" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getPropertyAppearance" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:34" time="0.367" tests="8">
    <testcase classname="getPropertyAppearance should return &apos;initial&apos; if the property is not defined." name="getPropertyAppearance should return &apos;initial&apos; if the property is not defined." time="0.002">
    </testcase>
    <testcase classname="getPropertyAppearance should return the fallback value if there is no default value." name="getPropertyAppearance should return the fallback value if there is no default value." time="0.001">
    </testcase>
    <testcase classname="getPropertyAppearance should use the default appearance if the appearance is not defined." name="getPropertyAppearance should use the default appearance if the appearance is not defined." time="0.001">
    </testcase>
    <testcase classname="getPropertyAppearance should return the &apos;hover&apos; value when in the hover state." name="getPropertyAppearance should return the &apos;hover&apos; value when in the hover state." time="0">
    </testcase>
    <testcase classname="getPropertyAppearance should prioritise &apos;active&apos; state over &apos;hover&apos; state." name="getPropertyAppearance should prioritise &apos;active&apos; state over &apos;hover&apos; state." time="0.001">
    </testcase>
    <testcase classname="getPropertyAppearance should prioritise &apos;selected&apos; state over &apos;active&apos; and &apos;hover&apos; states." name="getPropertyAppearance should prioritise &apos;selected&apos; state over &apos;active&apos; and &apos;hover&apos; states." time="0.001">
    </testcase>
    <testcase classname="getPropertyAppearance should prioritise &apos;disabled&apos; state over all other states." name="getPropertyAppearance should prioritise &apos;disabled&apos; state over all other states." time="0">
    </testcase>
    <testcase classname="getPropertyAppearance should use the default value if the state value is not defined." name="getPropertyAppearance should use the default value if the state value is not defined." time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Selectors" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:34" time="0.437" tests="4">
    <testcase classname="Selectors getConversation should return conversation by conversationId" name="Selectors getConversation should return conversation by conversationId" time="0.003">
    </testcase>
    <testcase classname="Selectors getConversation should return conversation by localId" name="Selectors getConversation should return conversation by localId" time="0">
    </testcase>
    <testcase classname="Selectors getComments should return all comments directly under conversation" name="Selectors getComments should return all comments directly under conversation" time="0.001">
    </testcase>
    <testcase classname="Selectors getComments should return all comments directly under parentId" name="Selectors getComments should return all comments directly under parentId" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Renderer - React/Nodes/ListItem" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:34" time="0.452" tests="1">
    <testcase classname="Renderer - React/Nodes/ListItem should wrap content with &lt;li&gt;-tag" name="Renderer - React/Nodes/ListItem should wrap content with &lt;li&gt;-tag" time="0">
    </testcase>
  </testsuite>
  <testsuite name="IconForType component" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:34" time="0.455" tests="5">
    <testcase classname="IconForType component props type connectivity type produces connectivity icon" name="IconForType component props type connectivity type produces connectivity icon" time="0.005">
    </testcase>
    <testcase classname="IconForType component props type confirmation type produces confirmation icon" name="IconForType component props type confirmation type produces confirmation icon" time="0.002">
    </testcase>
    <testcase classname="IconForType component props type info type produces info icon" name="IconForType component props type info type produces info icon" time="0.001">
    </testcase>
    <testcase classname="IconForType component props type warning type produces warning icon" name="IconForType component props type warning type produces warning icon" time="0.004">
    </testcase>
    <testcase classname="IconForType component props type error type produces error icon" name="IconForType component props type error type produces error icon" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="isUploading()" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:34" time="0.399" tests="8">
    <testcase classname="isUploading() should return true for a START_IMPORT action" name="isUploading() should return true for a START_IMPORT action" time="0.001">
    </testcase>
    <testcase classname="isUploading() should return false for a RESET_VIEW action" name="isUploading() should return false for a RESET_VIEW action" time="0.001">
    </testcase>
    <testcase classname="isUploading() should return false for all other actions when the previous state was false" name="isUploading() should return false for all other actions when the previous state was false" time="0">
    </testcase>
    <testcase classname="isUploading() should return true for all other actions when the previous state was true" name="isUploading() should return true for all other actions when the previous state was true" time="0">
    </testcase>
    <testcase classname="isCancelling() should return true for a HIDE_POPUP action" name="isCancelling() should return true for a HIDE_POPUP action" time="0.001">
    </testcase>
    <testcase classname="isCancelling() should return false for a RESET_VIEW action" name="isCancelling() should return false for a RESET_VIEW action" time="0">
    </testcase>
    <testcase classname="isCancelling() should return false for all other actions when the previous state was false" name="isCancelling() should return false for all other actions when the previous state was false" time="0">
    </testcase>
    <testcase classname="isCancelling() should return true for all other actions when the previous state was true" name="isCancelling() should return true for all other actions when the previous state was true" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="RemoteUploadActivity" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:34" time="0.445" tests="8">
    <testcase classname="RemoteUploadActivity should skip event that has no type" name="RemoteUploadActivity should skip event that has no type" time="0.003">
    </testcase>
    <testcase classname="RemoteUploadActivity should skip event that has no uploadId but known type" name="RemoteUploadActivity should skip event that has no uploadId but known type" time="0.001">
    </testcase>
    <testcase classname="RemoteUploadActivity should dispatch RemoteUploadStart event" name="RemoteUploadActivity should dispatch RemoteUploadStart event" time="0.001">
    </testcase>
    <testcase classname="RemoteUploadActivity should dispatch RemoteUploadProgress event" name="RemoteUploadActivity should dispatch RemoteUploadProgress event" time="0.002">
    </testcase>
    <testcase classname="RemoteUploadActivity should dispatch RemoteUploadEnd event and complete activity" name="RemoteUploadActivity should dispatch RemoteUploadEnd event and complete activity" time="0.002">
    </testcase>
    <testcase classname="RemoteUploadActivity should dispatch RemoteUploadFail event and complete activity" name="RemoteUploadActivity should dispatch RemoteUploadFail event and complete activity" time="0.002">
    </testcase>
    <testcase classname="RemoteUploadActivity should dispatch RemoteUploadFail event and complete activity with alternative response shape" name="RemoteUploadActivity should dispatch RemoteUploadFail event and complete activity with alternative response shape" time="0.002">
    </testcase>
    <testcase classname="RemoteUploadActivity should not dispatch known event for another uploadId" name="RemoteUploadActivity should not dispatch known event for another uploadId" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getPreviewMiddleware" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:35" time="0.405" tests="3">
    <testcase classname="getPreviewMiddleware should do nothing given unknown action" name="getPreviewMiddleware should do nothing given unknown action" time="0.003">
    </testcase>
    <testcase classname="getPreviewMiddleware should dispatch send upload event action with upload-preview-update event" name="getPreviewMiddleware should dispatch send upload event action with upload-preview-update event" time="0.001">
    </testcase>
    <testcase classname="getPreviewMiddleware should get preview from fetcher" name="getPreviewMiddleware should get preview from fetcher" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Iframe" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:35" time="0.318" tests="2">
    <testcase classname="Iframe should be hidden when loading" name="Iframe should be hidden when loading" time="0.009">
    </testcase>
    <testcase classname="Iframe should be visible when loaded" name="Iframe should be visible when loaded" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="pathsEqual() helper method" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:35" time="0.406" tests="3">
    <testcase classname="pathsEqual() helper method returns true on equal paths" name="pathsEqual() helper method returns true on equal paths" time="0.001">
    </testcase>
    <testcase classname="pathsEqual() helper method returns false on different paths" name="pathsEqual() helper method returns false on different paths" time="0">
    </testcase>
    <testcase classname="pathsEqual() helper method return false when one or more paths have wrong format" name="pathsEqual() helper method return false when one or more paths have wrong format" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="observableFromObservablePool()" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:35" time="0.494" tests="3">
    <testcase classname="observableFromObservablePool() acquires the actual resource on subscription" name="observableFromObservablePool() acquires the actual resource on subscription" time="0.004">
    </testcase>
    <testcase classname="observableFromObservablePool() releases the actual resource when unsubscribed" name="observableFromObservablePool() releases the actual resource when unsubscribed" time="0.001">
    </testcase>
    <testcase classname="observableFromObservablePool() wires up the observables correctly" name="observableFromObservablePool() wires up the observables correctly" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="createRelease" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:35" time="0.501" tests="5">
    <testcase classname="createRelease should handle a single simple changeset" name="createRelease should handle a single simple changeset" time="0.009">
    </testcase>
    <testcase classname="createRelease should flatten flatten commits in two simple changesets" name="createRelease should flatten flatten commits in two simple changesets" time="0.001">
    </testcase>
    <testcase classname="createRelease should handle dependents" name="createRelease should handle dependents" time="0.001">
    </testcase>
    <testcase classname="createRelease should handle a none release" name="createRelease should handle a none release" time="0">
    </testcase>
    <testcase classname="createRelease should handle a deleted package" name="createRelease should handle a deleted package" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Ellipsify" errors="0" failures="0" skipped="2" timestamp="2018-01-09T09:41:36" time="0.604" tests="2">
    <testcase classname="Ellipsify Dont cut text where there are enough lines" name="Ellipsify Dont cut text where there are enough lines" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Ellipsify Cut text where there is not enough lines" name="Ellipsify Cut text where there is not enough lines" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="CardLoading" errors="0" failures="0" skipped="2" timestamp="2018-01-09T09:41:36" time="0.606" tests="2">
    <testcase classname="CardLoading should render the right icon based on the itemType" name="CardLoading should render the right icon based on the itemType" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CardLoading should render icon with the right size" name="CardLoading should render icon with the right size" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="@atlaskit/datetime-picker" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:36" time="0.483" tests="1">
    <testcase classname="@atlaskit/datetime-picker Input should render an AK Input with the correct props" name="@atlaskit/datetime-picker Input should render an AK Input with the correct props" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="MediaImage styled" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:36" time="0.431" tests="3">
    <testcase classname="MediaImage styled default props" name="MediaImage styled default props" time="0.014">
    </testcase>
    <testcase classname="MediaImage styled isCropped=true" name="MediaImage styled isCropped=true" time="0.005">
    </testcase>
    <testcase classname="MediaImage styled fadeIn=true" name="MediaImage styled fadeIn=true" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:37" time="0.3" tests="2">
    <testcase classname=" cursor should be &quot;default&quot;" name=" cursor should be &quot;default&quot;" time="0.013">
    </testcase>
    <testcase classname=" disabled - cursor should be &quot;not-allowed&quot;" name=" disabled - cursor should be &quot;not-allowed&quot;" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="rule" errors="0" failures="0" skipped="1" timestamp="2018-01-09T09:41:35" time="1.832" tests="1">
    <testcase classname="rule keymap when hits Shift-Ctrl-- calls splitCodeBlock" name="rule keymap when hits Shift-Ctrl-- calls splitCodeBlock" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="Lazy Content styled" errors="0" failures="0" skipped="0" timestamp="2018-01-09T09:41:37" time="0.396" tests="1">
    <testcase classname="Lazy Content styled should override LazilyRender with a 100% dimensions" name="Lazy Content styled should override LazilyRender with a 100% dimensions" time="0.078">
    </testcase>
  </testsuite>
</testsuites>