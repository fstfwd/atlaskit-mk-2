image: node:8.4.0
# This ensures we do a full clone on each build which prevents issues when cross referencing
# changesets and releases
clone:
  depth: full
options:
  size: 2x

pipelines:
  branches:
    master:
      - step:
          script:
            # Note: in master, this script will rebase you onto latest origin/master
            - source ./build-setup.sh
            - bolt install --pure-lockfile
            - (cd build/ci-scripts && yarn stop-if-older-build)
            - yarn build
            # Disabled until we get rid of the race condition in Landkid
            # - yarn lint
            # - yarn typecheck
            # - yarn test
            # Disabled until we find the source of the flakeyness
            # - yarn test:browser:browserstack
            - yarn release
            - (cd build/ci-scripts && yarn restart-stopped-build)
          caches:
            - node

  default:
    - parallel:
        - step:
            name: Running Jest 1 of 2 chunks %n
            script:
              - echo "$BITBUCKET_PARALLEL_STEP of $BITBUCKET_PARALLEL_STEP_COUNT"
              - yarn global add "bolt@^0.19.2"
              - bolt
              - PARALLELIZE_TESTS="$(yarn --silent jest --listTests)" yarn jest
        - step:
            name: Running Jest  2 of 2 chunks %n
            script:
              - echo "$BITBUCKET_STEP_INDEX of $BITBUCKET_STEP_COUNT"
              - yarn global add "bolt@^0.19.2"
              - bolt
              - PARALLELIZE_TESTS="$(yarn --silent jest --listTests)" yarn jest

  custom: # Pipelines that can be scheduled or triggered manually

    # This should only be called by a scheduled build
    build-website-production:
      - step:
          script:
            - source ./build-setup.sh
            - bolt install --pure-lockfile
            - (cd website && yarn deploy)
          caches:
            - node

    # This will run with the webdriver tests
    build-webdriver:
    - step:
          script:
            - source ./build-setup.sh
            - bolt install --pure-lockfile
            - yarn test:build:webdriver:browserstack
          caches:
            - node

    # This will run essentially the branch builds, but without any optimizations and should be manually
    # run in any potentially risky builds
    run-full-suite:
      - step:
          script:
            - source ./build-setup.sh
            - bolt install --pure-lockfile
            - yarn build
            - yarn lint
            - yarn typecheck
            - yarn test
            - yarn test:browser:browserstack
            - (cd website && yarn deploy-staging:no-minimize)
    # We deliberately don't use the cache here as well

    landkid:
      - step:
          script:
            - source ./build-setup.sh
            - git merge master --no-edit
            - bolt install --pure-lockfile
            - yarn build
            - yarn lint
            - yarn typecheck
            - yarn test
            # Disabled until we find the source of the flakeyness
            # - yarn test:browser:browserstack

    # This build should only be run on the master branch, once per day.
    # It manually clears the cache and runs a very quick install and test to seed the jest and node_modules
    # We split into two steps so that one can clear the cache so that the second one starts with no cache
    # (Which causes it to upload when it's finished).
    # It's important for this to run fast and whilst nothing else is running, as any other build could
    # seed the cache if they finished in time.
    reseed-pipelines-cache:
      - step:
          name: Clearing old cache
          script:
            - ([[ "$BITBUCKET_BRANCH" == "master" ]]) || (echo "This build should only be run on master" && return 1)
            - cd build/ci-scripts
            - yarn install --pure-lockfile
            - node clear.pipelines.node.cache.js
      - step:
          name: Creating new cache
          script:
            - source ./build-setup.sh
            - bolt install --pure-lockfile
            - yarn test
            # Run this again, just in case someone else has started and finished before us and re-seeded the cache
            - node build/ci-scripts/clear.pipelines.node.cache.js
          caches:
            - node
